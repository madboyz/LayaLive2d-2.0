{"version":3,"file":"bundle.js","sources":["../../src/framework/type/csmstring.ts","../../src/framework/utils/cubismdebug.ts","../../src/framework/type/csmmap.ts","../../src/framework/type/csmvector.ts","../../src/framework/utils/cubismjson.ts","../../src/framework/id/cubismid.ts","../../src/framework/id/cubismidmanager.ts","../../src/framework/math/cubismmatrix44.ts","../../src/framework/rendering/cubismrenderer.ts","../../src/framework/live2dcubismframework.ts","../../src/Adapter/core/Delegate.ts","../../src/framework/math/cubismvector2.ts","../../src/framework/math/cubismmath.ts","../../src/framework/motion/acubismmotion.ts","../../src/framework/motion/cubismmotionqueueentry.ts","../../src/framework/motion/cubismmotionqueuemanager.ts","../../src/framework/motion/cubismmotionmanager.ts","../../src/framework/math/cubismmodelmatrix.ts","../../src/framework/motion/cubismmotionjson.ts","../../src/framework/motion/cubismmotioninternal.ts","../../src/framework/motion/cubismmotion.ts","../../src/framework/motion/cubismexpressionmotion.ts","../../src/framework/icubismmodelsetting.ts","../../src/framework/cubismmodelsettingjson.ts","../../src/framework/model/cubismmodel.ts","../../src/framework/model/cubismmoc.ts","../../src/framework/physics/cubismphysicsinternal.ts","../../src/framework/physics/cubismphysicsjson.ts","../../src/framework/physics/cubismphysics.ts","../../src/framework/effect/cubismpose.ts","../../src/framework/effect/cubismbreath.ts","../../src/framework/effect/cubismeyeblink.ts","../../src/framework/cubismdefaultparameterid.ts","../../src/framework/model/cubismmodeluserdatajson.ts","../../src/framework/model/cubismmodeluserdata.ts","../../src/framework/math/cubismtargetpoint.ts","../../src/framework/type/csmrectf.ts","../../src/Adapter/core/Live2DTime.ts","../../src/Adapter/render/Live2DSubmit.ts","../../src/Adapter/render/Live2Drenderer.ts","../../src/Adapter/core/Live2DConfig.ts","../../src/Adapter/model/Live2DModel.ts","../../src/Adapter/net/Live2DLoader.ts","../../src/Main.ts"],"sourcesContent":["/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nexport namespace Live2DCubismFramework {\n  /**\n   * 文字列クラス。\n   */\n  export class csmString {\n    /**\n     * 文字列を後方に追加する\n     *\n     * @param c 追加する文字列\n     * @return 更新された文字列\n     */\n    public append(c: string, length?: number): csmString {\n      this.s += length !== undefined ? c.substr(0, length) : c;\n\n      return this;\n    }\n\n    /**\n     * 文字サイズを拡張して文字を埋める\n     * @param length    拡張する文字数\n     * @param v         埋める文字\n     * @return 更新された文字列\n     */\n    public expansion(length: number, v: string): csmString {\n      for (let i = 0; i < length; i++) {\n        this.append(v);\n      }\n\n      return this;\n    }\n\n    /**\n     * 文字列の長さをバイト数で取得する\n     */\n    public getBytes(): number {\n      return encodeURIComponent(this.s).replace(/%../g, 'x').length;\n    }\n\n    /**\n     * 文字列の長さを返す\n     */\n    public getLength(): number {\n      return this.s.length;\n    }\n\n    /**\n     * 文字列比較 <\n     * @param s 比較する文字列\n     * @return true:    比較する文字列より小さい\n     * @return false:   比較する文字列より大きい\n     */\n    public isLess(s: csmString): boolean {\n      return this.s < s.s;\n    }\n\n    /**\n     * 文字列比較 >\n     * @param s 比較する文字列\n     * @return true:    比較する文字列より大きい\n     * @return false:   比較する文字列より小さい\n     */\n    public isGreat(s: csmString): boolean {\n      return this.s > s.s;\n    }\n\n    /**\n     * 文字列比較 ==\n     * @param s 比較する文字列\n     * @return true:    比較する文字列と等しい\n     * @return false:   比較する文字列と異なる\n     */\n    public isEqual(s: string): boolean {\n      return this.s == s;\n    }\n\n    /**\n     * 文字列が空かどうか\n     * @return true: 空の文字列\n     * @return false: 値が設定されている\n     */\n    public isEmpty(): boolean {\n      return this.s.length == 0;\n    }\n\n    /**\n     * 引数付きコンストラクタ\n     */\n    public constructor(s: string) {\n      this.s = s;\n    }\n\n    s: string;\n  }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport {\n  Live2DCubismFramework as cubismframework,\n  LogLevel\n} from '../live2dcubismframework';\n\nimport {\n  CSM_LOG_LEVEL,\n  CSM_LOG_LEVEL_VERBOSE,\n  CSM_LOG_LEVEL_DEBUG,\n  CSM_LOG_LEVEL_INFO,\n  CSM_LOG_LEVEL_WARNING,\n  CSM_LOG_LEVEL_ERROR\n} from '../cubismframeworkconfig';\n\nexport const CubismLogPrint = (level: LogLevel, fmt: string, args: any[]) => {\n  Live2DCubismFramework.CubismDebug.print(level, '[CSM]' + fmt, args);\n};\n\nexport const CubismLogPrintIn = (level: LogLevel, fmt: string, args: any[]) => {\n  CubismLogPrint(level, fmt + '\\n', args);\n};\n\nexport const CSM_ASSERT = (expr: any) => {\n  console.assert&&console.assert(expr);\n};\n\nexport let CubismLogVerbose: (fmt: string, ...args: any[]) => void;\nexport let CubismLogDebug: (fmt: string, ...args: any[]) => void;\nexport let CubismLogInfo: (fmt: string, ...args: any[]) => void;\nexport let CubismLogWarning: (fmt: string, ...args: any[]) => void;\nexport let CubismLogError: (fmt: string, ...args: any[]) => void;\n\nif (CSM_LOG_LEVEL <= CSM_LOG_LEVEL_VERBOSE) {\n  CubismLogVerbose = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Verbose, '[V]' + fmt, args);\n  };\n\n  CubismLogDebug = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Debug, '[D]' + fmt, args);\n  };\n\n  CubismLogInfo = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Info, '[I]' + fmt, args);\n  };\n\n  CubismLogWarning = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\n  };\n\n  CubismLogError = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n  };\n} else if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_DEBUG) {\n  CubismLogDebug = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Debug, '[D]' + fmt, args);\n  };\n\n  CubismLogInfo = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Info, '[I]' + fmt, args);\n  };\n\n  CubismLogWarning = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\n  };\n\n  CubismLogError = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n  };\n} else if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_INFO) {\n  CubismLogInfo = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Info, '[I]' + fmt, args);\n  };\n\n  CubismLogWarning = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\n  };\n\n  CubismLogError = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n  };\n} else if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_WARNING) {\n  CubismLogWarning = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\n  };\n\n  CubismLogError = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n  };\n} else if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_ERROR) {\n  CubismLogError = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n  };\n}\n\n//------------ LIVE2D NAMESPACE ------------\nexport namespace Live2DCubismFramework {\n  /**\n   * デバッグ用のユーティリティクラス。\n   * ログの出力、バイトのダンプなど\n   */\n  export class CubismDebug {\n    /**\n     * ログを出力する。第一引数にログレベルを設定する。\n     * CubismFramework.initialize()時にオプションで設定されたログ出力レベルを下回る場合はログに出さない。\n     *\n     * @param logLevel ログレベルの設定\n     * @param format 書式付き文字列\n     * @param args 可変長引数\n     */\n    public static print(\n      logLevel: LogLevel,\n      format: string,\n      args?: any[]\n    ): void {\n      // オプションで設定されたログ出力レベルを下回る場合はログに出さない\n      if (logLevel < cubismframework.CubismFramework.getLoggingLevel()) {\n        return;\n      }\n\n      const logPrint: Live2DCubismCore.csmLogFunction =\n        cubismframework.CubismFramework.coreLogFunction;\n\n      if (!logPrint) return;\n\n      const buffer: string = format.replace(/\\{(\\d+)\\}/g, (m, k) => {\n        return args[k];\n      });\n      logPrint(buffer);\n    }\n\n    /**\n     * データから指定した長さだけダンプ出力する。\n     * CubismFramework.initialize()時にオプションで設定されたログ出力レベルを下回る場合はログに出さない。\n     *\n     * @param logLevel ログレベルの設定\n     * @param data ダンプするデータ\n     * @param length ダンプする長さ\n     */\n    public static dumpBytes(\n      logLevel: LogLevel,\n      data: Uint8Array,\n      length: number\n    ): void {\n      for (let i = 0; i < length; i++) {\n        if (i % 16 == 0 && i > 0) this.print(logLevel, '\\n');\n        else if (i % 8 == 0 && i > 0) this.print(logLevel, '  ');\n        this.print(logLevel, '{0} ', [data[i] & 0xff]);\n      }\n\n      this.print(logLevel, '\\n');\n    }\n\n    /**\n     * private コンストラクタ\n     */\n    private constructor() {}\n  }\n}\n\n//------------ LIVE2D NAMESPACE ------------\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismLogDebug } from '../utils/cubismdebug';\n\nexport namespace Live2DCubismFramework {\n  /**\n   * Key-Valueのペアを定義するクラス\n   * csmMapクラスの内部データで使用する。\n   */\n  export class csmPair<_KeyT, _ValT> {\n    /**\n     * コンストラクタ\n     * @param key Keyとしてセットする値\n     * @param value Valueとしてセットする値\n     */\n    public constructor(key?: _KeyT, value?: _ValT) {\n      this.first = key == undefined ? null : key;\n\n      this.second = value == undefined ? null : value;\n    }\n\n    public first: _KeyT; // keyとして用いる変数\n    public second: _ValT; // valueとして用いる変数\n  }\n\n  /**\n   * マップ型\n   */\n  export class csmMap<_KeyT, _ValT> {\n    /**\n     * 引数付きコンストラクタ\n     * @param size 初期化時点で確保するサイズ\n     */\n    public constructor(size?: number) {\n      if (size != undefined) {\n        if (size < 1) {\n          this._keyValues = [];\n          this._dummyValue = null;\n          this._size = 0;\n        } else {\n          this._keyValues = new Array(size);\n          this._size = size;\n        }\n      } else {\n        this._keyValues = [];\n        this._dummyValue = null;\n        this._size = 0;\n      }\n    }\n\n    /**\n     * デストラクタ\n     */\n    public release() {\n      this.clear();\n    }\n\n    /**\n     * キーを追加する\n     * @param key 新たに追加するキー\n     */\n    public appendKey(key: _KeyT): void {\n      // 新しくKey/Valueのペアを作る\n      this.prepareCapacity(this._size + 1, false); // 1つ以上入る隙間を作る\n      // 新しいkey/valueのインデックスは_size\n\n      this._keyValues[this._size] = new csmPair<_KeyT, _ValT>(key);\n      this._size += 1;\n    }\n\n    /**\n     * 添字演算子[key]のオーバーロード(get)\n     * @param key 添字から特定されるValue値\n     */\n    public getValue(key: _KeyT): _ValT {\n      let found = -1;\n\n      for (let i = 0; i < this._size; i++) {\n        if (this._keyValues[i].first == key) {\n          found = i;\n          break;\n        }\n      }\n\n      if (found >= 0) {\n        return this._keyValues[found].second;\n      } else {\n        this.appendKey(key); // 新規キーを追加\n        return this._keyValues[this._size - 1].second;\n      }\n    }\n\n    /**\n     * 添字演算子[key]のオーバーロード(set)\n     * @param key 添字から特定されるValue値\n     * @param value 代入するValue値\n     */\n    public setValue(key: _KeyT, value: _ValT): void {\n      let found = -1;\n\n      for (let i = 0; i < this._size; i++) {\n        if (this._keyValues[i].first == key) {\n          found = i;\n          break;\n        }\n      }\n\n      if (found >= 0) {\n        this._keyValues[found].second = value;\n      } else {\n        this.appendKey(key); // 新規キーを追加\n        this._keyValues[this._size - 1].second = value;\n      }\n    }\n\n    /**\n     * 引数で渡したKeyを持つ要素が存在するか\n     * @param key 存在を確認するkey\n     * @return true 引数で渡したkeyを持つ要素が存在する\n     * @return false 引数で渡したkeyを持つ要素が存在しない\n     */\n    public isExist(key: _KeyT): boolean {\n      for (let i = 0; i < this._size; i++) {\n        if (this._keyValues[i].first == key) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * keyValueのポインタを全て解放する\n     */\n    public clear(): void {\n      this._keyValues = void 0;\n      this._keyValues = null;\n      this._keyValues = [];\n\n      this._size = 0;\n    }\n\n    /**\n     * コンテナのサイズを取得する\n     *\n     * @return コンテナのサイズ\n     */\n    public getSize(): number {\n      return this._size;\n    }\n\n    /**\n     * コンテナのキャパシティを確保する\n     * @param newSize 新たなキャパシティ。引数の値が現在のサイズ未満の場合は何もしない。\n     * @param fitToSize trueなら指定したサイズに合わせる。falseならサイズを2倍確保しておく。\n     */\n    public prepareCapacity(newSize: number, fitToSize: boolean): void {\n      if (newSize > this._keyValues.length) {\n        if (this._keyValues.length == 0) {\n          if (!fitToSize && newSize < csmMap.DefaultSize)\n            newSize = csmMap.DefaultSize;\n          this._keyValues.length = newSize;\n        } else {\n          if (!fitToSize && newSize < this._keyValues.length * 2)\n            newSize = this._keyValues.length * 2;\n          this._keyValues.length = newSize;\n        }\n      }\n    }\n\n    /**\n     * コンテナの先頭要素を返す\n     */\n    public begin(): iterator<_KeyT, _ValT> {\n      const ite: iterator<_KeyT, _ValT> = new iterator<_KeyT, _ValT>(this, 0);\n      return ite;\n    }\n\n    /**\n     * コンテナの終端要素を返す\n     */\n    public end(): iterator<_KeyT, _ValT> {\n      const ite: iterator<_KeyT, _ValT> = new iterator<_KeyT, _ValT>(\n        this,\n        this._size\n      ); // 終了\n      return ite;\n    }\n\n    /**\n     * コンテナから要素を削除する\n     *\n     * @param ite 削除する要素\n     */\n    public erase(ite: iterator<_KeyT, _ValT>): iterator<_KeyT, _ValT> {\n      const index: number = ite._index;\n      if (index < 0 || this._size <= index) {\n        return ite; // 削除範囲外\n      }\n\n      // 削除\n      this._keyValues.splice(index, 1);\n      --this._size;\n\n      const ite2: iterator<_KeyT, _ValT> = new iterator<_KeyT, _ValT>(\n        this,\n        index\n      ); // 終了\n      return ite2;\n    }\n\n    /**\n     * コンテナの値を32ビット符号付き整数型でダンプする\n     */\n    public dumpAsInt() {\n      for (let i = 0; i < this._size; i++) {\n        CubismLogDebug('{0} ,', this._keyValues[i]);\n        CubismLogDebug('\\n');\n      }\n    }\n\n    public static readonly DefaultSize = 10; // コンテナの初期化のデフォルトサイズ\n    public _keyValues: csmPair<_KeyT, _ValT>[]; // key-valueペアの配列\n    public _dummyValue: _ValT; // 空の値を返す為のダミー\n    public _size: number; // コンテナの要素数\n  }\n\n  /**\n   * csmMap<T>のイテレータ\n   */\n  export class iterator<_KeyT, _ValT> {\n    /**\n     * コンストラクタ\n     */\n    constructor(v?: csmMap<_KeyT, _ValT>, idx?: number) {\n      this._map = v != undefined ? v : new csmMap<_KeyT, _ValT>();\n\n      this._index = idx != undefined ? idx : 0;\n    }\n\n    /**\n     * =演算子のオーバーロード\n     */\n    public set(ite: iterator<_KeyT, _ValT>): iterator<_KeyT, _ValT> {\n      this._index = ite._index;\n      this._map = ite._map;\n      return this;\n    }\n\n    /**\n     * 前置き++演算子のオーバーロード\n     */\n    public preIncrement(): iterator<_KeyT, _ValT> {\n      ++this._index;\n      return this;\n    }\n\n    /**\n     * 前置き--演算子のオーバーロード\n     */\n    public preDecrement(): iterator<_KeyT, _ValT> {\n      --this._index;\n      return this;\n    }\n\n    /**\n     * 後置き++演算子のオーバーロード\n     */\n    public increment(): iterator<_KeyT, _ValT> {\n      const iteold = new iterator<_KeyT, _ValT>(this._map, this._index++); // 古い値を保存\n      this._map = iteold._map;\n      this._index = iteold._index;\n      return this;\n    }\n\n    /**\n     * 後置き--演算子のオーバーロード\n     */\n    public decrement(): iterator<_KeyT, _ValT> {\n      const iteold = new iterator<_KeyT, _ValT>(this._map, this._index); // 古い値を保存\n      this._map = iteold._map;\n      this._index = iteold._index;\n      return this;\n    }\n\n    /**\n     * *演算子のオーバーロード\n     */\n    public ptr(): csmPair<_KeyT, _ValT> {\n      return this._map._keyValues[this._index];\n    }\n\n    /**\n     * !=演算\n     */\n    public notEqual(ite: iterator<_KeyT, _ValT>): boolean {\n      return this._index != ite._index || this._map != ite._map;\n    }\n\n    _index: number; // コンテナのインデックス値\n    _map: csmMap<_KeyT, _ValT>; // コンテナ\n  }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nexport namespace Live2DCubismFramework {\n  /**\n   * ベクター型（可変配列型）\n   */\n  export class csmVector<T> {\n    /**\n     * 引数付きコンストラクタ\n     * @param iniitalCapacity 初期化後のキャパシティ。データサイズは_capacity * sizeof(T)\n     * @param zeroClear trueなら初期化時に確保した領域を0で埋める\n     */\n    constructor(initialCapacity = 0) {\n      if (initialCapacity < 1) {\n        this._ptr = [];\n        this._capacity = 0;\n        this._size = 0;\n      } else {\n        this._ptr = new Array(initialCapacity);\n        this._capacity = initialCapacity;\n        this._size = 0;\n      }\n    }\n\n    /**\n     * インデックスで指定した要素を返す\n     */\n    public at(index: number): T {\n      return this._ptr[index];\n    }\n\n    /**\n     * 要素をセット\n     * @param index 要素をセットするインデックス\n     * @param value セットする要素\n     */\n    public set(index: number, value: T): void {\n      this._ptr[index] = value;\n    }\n\n    /**\n     * コンテナを取得する\n     */\n    public get(offset = 0): T[] {\n      const ret: T[] = new Array<T>();\n      for (let i = offset; i < this._size; i++) {\n        ret.push(this._ptr[i]);\n      }\n      return ret;\n    }\n\n    /**\n     * pushBack処理、コンテナに新たな要素を追加する\n     * @param value PushBack処理で追加する値\n     */\n    public pushBack(value: T): void {\n      if (this._size >= this._capacity) {\n        this.prepareCapacity(\n          this._capacity == 0 ? csmVector.s_defaultSize : this._capacity * 2\n        );\n      }\n\n      this._ptr[this._size++] = value;\n    }\n\n    /**\n     * コンテナの全要素を解放する\n     */\n    public clear(): void {\n      this._ptr.length = 0;\n      this._size = 0;\n    }\n\n    /**\n     * コンテナの要素数を返す\n     * @return コンテナの要素数\n     */\n    public getSize(): number {\n      return this._size;\n    }\n\n    /**\n     * コンテナの全要素に対して代入処理を行う\n     * @param newSize 代入処理後のサイズ\n     * @param value 要素に代入する値\n     */\n    public assign(newSize: number, value: T): void {\n      const curSize = this._size;\n\n      if (curSize < newSize) {\n        this.prepareCapacity(newSize); // capacity更新\n      }\n\n      for (let i = 0; i < newSize; i++) {\n        this._ptr[i] = value;\n      }\n\n      this._size = newSize;\n    }\n\n    /**\n     * サイズ変更\n     */\n    public resize(newSize: number, value: T = null): void {\n      this.updateSize(newSize, value, true);\n    }\n\n    /**\n     * サイズ変更\n     */\n    public updateSize(\n      newSize: number,\n      value: any = null,\n      callPlacementNew = true\n    ): void {\n      const curSize: number = this._size;\n\n      if (curSize < newSize) {\n        this.prepareCapacity(newSize); // capacity更新\n\n        if (callPlacementNew) {\n          for (let i: number = this._size; i < newSize; i++) {\n            if (typeof value == 'function') {\n              // new\n              this._ptr[i] = JSON.parse(JSON.stringify(new value()));\n            } // プリミティブ型なので値渡し\n            else {\n              this._ptr[i] = value;\n            }\n          }\n        } else {\n          for (let i: number = this._size; i < newSize; i++) {\n            this._ptr[i] = value;\n          }\n        }\n      } else {\n        // newSize <= this._size\n        //---\n        const sub = this._size - newSize;\n        this._ptr.splice(this._size - sub, sub); // 不要なので破棄する\n      }\n      this._size = newSize;\n    }\n\n    /**\n     * コンテナにコンテナ要素を挿入する\n     * @param position 挿入する位置\n     * @param begin 挿入するコンテナの開始位置\n     * @param end 挿入するコンテナの終端位置\n     */\n    public insert(\n      position: iterator<T>,\n      begin: iterator<T>,\n      end: iterator<T>\n    ): void {\n      let dstSi: number = position._index;\n      const srcSi: number = begin._index;\n      const srcEi: number = end._index;\n\n      const addCount: number = srcEi - srcSi;\n\n      this.prepareCapacity(this._size + addCount);\n\n      // 挿入用の既存データをシフトして隙間を作る\n      const addSize = this._size - dstSi;\n      if (addSize > 0) {\n        for (let i = 0; i < addSize; i++) {\n          this._ptr.splice(dstSi + i, 0, null);\n        }\n      }\n\n      for (let i: number = srcSi; i < srcEi; i++, dstSi++) {\n        this._ptr[dstSi] = begin._vector._ptr[i];\n      }\n\n      this._size = this._size + addCount;\n    }\n\n    /**\n     * コンテナからインデックスで指定した要素を削除する\n     * @param index インデックス値\n     * @return true 削除実行\n     * @return false 削除範囲外\n     */\n    public remove(index: number): boolean {\n      if (index < 0 || this._size <= index) {\n        return false; // 削除範囲外\n      }\n\n      this._ptr.splice(index, 1);\n      --this._size;\n\n      return true;\n    }\n\n    /**\n     * コンテナから要素を削除して他の要素をシフトする\n     * @param ite 削除する要素\n     */\n    public erase(ite: iterator<T>): iterator<T> {\n      const index: number = ite._index;\n      if (index < 0 || this._size <= index) {\n        return ite; // 削除範囲外\n      }\n\n      // 削除\n      this._ptr.splice(index, 1);\n      --this._size;\n\n      const ite2: iterator<T> = new iterator<T>(this, index); // 終了\n      return ite2;\n    }\n\n    /**\n     * コンテナのキャパシティを確保する\n     * @param newSize 新たなキャパシティ。引数の値が現在のサイズ未満の場合は何もしない.\n     */\n    public prepareCapacity(newSize: number): void {\n      if (newSize > this._capacity) {\n        if (this._capacity == 0) {\n          this._ptr = new Array(newSize);\n          this._capacity = newSize;\n        } else {\n          this._ptr.length = newSize;\n          this._capacity = newSize;\n        }\n      }\n    }\n\n    /**\n     * コンテナの先頭要素を返す\n     */\n    public begin(): iterator<T> {\n      const ite: iterator<T> =\n        this._size == 0 ? this.end() : new iterator<T>(this, 0);\n      return ite;\n    }\n\n    /**\n     * コンテナの終端要素を返す\n     */\n    public end(): iterator<T> {\n      const ite: iterator<T> = new iterator<T>(this, this._size);\n      return ite;\n    }\n\n    public getOffset(offset: number): csmVector<T> {\n      const newVector = new csmVector<T>();\n      newVector._ptr = this.get(offset);\n      newVector._size = this.get(offset).length;\n      newVector._capacity = this.get(offset).length;\n\n      return newVector;\n    }\n\n    _ptr: T[]; // コンテナの先頭アドレス\n    _size: number; // コンテナの要素数\n    _capacity: number; // コンテナのキャパシティ\n\n    static readonly s_defaultSize = 10; // コンテナ初期化のデフォルトサイズ\n  }\n\n  export class iterator<T> {\n    /**\n     * コンストラクタ\n     */\n    public constructor(v?: csmVector<T>, index?: number) {\n      this._vector = v != undefined ? v : null;\n      this._index = index != undefined ? index : 0;\n    }\n\n    /**\n     * 代入\n     */\n    public set(ite: iterator<T>): iterator<T> {\n      this._index = ite._index;\n      this._vector = ite._vector;\n      return this;\n    }\n\n    /**\n     * 前置き++演算\n     */\n    public preIncrement(): iterator<T> {\n      ++this._index;\n      return this;\n    }\n\n    /**\n     * 前置き--演算\n     */\n    public preDecrement(): iterator<T> {\n      --this._index;\n      return this;\n    }\n\n    /**\n     * 後置き++演算子\n     */\n    public increment(): iterator<T> {\n      const iteold = new iterator<T>(this._vector, this._index++);\n      this._vector = iteold._vector;\n      this._index = iteold._index;\n      return this;\n    }\n\n    /**\n     * 後置き--演算子\n     */\n    public decrement(): iterator<T> {\n      const iteold = new iterator<T>(this._vector, this._index--); // 古い値を保存\n      this._vector = iteold._vector;\n      this._index = iteold._index;\n      return this;\n    }\n\n    /**\n     * ptr\n     */\n    public ptr(): T {\n      return this._vector._ptr[this._index];\n    }\n\n    /**\n     * =演算子のオーバーロード\n     */\n    public substitution(ite: iterator<T>): iterator<T> {\n      this._index = ite._index;\n      this._vector = ite._vector;\n      return this;\n    }\n\n    /**\n     * !=演算子のオーバーロード\n     */\n    public notEqual(ite: iterator<T>): boolean {\n      return this._index != ite._index || this._vector != ite._vector;\n    }\n\n    _index: number; // コンテナのインデックス値\n    _vector: csmVector<T>; // コンテナ\n  }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { Live2DCubismFramework as csmstring } from '../type/csmstring';\nimport { Live2DCubismFramework as csmmap } from '../type/csmmap';\nimport { Live2DCubismFramework as csmvector } from '../type/csmvector';\nimport { CubismLogInfo } from './cubismdebug';\nimport { strtod } from '../live2dcubismframework';\nimport csmVector = csmvector.csmVector;\nimport csmVector_iterator = csmvector.iterator;\nimport csmMap = csmmap.csmMap;\nimport csmMap_iterator = csmmap.iterator;\nimport csmString = csmstring.csmString;\n\nexport namespace Live2DCubismFramework {\n  // StaticInitializeNotForClientCall()で初期化する\n  const CSM_JSON_ERROR_TYPE_MISMATCH = 'Error: type mismatch';\n  const CSM_JSON_ERROR_INDEX_OF_BOUNDS = 'Error: index out of bounds';\n\n  /**\n   * パースしたJSONエレメントの要素の基底クラス。\n   */\n  export abstract class Value {\n    /**\n     * コンストラクタ\n     */\n    public constructor() {}\n\n    /**\n     * 要素を文字列型で返す(csmString型)\n     */\n    public abstract getString(defaultValue?: string, indent?: string): string;\n\n    /**\n     * 要素を文字列型で返す(string)\n     */\n    public getRawString(defaultValue?: string, indent?: string): string {\n      return this.getString(defaultValue, indent);\n    }\n\n    /**\n     * 要素を数値型で返す(number)\n     */\n    public toInt(defaultValue = 0): number {\n      return defaultValue;\n    }\n\n    /**\n     * 要素を数値型で返す(number)\n     */\n    public toFloat(defaultValue = 0): number {\n      return defaultValue;\n    }\n\n    /**\n     * 要素を真偽値で返す(boolean)\n     */\n    public toBoolean(defaultValue = false): boolean {\n      return defaultValue;\n    }\n\n    /**\n     * サイズを返す\n     */\n    public getSize(): number {\n      return 0;\n    }\n\n    /**\n     * 要素を配列で返す(Value[])\n     */\n    public getArray(defaultValue: Value[] = null): Value[] {\n      return defaultValue;\n    }\n\n    /**\n     * 要素をコンテナで返す(array)\n     */\n    public getVector(defaultValue?: csmVector<Value>): csmVector<Value> {\n      return defaultValue;\n    }\n\n    /**\n     * 要素をマップで返す(csmMap<csmString, Value>)\n     */\n    public getMap(defaultValue?: csmMap<string, Value>): csmMap<string, Value> {\n      return defaultValue;\n    }\n\n    /**\n     * 添字演算子[index]\n     */\n    public getValueByIndex(index: number): Value {\n      return Value.errorValue.setErrorNotForClientCall(\n        CSM_JSON_ERROR_TYPE_MISMATCH\n      );\n    }\n\n    /**\n     * 添字演算子[string | csmString]\n     */\n    public getValueByString(s: string | csmString): Value {\n      return Value.nullValue.setErrorNotForClientCall(\n        CSM_JSON_ERROR_TYPE_MISMATCH\n      );\n    }\n\n    /**\n     * マップのキー一覧をコンテナで返す\n     *\n     * @return マップのキーの一覧\n     */\n    public getKeys(): csmVector<string> {\n      return Value.s_dummyKeys;\n    }\n\n    /**\n     * Valueの種類がエラー値ならtrue\n     */\n    public isError(): boolean {\n      return false;\n    }\n\n    /**\n     * Valueの種類がnullならtrue\n     */\n    public isNull(): boolean {\n      return false;\n    }\n\n    /**\n     * Valueの種類が真偽値ならtrue\n     */\n    public isBool(): boolean {\n      return false;\n    }\n\n    /**\n     * Valueの種類が数値型ならtrue\n     */\n    public isFloat(): boolean {\n      return false;\n    }\n\n    /**\n     * Valueの種類が文字列ならtrue\n     */\n    public isString(): boolean {\n      return false;\n    }\n\n    /**\n     * Valueの種類が配列ならtrue\n     */\n    public isArray(): boolean {\n      return false;\n    }\n\n    /**\n     * Valueの種類がマップ型ならtrue\n     */\n    public isMap(): boolean {\n      return false;\n    }\n\n    /**\n     * 引数の値と等しければtrue\n     */\n    public equals(value: csmString): boolean;\n    public equals(value: string): boolean;\n    public equals(value: number): boolean;\n    public equals(value: boolean): boolean;\n    public equals(value: any): boolean {\n      return false;\n    }\n\n    /**\n     * Valueの値が静的ならtrue、静的なら解放しない\n     */\n    public isStatic(): boolean {\n      return false;\n    }\n\n    /**\n     * Valueにエラー値をセットする\n     */\n    public setErrorNotForClientCall(errorStr: string): Value {\n      return JsonError.errorValue;\n    }\n\n    /**\n     * 初期化用メソッド\n     */\n    public static staticInitializeNotForClientCall(): void {\n      JsonBoolean.trueValue = new JsonBoolean(true);\n      JsonBoolean.falseValue = new JsonBoolean(false);\n\n      JsonError.errorValue = new JsonError('ERROR', true);\n      this.nullValue = new JsonNullvalue();\n\n      Value.s_dummyKeys = new csmVector<string>();\n    }\n\n    /**\n     * リリース用メソッド\n     */\n    public static staticReleaseNotForClientCall(): void {\n      JsonBoolean.trueValue = null;\n      JsonBoolean.falseValue = null;\n      JsonError.errorValue = null;\n      Value.nullValue = null;\n      Value.s_dummyKeys = null;\n\n      JsonBoolean.trueValue = null;\n      JsonBoolean.falseValue = null;\n      JsonError.errorValue = null;\n      Value.nullValue = null;\n      Value.s_dummyKeys = null;\n    }\n\n    protected _stringBuffer: string; // 文字列バッファ\n\n    private static s_dummyKeys: csmVector<string>; // ダミーキー\n\n    public static errorValue: Value; // 一時的な返り値として返すエラー。 CubismFramework::Disposeするまではdeleteしない\n    public static nullValue: Value; // 一時的な返り値として返すNULL。   CubismFramework::Disposeするまではdeleteしない\n  }\n\n  /**\n   * Ascii文字のみ対応した最小限の軽量JSONパーサ。\n   * 仕様はJSONのサブセットとなる。\n   * 設定ファイル(model3.json)などのロード用\n   *\n   * [未対応項目]\n   * ・日本語などの非ASCII文字\n   * ・eによる指数表現\n   */\n  export class CubismJson {\n    /**\n     * コンストラクタ\n     */\n    public constructor(buffer?: ArrayBuffer, length?: number) {\n      this._error = null;\n      this._lineCount = 0;\n      this._root = null;\n\n      if (buffer != undefined) {\n        this.parseBytes(buffer, length);\n      }\n    }\n\n    /**\n     * バイトデータから直接ロードしてパースする\n     *\n     * @param buffer バッファ\n     * @param size バッファサイズ\n     * @return CubismJsonクラスのインスタンス。失敗したらNULL\n     */\n    public static create(buffer: ArrayBuffer, size: number) {\n      const json = new CubismJson();\n      const succeeded: boolean = json.parseBytes(buffer, size);\n\n      if (!succeeded) {\n        CubismJson.delete(json);\n        return null;\n      } else {\n        return json;\n      }\n    }\n\n    /**\n     * パースしたJSONオブジェクトの解放処理\n     *\n     * @param instance CubismJsonクラスのインスタンス\n     */\n    public static delete(instance: CubismJson) {\n      instance = null;\n    }\n\n    /**\n     * パースしたJSONのルート要素を返す\n     */\n    public getRoot(): Value {\n      return this._root;\n    }\n\n    /**\n     *  UnicodeのバイナリをStringに変換\n     *\n     * @param buffer 変換するバイナリデータ\n     * @return 変換後の文字列\n     */\n    public arrayBufferToString(buffer: ArrayBuffer): string {\n      const uint8Array: Uint8Array = new Uint8Array(buffer);\n      let str = '';\n\n      for (let i = 0, len: number = uint8Array.length; i < len; ++i) {\n        str += '%' + this.pad(uint8Array[i].toString(16));\n      }\n\n      str = decodeURIComponent(str);\n      return str;\n    }\n\n    /**\n     * エンコード、パディング\n     */\n    private pad(n: string): string {\n      return n.length < 2 ? '0' + n : n;\n    }\n\n    /**\n     * JSONのパースを実行する\n     * @param buffer    パース対象のデータバイト\n     * @param size      データバイトのサイズ\n     * return true : 成功\n     * return false: 失敗\n     */\n    public parseBytes(buffer: ArrayBuffer, size: number): boolean {\n      const endPos: number[] = new Array(1); // 参照渡しにするため配列\n      const decodeBuffer: string = this.arrayBufferToString(buffer);\n      this._root = this.parseValue(decodeBuffer, size, 0, endPos);\n\n      if (this._error) {\n        let strbuf = '\\0';\n        strbuf = 'Json parse error : @line ' + (this._lineCount + 1) + '\\n';\n        this._root = new JsonString(strbuf);\n\n        CubismLogInfo('{0}', this._root.getRawString());\n        return false;\n      } else if (this._root == null) {\n        this._root = new JsonError(new csmString(this._error), false); // rootは解放されるのでエラーオブジェクトを別途作成する\n        return false;\n      }\n      return true;\n    }\n\n    /**\n     * パース時のエラー値を返す\n     */\n    public getParseError(): string {\n      return this._error;\n    }\n\n    /**\n     * ルート要素の次の要素がファイルの終端だったらtrueを返す\n     */\n    public checkEndOfFile(): boolean {\n      return this._root.getArray()[1].equals('EOF');\n    }\n\n    /**\n     * JSONエレメントからValue(float,String,Value*,Array,null,true,false)をパースする\n     * エレメントの書式に応じて内部でParseString(), ParseObject(), ParseArray()を呼ぶ\n     *\n     * @param   buffer      JSONエレメントのバッファ\n     * @param   length      パースする長さ\n     * @param   begin       パースを開始する位置\n     * @param   outEndPos   パース終了時の位置\n     * @return      パースから取得したValueオブジェクト\n     */\n    protected parseValue(\n      buffer: string,\n      length: number,\n      begin: number,\n      outEndPos: number[]\n    ) {\n      if (this._error) return null;\n\n      let o: Value = null;\n      let i: number = begin;\n      let f: number;\n\n      for (; i < length; i++) {\n        const c: string = buffer[i];\n        switch (c) {\n          case '-':\n          case '.':\n          case '0':\n          case '1':\n          case '2':\n          case '3':\n          case '4':\n          case '5':\n          case '6':\n          case '7':\n          case '8':\n          case '9': {\n            const afterString: string[] = new Array(1); // 参照渡しにするため\n            f = strtod(buffer.slice(i), afterString);\n            outEndPos[0] = buffer.indexOf(afterString[0]);\n            return new JsonFloat(f);\n          }\n          case '\"':\n            return new JsonString(\n              this.parseString(buffer, length, i + 1, outEndPos)\n            ); // \\\"の次の文字から\n          case '[':\n            o = this.parseArray(buffer, length, i + 1, outEndPos);\n            return o;\n          case '{':\n            o = this.parseObject(buffer, length, i + 1, outEndPos);\n            return o;\n          case 'n': // null以外にない\n            if (i + 3 < length) {\n              o = new JsonNullvalue(); // 解放できるようにする\n              outEndPos[0] = i + 4;\n            } else {\n              this._error = 'parse null';\n            }\n            return o;\n          case 't': // true以外にない\n            if (i + 3 < length) {\n              o = JsonBoolean.trueValue;\n              outEndPos[0] = i + 4;\n            } else {\n              this._error = 'parse true';\n            }\n            return o;\n          case 'f': // false以外にない\n            if (i + 4 < length) {\n              o = JsonBoolean.falseValue;\n              outEndPos[0] = i + 5;\n            } else {\n              this._error = \"illegal ',' position\";\n            }\n            return o;\n          case ',': // Array separator\n            this._error = \"illegal ',' position\";\n            return null;\n          case ']': // 不正な｝だがスキップする。配列の最後に不要な , があると思われる\n            outEndPos[0] = i; // 同じ文字を再処理\n            return null;\n          case '\\n':\n            this._lineCount++;\n          case ' ':\n          case '\\t':\n          case '\\r':\n          default:\n            // スキップ\n            break;\n        }\n      }\n\n      this._error = 'illegal end of value';\n      return null;\n    }\n\n    /**\n     * 次の「\"」までの文字列をパースする。\n     *\n     * @param   string  ->  パース対象の文字列\n     * @param   length  ->  パースする長さ\n     * @param   begin   ->  パースを開始する位置\n     * @param  outEndPos   ->  パース終了時の位置\n     * @return      パースした文F字列要素\n     */\n    protected parseString(\n      string: string,\n      length: number,\n      begin: number,\n      outEndPos: number[]\n    ): string {\n      if (this._error) return null;\n\n      let i = begin;\n      let c: string, c2: string;\n      const ret: csmString = new csmString('');\n      let bufStart: number = begin; // sbufに登録されていない文字の開始位置\n\n      for (; i < length; i++) {\n        c = string[i];\n\n        switch (c) {\n          case '\"': {\n            // 終端の”、エスケープ文字は別に処理されるのでここに来ない\n            outEndPos[0] = i + 1; // ”の次の文字\n            ret.append(string.slice(bufStart), i - bufStart); // 前の文字までを登録する\n            return ret.s;\n          }\n          case '//': {\n            // エスケープの場合\n            i++; // ２文字をセットで扱う\n\n            if (i - 1 > bufStart) {\n              ret.append(string.slice(bufStart), i - bufStart); // 前の文字までを登録する\n            }\n            bufStart = i + 1; // エスケープ（２文字)の次の文字から\n\n            if (i < length) {\n              c2 = string[i];\n\n              switch (c2) {\n                case '\\\\':\n                  ret.expansion(1, '\\\\');\n                  break;\n                case '\"':\n                  ret.expansion(1, '\"');\n                  break;\n                case '/':\n                  ret.expansion(1, '/');\n                  break;\n                case 'b':\n                  ret.expansion(1, '\\b');\n                  break;\n                case 'f':\n                  ret.expansion(1, '\\f');\n                  break;\n                case 'n':\n                  ret.expansion(1, '\\n');\n                  break;\n                case 'r':\n                  ret.expansion(1, '\\r');\n                  break;\n                case 't':\n                  ret.expansion(1, '\\t');\n                  break;\n                case 'u':\n                  this._error = 'parse string/unicord escape not supported';\n                  break;\n                default:\n                  break;\n              }\n            } else {\n              this._error = 'parse string/escape error';\n            }\n          }\n          default: {\n            break;\n          }\n        }\n      }\n\n      this._error = 'parse string/illegal end';\n      return null;\n    }\n\n    /**\n     * JSONのオブジェクトエレメントをパースしてValueオブジェクトを返す\n     *\n     * @param buffer    JSONエレメントのバッファ\n     * @param length    パースする長さ\n     * @param begin     パースを開始する位置\n     * @param outEndPos パース終了時の位置\n     * @return パースから取得したValueオブジェクト\n     */\n    protected parseObject(\n      buffer: string,\n      length: number,\n      begin: number,\n      outEndPos: number[]\n    ): Value {\n      if (this._error) return null;\n      const ret: JsonMap = new JsonMap();\n\n      // Key: Value\n      let key = '';\n      let i: number = begin;\n      let c = '';\n      const localRetEndPos2: number[] = Array(1);\n      let ok = false;\n\n      // , が続く限りループ\n      for (; i < length; i++) {\n        FOR_LOOP: for (; i < length; i++) {\n          c = buffer[i];\n\n          switch (c) {\n            case '\"':\n              key = this.parseString(buffer, length, i + 1, localRetEndPos2);\n              if (this._error) {\n                return null;\n              }\n\n              i = localRetEndPos2[0];\n              ok = true;\n              break FOR_LOOP; //-- loopから出る\n            case '}': // 閉じカッコ\n              outEndPos[0] = i + 1;\n              return ret; // 空\n            case ':':\n              this._error = \"illegal ':' position\";\n              break;\n            case '\\n':\n              this._lineCount++;\n            default:\n              break; // スキップする文字\n          }\n        }\n        if (!ok) {\n          this._error = 'key not found';\n          return null;\n        }\n\n        ok = false;\n\n        // : をチェック\n        FOR_LOOP2: for (; i < length; i++) {\n          c = buffer[i];\n\n          switch (c) {\n            case ':':\n              ok = true;\n              i++;\n              break FOR_LOOP2;\n            case '}':\n              this._error = \"illegal '}' position\";\n              break;\n            case '\\n':\n              this._lineCount++;\n            // case ' ': case '\\t' : case '\\r':\n            default:\n              break; // スキップする文字\n          }\n        }\n\n        if (!ok) {\n          this._error = \"':' not found\";\n          return null;\n        }\n\n        // 値をチェック\n        const value: Value = this.parseValue(\n          buffer,\n          length,\n          i,\n          localRetEndPos2\n        );\n        if (this._error) {\n          return null;\n        }\n\n        i = localRetEndPos2[0];\n\n        // ret.put(key, value);\n        ret.put(key, value);\n\n        FOR_LOOP3: for (; i < length; i++) {\n          c = buffer[i];\n\n          switch (c) {\n            case ',':\n              break FOR_LOOP3;\n            case '}':\n              outEndPos[0] = i + 1;\n              return ret; // 正常終了\n            case '\\n':\n              this._lineCount++;\n            default:\n              break; // スキップ\n          }\n        }\n      }\n\n      this._error = 'illegal end of perseObject';\n      return null;\n    }\n\n    /**\n     * 次の「\"」までの文字列をパースする。\n     * @param buffer    JSONエレメントのバッファ\n     * @param length    パースする長さ\n     * @param begin     パースを開始する位置\n     * @param outEndPos パース終了時の位置\n     * @return パースから取得したValueオブジェクト\n     */\n    protected parseArray(\n      buffer: string,\n      length: number,\n      begin: number,\n      outEndPos: number[]\n    ): Value {\n      if (this._error) return null;\n      let ret: JsonArray = new JsonArray();\n\n      // key : value\n      let i: number = begin;\n      let c: string;\n      const localRetEndpos2: number[] = new Array(1);\n\n      // , が続く限りループ\n      for (; i < length; i++) {\n        // : をチェック\n        const value: Value = this.parseValue(\n          buffer,\n          length,\n          i,\n          localRetEndpos2\n        );\n\n        if (this._error) {\n          return null;\n        }\n        i = localRetEndpos2[0];\n\n        if (value) {\n          ret.add(value);\n        }\n\n        // FOR_LOOP3:\n        // boolean breakflag = false;\n        FOR_LOOP: for (; i < length; i++) {\n          c = buffer[i];\n\n          switch (c) {\n            case ',':\n              // breakflag = true;\n              // break; // 次のKEY, VAlUEへ\n              break FOR_LOOP;\n            case ']':\n              outEndPos[0] = i + 1;\n              return ret; // 終了\n            case '\\n':\n              ++this._lineCount;\n            //case ' ': case '\\t': case '\\r':\n            default:\n              break; // スキップ\n          }\n        }\n      }\n\n      ret = void 0;\n      this._error = 'illegal end of parseObject';\n      return null;\n    }\n\n    _error: string; // パース時のエラー\n    _lineCount: number; // エラー報告に用いる行数カウント\n    _root: Value; // パースされたルート要素\n  }\n\n  /**\n   * パースしたJSONの要素をfloat値として扱う\n   */\n  export class JsonFloat extends Value {\n    /**\n     * コンストラクタ\n     */\n    constructor(v: number) {\n      super();\n\n      this._value = v;\n    }\n\n    /**\n     * Valueの種類が数値型ならtrue\n     */\n    public isFloat(): boolean {\n      return true;\n    }\n\n    /**\n     * 要素を文字列で返す(csmString型)\n     */\n    public getString(defaultValue: string, indent: string): string {\n      const strbuf = '\\0';\n      this._value = parseFloat(strbuf);\n      this._stringBuffer = strbuf;\n\n      return this._stringBuffer;\n    }\n\n    /**\n     * 要素を数値型で返す(number)\n     */\n    public toInt(defaultValue = 0): number {\n      return parseInt(this._value.toString());\n    }\n\n    /**\n     * 要素を数値型で返す(number)\n     */\n    public toFloat(defaultValue = 0.0): number {\n      return this._value;\n    }\n\n    /**\n     * 引数の値と等しければtrue\n     */\n    public equals(value: csmString): boolean;\n    public equals(value: string): boolean;\n    public equals(value: number): boolean;\n    public equals(value: boolean): boolean;\n    public equals(value: any): boolean {\n      if ('number' === typeof value) {\n        // int\n        if (Math.round(value)) {\n          return false;\n        }\n        // float\n        else {\n          return value == this._value;\n        }\n      }\n      return false;\n    }\n\n    private _value: number; // JSON要素の値\n  }\n\n  /**\n   * パースしたJSONの要素を真偽値として扱う\n   */\n  export class JsonBoolean extends Value {\n    /**\n     * Valueの種類が真偽値ならtrue\n     */\n    public isBool(): boolean {\n      return true;\n    }\n\n    /**\n     * 要素を真偽値で返す(boolean)\n     */\n    public toBoolean(defaultValue = false): boolean {\n      return this._boolValue;\n    }\n\n    /**\n     * 要素を文字列で返す(csmString型)\n     */\n    public getString(defaultValue: string, indent: string): string {\n      this._stringBuffer = this._boolValue ? 'true' : 'false';\n\n      return this._stringBuffer;\n    }\n\n    /**\n     * 引数の値と等しければtrue\n     */\n    public equals(value: csmString): boolean;\n    public equals(value: string): boolean;\n    public equals(value: number): boolean;\n    public equals(value: boolean): boolean;\n    public equals(value: any): boolean {\n      if ('boolean' === typeof value) {\n        return value == this._boolValue;\n      }\n      return false;\n    }\n\n    /**\n     * Valueの値が静的ならtrue, 静的なら解放しない\n     */\n    public isStatic(): boolean {\n      return true;\n    }\n\n    /**\n     * 引数付きコンストラクタ\n     */\n    public constructor(v: boolean) {\n      super();\n\n      this._boolValue = v;\n    }\n\n    static trueValue: JsonBoolean; // true\n    static falseValue: JsonBoolean; // false\n\n    private _boolValue: boolean; // JSON要素の値\n  }\n\n  /**\n   * パースしたJSONの要素を文字列として扱う\n   */\n  export class JsonString extends Value {\n    /**\n     * 引数付きコンストラクタ\n     */\n    public constructor(s: string);\n    public constructor(s: csmString);\n    public constructor(s: any) {\n      super();\n\n      if ('string' === typeof s) {\n        this._stringBuffer = s;\n      }\n\n      if (s instanceof csmString) {\n        this._stringBuffer = s.s;\n      }\n    }\n\n    /**\n     * Valueの種類が文字列ならtrue\n     */\n    public isString(): boolean {\n      return true;\n    }\n\n    /**\n     * 要素を文字列で返す(csmString型)\n     */\n    public getString(defaultValue: string, indent: string): string {\n      return this._stringBuffer;\n    }\n\n    /**\n     * 引数の値と等しければtrue\n     */\n    public equals(value: csmString): boolean;\n    public equals(value: string): boolean;\n    public equals(value: number): boolean;\n    public equals(value: boolean): boolean;\n    public equals(value: any): boolean {\n      if ('string' === typeof value) {\n        return this._stringBuffer == value;\n      }\n\n      if (value instanceof csmString) {\n        return this._stringBuffer == value.s;\n      }\n\n      return false;\n    }\n  }\n\n  /**\n   * JSONパース時のエラー結果。文字列型のようにふるまう\n   */\n  export class JsonError extends JsonString {\n    /**\n     * Valueの値が静的ならtrue、静的なら解放しない\n     */\n    public isStatic(): boolean {\n      return this._isStatic;\n    }\n\n    /**\n     * エラー情報をセットする\n     */\n    public setErrorNotForClientCall(s: string): Value {\n      this._stringBuffer = s;\n      return this;\n    }\n\n    /**\n     * 引数付きコンストラクタ\n     */\n    public constructor(s: csmString | string, isStatic: boolean) {\n      if ('string' === typeof s) {\n        super(s);\n      } else {\n        super(s);\n      }\n      this._isStatic = isStatic;\n    }\n\n    /**\n     * Valueの種類がエラー値ならtrue\n     */\n    public isError(): boolean {\n      return true;\n    }\n\n    protected _isStatic: boolean; // 静的なValueかどうか\n  }\n\n  /**\n   * パースしたJSONの要素をNULL値として持つ\n   */\n  export class JsonNullvalue extends Value {\n    /**\n     * Valueの種類がNULL値ならtrue\n     */\n    public isNull(): boolean {\n      return true;\n    }\n\n    /**\n     * 要素を文字列で返す(csmString型)\n     */\n    public getString(defaultValue: string, indent: string): string {\n      return this._stringBuffer;\n    }\n\n    /**\n     * Valueの値が静的ならtrue, 静的なら解放しない\n     */\n    public isStatic(): boolean {\n      return true;\n    }\n\n    /**\n     * コンストラクタ\n     */\n    public constructor() {\n      super();\n\n      this._stringBuffer = 'NullValue';\n    }\n  }\n\n  /**\n   * パースしたJSONの要素を配列として持つ\n   */\n  export class JsonArray extends Value {\n    /**\n     * コンストラクタ\n     */\n    public constructor() {\n      super();\n      this._array = new csmVector<Value>();\n    }\n\n    /**\n     * デストラクタ相当の処理\n     */\n    public release(): void {\n      for (\n        let ite: csmVector_iterator<Value> = this._array.begin();\n        ite.notEqual(this._array.end());\n        ite.preIncrement()\n      ) {\n        let v: Value = ite.ptr();\n\n        if (v && !v.isStatic()) {\n          v = void 0;\n          v = null;\n        }\n      }\n    }\n\n    /**\n     * Valueの種類が配列ならtrue\n     */\n    public isArray(): boolean {\n      return true;\n    }\n\n    /**\n     * 添字演算子[index]\n     */\n    public getValueByIndex(index: number): Value {\n      if (index < 0 || this._array.getSize() <= index) {\n        return Value.errorValue.setErrorNotForClientCall(\n          CSM_JSON_ERROR_INDEX_OF_BOUNDS\n        );\n      }\n\n      const v: Value = this._array.at(index);\n\n      if (v == null) {\n        return Value.nullValue;\n      }\n\n      return v;\n    }\n\n    /**\n     * 添字演算子[string | csmString]\n     */\n    public getValueByString(s: string | csmString): Value {\n      return Value.errorValue.setErrorNotForClientCall(\n        CSM_JSON_ERROR_TYPE_MISMATCH\n      );\n    }\n\n    /**\n     * 要素を文字列で返す(csmString型)\n     */\n    public getString(defaultValue: string, indent: string): string {\n      const stringBuffer: string = indent + '[\\n';\n\n      for (\n        let ite: csmVector_iterator<Value> = this._array.begin();\n        ite.notEqual(this._array.end());\n        ite.increment()\n      ) {\n        const v: Value = ite.ptr();\n        this._stringBuffer += indent + '' + v.getString(indent + ' ') + '\\n';\n      }\n\n      this._stringBuffer = stringBuffer + indent + ']\\n';\n\n      return this._stringBuffer;\n    }\n\n    /**\n     * 配列要素を追加する\n     * @param v 追加する要素\n     */\n    public add(v: Value): void {\n      this._array.pushBack(v);\n    }\n\n    /**\n     * 要素をコンテナで返す(csmVector<Value>)\n     */\n    public getVector(defaultValue: csmVector<Value> = null): csmVector<Value> {\n      return this._array;\n    }\n\n    /**\n     * 要素の数を返す\n     */\n    public getSize(): number {\n      return this._array.getSize();\n    }\n\n    private _array: csmVector<Value>; // JSON要素の値\n  }\n\n  /**\n   * パースしたJSONの要素をマップとして持つ\n   */\n  export class JsonMap extends Value {\n    /**\n     * コンストラクタ\n     */\n    public constructor() {\n      super();\n      this._map = new csmMap<string, Value>();\n    }\n\n    /**\n     * デストラクタ相当の処理\n     */\n    public release(): void {\n      const ite: csmMap_iterator<string, Value> = this._map.begin();\n\n      while (ite.notEqual(this._map.end())) {\n        let v: Value = ite.ptr().second;\n\n        if (v && !v.isStatic()) {\n          v = void 0;\n          v = null;\n        }\n\n        ite.preIncrement();\n      }\n    }\n\n    /**\n     * Valueの値がMap型ならtrue\n     */\n    public isMap(): boolean {\n      return true;\n    }\n\n    /**\n     * 添字演算子[string | csmString]\n     */\n    public getValueByString(s: string | csmString): Value {\n      if (s instanceof csmString) {\n        const ret: Value = this._map.getValue(s.s);\n        if (ret == null) {\n          return Value.nullValue;\n        }\n        return ret;\n      }\n\n      for (\n        let iter: csmMap_iterator<string, Value> = this._map.begin();\n        iter.notEqual(this._map.end());\n        iter.preIncrement()\n      ) {\n        if (iter.ptr().first == s) {\n          if (iter.ptr().second == null) {\n            return Value.nullValue;\n          }\n          return iter.ptr().second;\n        }\n      }\n\n      return Value.nullValue;\n    }\n\n    /**\n     * 添字演算子[index]\n     */\n    public getValueByIndex(index: number): Value {\n      return Value.errorValue.setErrorNotForClientCall(\n        CSM_JSON_ERROR_TYPE_MISMATCH\n      );\n    }\n\n    /**\n     * 要素を文字列で返す(csmString型)\n     */\n    public getString(defaultValue: string, indent: string) {\n      this._stringBuffer = indent + '{\\n';\n\n      const ite: csmMap_iterator<string, Value> = this._map.begin();\n      while (ite.notEqual(this._map.end())) {\n        const key = ite.ptr().first;\n        const v: Value = ite.ptr().second;\n\n        this._stringBuffer +=\n          indent + ' ' + key + ' : ' + v.getString(indent + '   ') + ' \\n';\n        ite.preIncrement();\n      }\n\n      this._stringBuffer += indent + '}\\n';\n\n      return this._stringBuffer;\n    }\n\n    /**\n     * 要素をMap型で返す\n     */\n    public getMap(defaultValue?: csmMap<string, Value>): csmMap<string, Value> {\n      return this._map;\n    }\n\n    /**\n     * Mapに要素を追加する\n     */\n    public put(key: string, v: Value): void {\n      this._map.setValue(key, v);\n    }\n\n    /**\n     * Mapからキーのリストを取得する\n     */\n    public getKeys(): csmVector<string> {\n      if (!this._keys) {\n        this._keys = new csmVector<string>();\n\n        const ite: csmMap_iterator<string, Value> = this._map.begin();\n\n        while (ite.notEqual(this._map.end())) {\n          const key: string = ite.ptr().first;\n          this._keys.pushBack(key);\n          ite.preIncrement();\n        }\n      }\n      return this._keys;\n    }\n\n    /**\n     * Mapの要素数を取得する\n     */\n    public getSize(): number {\n      return this._keys.getSize();\n    }\n\n    private _map: csmMap<string, Value>; // JSON要素の値\n    private _keys: csmVector<string>; // JSON要素の値\n  }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { Live2DCubismFramework as csmstring } from '../type/csmstring';\nimport csmString = csmstring.csmString;\n\nexport namespace Live2DCubismFramework {\n  /**\n   * パラメータ名・パーツ名・Drawable名を保持\n   *\n   * パラメータ名・パーツ名・Drawable名を保持するクラス。\n   */\n  export class CubismId {\n    /**\n     * ID名を取得する\n     */\n    public getString(): csmString {\n      return this._id;\n    }\n\n    /**\n     * コンストラクタ\n     */\n    public constructor(id: string | csmString) {\n      if (typeof id === 'string') {\n        this._id = new csmString(id);\n        return;\n      }\n\n      this._id = id;\n    }\n\n    /**\n     * idを比較\n     * @param c 比較するid\n     * @return 同じならばtrue,異なっていればfalseを返す\n     */\n    public isEqual(c: string | csmString | CubismId): boolean {\n      if (typeof c === 'string') {\n        return this._id.isEqual(c);\n      } else if (c instanceof csmString) {\n        return this._id.isEqual(c.s);\n      } else if (c instanceof CubismId) {\n        return this._id.isEqual(c._id.s);\n      }\n      return false;\n    }\n\n    /**\n     * idを比較\n     * @param c 比較するid\n     * @return 同じならばtrue,異なっていればfalseを返す\n     */\n    public isNotEqual(c: string | csmString | CubismId): boolean {\n      if (typeof c == 'string') {\n        return !this._id.isEqual(c);\n      } else if (c instanceof csmString) {\n        return !this._id.isEqual(c.s);\n      } else if (c instanceof CubismId) {\n        return !this._id.isEqual(c._id.s);\n      }\n      return false;\n    }\n\n    private _id: csmString; // ID名\n  }\n\n  export declare type CubismIdHandle = CubismId;\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { Live2DCubismFramework as csmvector } from '../type/csmvector';\nimport { Live2DCubismFramework as cubismid } from './cubismid';\nimport { Live2DCubismFramework as csmstring } from '../type/csmstring';\nimport csmString = csmstring.csmString;\nimport CubismId = cubismid.CubismId;\nimport csmVector = csmvector.csmVector;\n\nexport namespace Live2DCubismFramework {\n  /**\n   * ID名の管理\n   *\n   * ID名を管理する。\n   */\n  export class CubismIdManager {\n    /**\n     * コンストラクタ\n     */\n    public constructor() {\n      this._ids = new csmVector<CubismId>();\n    }\n\n    /**\n     * デストラクタ相当の処理\n     */\n    public release(): void {\n      for (let i = 0; i < this._ids.getSize(); ++i) {\n        this._ids.set(i, void 0);\n      }\n      this._ids = null;\n    }\n\n    /**\n     * ID名をリストから登録\n     *\n     * @param ids ID名リスト\n     * @param count IDの個数\n     */\n    public registerIds(ids: string[] | csmString[]): void {\n      for (let i = 0; i < ids.length; i++) {\n        this.registerId(ids[i]);\n      }\n    }\n\n    /**\n     * ID名を登録\n     *\n     * @param id ID名\n     */\n    public registerId(id: string | csmString): CubismId {\n      let result: CubismId = null;\n\n      if ('string' == typeof id) {\n        if ((result = this.findId(id)) != null) {\n          return result;\n        }\n\n        result = new CubismId(id);\n        this._ids.pushBack(result);\n      } else {\n        return this.registerId(id.s);\n      }\n\n      return result;\n    }\n\n    /**\n     * ID名からIDを取得する\n     *\n     * @param id ID名\n     */\n    public getId(id: csmString | string): CubismId {\n      return this.registerId(id);\n    }\n\n    /**\n     * ID名からIDの確認\n     *\n     * @return true 存在する\n     * @return false 存在しない\n     */\n    public isExist(id: csmString | string): boolean {\n      if ('string' == typeof id) {\n        return this.findId(id) != null;\n      }\n      return this.isExist(id.s);\n    }\n\n    /**\n     * ID名からIDを検索する。\n     *\n     * @param id ID名\n     * @return 登録されているID。なければNULL。\n     */\n    private findId(id: string): CubismId {\n      for (let i = 0; i < this._ids.getSize(); ++i) {\n        if (\n          this._ids\n            .at(i)\n            .getString()\n            .isEqual(id)\n        ) {\n          return this._ids.at(i);\n        }\n      }\n\n      return null;\n    }\n\n    private _ids: csmVector<CubismId>; // 登録されているIDのリスト\n  }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nexport namespace Live2DCubismFramework {\n  /**\n   * 4x4の行列\n   *\n   * 4x4行列の便利クラス。\n   */\n  export class CubismMatrix44 {\n    /**\n     * コンストラクタ\n     */\n    public constructor() {\n      this._tr = new Float32Array(16); // 4 * 4のサイズ\n      this.loadIdentity();\n    }\n\n    /**\n     * 受け取った２つの行列の乗算を行う。\n     *\n     * @param a 行列a\n     * @param b 行列b\n     * @return 乗算結果の行列\n     */\n    public static multiply(\n      a: Float32Array,\n      b: Float32Array,\n      dst: Float32Array\n    ): void {\n      const c: Float32Array = new Float32Array([\n        0.0,\n        0.0,\n        0.0,\n        0.0,\n        0.0,\n        0.0,\n        0.0,\n        0.0,\n        0.0,\n        0.0,\n        0.0,\n        0.0,\n        0.0,\n        0.0,\n        0.0,\n        0.0\n      ]);\n\n      const n = 4;\n\n      for (let i = 0; i < n; ++i) {\n        for (let j = 0; j < n; ++j) {\n          for (let k = 0; k < n; ++k) {\n            c[j + i * 4] += a[k + i * 4] * b[j + k * 4];\n          }\n        }\n      }\n\n      for (let i = 0; i < 16; ++i) {\n        dst[i] = c[i];\n      }\n    }\n\n    /**\n     * 単位行列に初期化する\n     */\n    public loadIdentity(): void {\n      const c: Float32Array = new Float32Array([\n        1.0, 0.0, 0.0, 0.0,\n        0.0, 1.0, 0.0, 0.0,\n        0.0, 0.0, 1.0, 0.0,\n        0.0, 0.0, 0.0, 1.0\n      ]);\n      this.setMatrix(c);\n    }\n\n    /**\n     * 行列を設定\n     *\n     * @param tr 16個の浮動小数点数で表される4x4の行列\n     */\n    public setMatrix(tr: Float32Array): void {\n      for (let i = 0; i < 16; ++i) {\n        this._tr[i] = tr[i];\n      }\n    }\n\n    /**\n     * 行列を浮動小数点数の配列で取得\n     *\n     * @return 16個の浮動小数点数で表される4x4の行列\n     */\n    public getArray(): Float32Array {\n      return this._tr;\n    }\n\n    /**\n     * X軸の拡大率を取得\n     * @return X軸の拡大率\n     */\n    public getScaleX(): number {\n      return this._tr[0];\n    }\n\n    /**\n     * Y軸の拡大率を取得する\n     *\n     * @return Y軸の拡大率\n     */\n    public getScaleY(): number {\n      return this._tr[5];\n    }\n\n    /**\n     * X軸の移動量を取得\n     * @return X軸の移動量\n     */\n    public getTranslateX(): number {\n      return this._tr[12];\n    }\n\n    /**\n     * 获得Y轴运动\n     * @return Y軸の移動量\n     */\n    public getTranslateY(): number {\n      return this._tr[13];\n    }\n\n    /**\n     * 用当前矩阵计算X轴值\n     *\n     * @param src X軸の値\n     * @return 現在の行列で計算されたX軸の値\n     */\n    public transformX(src: number): number {\n      return this._tr[0] * src + this._tr[12];\n    }\n\n    /**\n     * 用当前矩阵计算y轴值\n     *\n     * @param src Y軸の値\n     * @return 現在の行列で計算されたY軸の値\n     */\n    public transformY(src: number): number {\n      return this._tr[5] * src + this._tr[13];\n    }\n\n    /**\n     * X軸の値を現在の行列で逆計算\n     */\n    public invertTransformX(src: number): number {\n      return (src - this._tr[12]) / this._tr[0];\n    }\n\n    /**\n     * Y軸の値を現在の行列で逆計算\n     */\n    public invertTransformY(src: number): number {\n      return (src - this._tr[13]) / this._tr[5];\n    }\n\n    /**\n     * 从当前矩阵位置开始\n     *\n     * 現在の行列の位置を起点にして相対的に移動する。\n     *\n     * @param x X軸の移動量\n     * @param y Y軸の移動量\n     */\n    public translateRelative(x: number, y: number): void {\n      const tr1: Float32Array = new Float32Array([\n        1.0,\n        0.0,\n        0.0,\n        0.0,\n        0.0,\n        1.0,\n        0.0,\n        0.0,\n        0.0,\n        0.0,\n        1.0,\n        0.0,\n        x,\n        y,\n        0.0,\n        1.0\n      ]);\n\n      CubismMatrix44.multiply(tr1, this._tr, this._tr);\n    }\n\n    /**\n     * 現在の行列の位置を移動\n     *\n     * 現在の行列の位置を指定した位置へ移動する\n     *\n     * @param x X軸の移動量\n     * @param y y軸の移動量\n     */\n    public translate(x: number, y: number): void {\n      this._tr[12] = x;\n      this._tr[13] = y;\n    }\n\n    /**\n     * 現在の行列のX軸の位置を指定した位置へ移動する\n     *\n     * @param x X軸の移動量\n     */\n    public translateX(x: number): void {\n      this._tr[12] = x;\n    }\n\n    /**\n     * 現在の行列のY軸の位置を指定した位置へ移動する\n     *\n     * @param y Y軸の移動量\n     */\n    public translateY(y: number): void {\n      this._tr[13] = y;\n    }\n\n    /**\n     * 現在の行列の拡大率を相対的に設定する\n     *\n     * @param x X軸の拡大率\n     * @param y Y軸の拡大率\n     */\n    public scaleRelative(x: number, y: number): void {\n      const tr1: Float32Array = new Float32Array([\n        x,\n        0.0,\n        0.0,\n        0.0,\n        0.0,\n        y,\n        0.0,\n        0.0,\n        0.0,\n        0.0,\n        1.0,\n        0.0,\n        0.0,\n        0.0,\n        0.0,\n        1.0\n      ]);\n\n      CubismMatrix44.multiply(tr1, this._tr, this._tr);\n    }\n\n    /**\n     * 現在の行列の拡大率を指定した倍率に設定する\n     *\n     * @param x X軸の拡大率\n     * @param y Y軸の拡大率\n     */\n    public scale(x: number, y: number): void {\n      this._tr[0] = x;\n      this._tr[5] = y;\n    }\n    \n    /**\n     * 現在の行列の拡大率を指定した倍率に設定する\n     * @param y Y軸の拡大率\n     */\n    public scaleX(x:number):void{\n      this._tr[0] = x;\n    }\n\n    /**\n     * 現在の行列の拡大率を指定した倍率に設定する\n     * @param y Y軸の拡大率\n     */\n    public scaleY(y:number):void{\n      this._tr[5] = y\n    }\n\n    /**\n     * 現在の行列に行列を乗算\n     *\n     * @param m 行列\n     */\n    public multiplyByMatrix(m: CubismMatrix44): void {\n      CubismMatrix44.multiply(m.getArray(), this._tr, this._tr);\n    }\n\n    /**\n     * オブジェクトのコピーを生成する\n     */\n    public clone(): CubismMatrix44 {\n      const cloneMatrix: CubismMatrix44 = new CubismMatrix44();\n\n      for (let i = 0; i < this._tr.length; i++) {\n        cloneMatrix._tr[i] = this._tr[i];\n      }\n\n      return cloneMatrix;\n    }\n\n    protected _tr: Float32Array; // 4x4行列データ\n  }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { Live2DCubismFramework as cubismmatrix44 } from '../math/cubismmatrix44';\nimport { Live2DCubismFramework as cubismmodel } from '../model/cubismmodel';\nimport CubismModel = cubismmodel.CubismModel;\nimport CubismMatrix44 = cubismmatrix44.CubismMatrix44;\n\nexport namespace Live2DCubismFramework {\n  /**\n   * モデル描画を処理するレンダラ\n   *\n   * サブクラスに環境依存の描画命令を記述する。\n   */\n  export abstract class CubismRenderer {\n    /**\n     * レンダラのインスタンスを生成して取得する\n     *\n     * @return レンダラのインスタンス\n     */\n    public static create(): CubismRenderer {\n      return null;\n    }\n\n    /**\n     * レンダラのインスタンスを解放する\n     */\n    public static delete(renderer: CubismRenderer): void {\n      renderer = null;\n    }\n\n    /**\n     * レンダラの初期化処理を実行する\n     * 引数に渡したモデルからレンダラの初期化処理に必要な情報を取り出すことができる\n     * @param model モデルのインスタンス\n     */\n    public initialize(model: CubismModel): void {\n      this._model = model;\n    }\n\n    /**\n     * モデルを描画する\n     */\n    public drawModel(): void {\n      if (this.getModel() == null) return;\n\n      this.doDrawModel();\n    }\n\n    /**\n     * Model-View-Projection 行列をセットする\n     * 配列は複製されるので、元の配列は外で破棄して良い\n     * @param matrix44 Model-View-Projection 行列\n     */\n    public setMvpMatrix(matrix44: CubismMatrix44): void {\n      this._mvpMatrix4x4.setMatrix(matrix44.getArray());\n    }\n\n    /**\n     * Model-View-Projection 行列を取得する\n     * @return Model-View-Projection 行列\n     */\n    public getMvpMatrix(): CubismMatrix44 {\n      return this._mvpMatrix4x4;\n    }\n\n    /**\n     * モデルの色をセットする\n     * 各色0.0~1.0の間で指定する（1.0が標準の状態）\n     * @param red 赤チャンネルの値\n     * @param green 緑チャンネルの値\n     * @param blue 青チャンネルの値\n     * @param alpha αチャンネルの値\n     */\n    public setModelColor(\n      red: number,\n      green: number,\n      blue: number,\n      alpha: number\n    ): void {\n      if (red < 0.0) {\n        red = 0.0;\n      } else if (red > 1.0) {\n        red = 1.0;\n      }\n\n      if (green < 0.0) {\n        green = 0.0;\n      } else if (green > 1.0) {\n        green = 1.0;\n      }\n\n      if (blue < 0.0) {\n        blue = 0.0;\n      } else if (blue > 1.0) {\n        blue = 1.0;\n      }\n\n      if (alpha < 0.0) {\n        alpha = 0.0;\n      } else if (alpha > 1.0) {\n        alpha = 1.0;\n      }\n\n      this._modelColor.R = red;\n      this._modelColor.G = green;\n      this._modelColor.B = blue;\n      this._modelColor.A = alpha;\n    }\n\n    /**\n     * モデルの色を取得する\n     * 各色0.0~1.0の間で指定する(1.0が標準の状態)\n     *\n     * @return RGBAのカラー情報\n     */\n    public getModelColor(): CubismTextureColor {\n      return JSON.parse(JSON.stringify(this._modelColor));\n    }\n\n    /**\n     * 乗算済みαの有効・無効をセットする\n     * 有効にするならtrue、無効にするならfalseをセットする\n     */\n    public setIsPremultipliedAlpha(enable: boolean): void {\n      this._isPremultipliedAlpha = enable;\n    }\n\n    /**\n     * 乗算済みαの有効・無効を取得する\n     * @return true 乗算済みのα有効\n     * @return false 乗算済みのα無効\n     */\n    public isPremultipliedAlpha(): boolean {\n      return this._isPremultipliedAlpha;\n    }\n\n    /**\n     * カリング（片面描画）の有効・無効をセットする。\n     * 有効にするならtrue、無効にするならfalseをセットする\n     */\n    public setIsCulling(culling: boolean): void {\n      this._isCulling = culling;\n    }\n\n    /**\n     * カリング（片面描画）の有効・無効を取得する。\n     * @return true カリング有効\n     * @return false カリング無効\n     */\n    public isCulling(): boolean {\n      return this._isCulling;\n    }\n\n    /**\n     * テクスチャの異方性フィルタリングのパラメータをセットする\n     * パラメータ値の影響度はレンダラの実装に依存する\n     * @param n パラメータの値\n     */\n    public setAnisotropy(n: number): void {\n      this._anisortopy = n;\n    }\n\n    /**\n     * テクスチャの異方性フィルタリングのパラメータをセットする\n     * @return 異方性フィルタリングのパラメータ\n     */\n    public getAnisotropy(): number {\n      return this._anisortopy;\n    }\n\n    /**\n     * レンダリングするモデルを取得する\n     * @return レンダリングするモデル\n     */\n    public getModel(): CubismModel {\n      return this._model;\n    }\n\n    /**\n     * コンストラクタ\n     */\n    protected constructor() {\n      this._isCulling = false;\n      this._isPremultipliedAlpha = false;\n      this._anisortopy = 0.0;\n      this._model = null;\n      this._modelColor = new CubismTextureColor();\n\n      // 単位行列に初期化\n      this._mvpMatrix4x4 = new CubismMatrix44();\n      this._mvpMatrix4x4.loadIdentity();\n    }\n\n    /**\n     * モデル描画の実装\n     */\n    public abstract doDrawModel(): void;\n\n    /**\n     * 描画オブジェクト（アートメッシュ）を描画する\n     * ポリゴンメッシュとテクスチャ番号をセットで渡す。\n     * @param textureNo 描画するテクスチャ番号\n     * @param indexCount 描画オブジェクトのインデックス値\n     * @param vertexCount ポリゴンメッシュの頂点数\n     * @param indexArray ポリゴンメッシュ頂点のインデックス配列\n     * @param vertexArray ポリゴンメッシュの頂点配列\n     * @param uvArray uv配列\n     * @param opacity 不透明度\n     * @param colorBlendMode カラーブレンディングのタイプ\n     * @param invertedMask マスク使用時のマスクの反転使用\n     */\n    public abstract drawMesh(\n      textureNo: number,\n      indexCount: number,\n      vertexCount: number,\n      indexArray: Uint16Array,\n      vertexArray: Float32Array,\n      uvArray: Float32Array,\n      opacity: number,\n      colorBlendMode: CubismBlendMode,\n      invertedMask: boolean\n    ): void;\n\n    /**\n     * レンダラが保持する静的なリソースを開放する\n     */\n    public static staticRelease: Function;\n\n    protected _mvpMatrix4x4: CubismMatrix44; // Model-View-Projection 行列\n    protected _modelColor: CubismTextureColor; // モデル自体のカラー（RGBA）\n    protected _isCulling: boolean; // カリングが有効ならtrue\n    protected _isPremultipliedAlpha: boolean; // 是否预乘\n    protected _anisortopy: any; // テクスチャの異方性フィルタリングのパラメータ\n    protected _model: CubismModel; // レンダリング対象のモデル\n  }\n\n  export enum CubismBlendMode {\n    CubismBlendMode_Normal = 0, // 通常\n    CubismBlendMode_Additive = 1, // 加算\n    CubismBlendMode_Multiplicative = 2 // 乗算\n  }\n\n  /**\n   * テクスチャの色をRGBAで扱うためのクラス\n   */\n  export class CubismTextureColor {\n    /**\n     * コンストラクタ\n     */\n    constructor() {\n      this.R = 1.0;\n      this.G = 1.0;\n      this.B = 1.0;\n      this.A = 1.0;\n    }\n\n    R: number; // 赤チャンネル\n    G: number; // 緑チャンネル\n    B: number; // 青チャンネル\n    A: number; // αチャンネル\n  }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { Live2DCubismFramework as cubismjson } from './utils/cubismjson';\nimport { Live2DCubismFramework as cubismidmanager } from './id/cubismidmanager';\nimport { Live2DCubismFramework as cubismrenderer } from './rendering/cubismrenderer';\nimport {\n  CubismLogInfo,\n  CubismLogWarning,\n  CSM_ASSERT\n} from './utils/cubismdebug';\nimport Value = cubismjson.Value;\nimport CubismIdManager = cubismidmanager.CubismIdManager;\nimport CubismRenderer = cubismrenderer.CubismRenderer;\n\nexport function strtod(s: string, endPtr: string[]): number {\n  let index = 0;\n  for (let i = 1; ; i++) {\n    const testC: string = s.slice(i - 1, i);\n\n    // 指数・マイナスの可能性があるのでスキップする\n    if (testC == 'e' || testC == '-' || testC == 'E') {\n      continue;\n    } // 文字列の範囲を広げていく\n\n    const test: string = s.substring(0, i);\n    const number = Number(test);\n    if (isNaN(number)) {\n      // 数値として認識できなくなったので終了\n      break;\n    } // 最後に数値としてできたindexを格納しておく\n\n    index = i;\n  }\n  let d = parseFloat(s); // パースした数値\n\n  if (isNaN(d)) {\n    // 数値として認識できなくなったので終了\n    d = NaN;\n  }\n\n  endPtr[0] = s.slice(index); // 後続の文字列\n  return d;\n}\n\nexport namespace Live2DCubismFramework {\n  // ファイルスコープの変数を初期化\n\n  let s_isStarted = false;\n  let s_isInitialized = false;\n  let s_option: Option = null;\n  let s_cubismIdManager: CubismIdManager = null;\n\n  /**\n   * Framework内で使う定数の宣言\n   */\n  export namespace Constant {\n    export const vertexOffset = 0; // メッシュ頂点のオフセット値\n    export const vertexStep = 2; // メッシュ頂点のステップ値\n  }\n\n  export function csmDelete<T>(address: T): void {\n    if (!address) {\n      return;\n    }\n\n    address = void 0;\n  }\n\n  /**\n   * Live2D Cubism SDK Original Workflow SDKのエントリポイント\n   * 利用開始時はCubismFramework.initialize()を呼び、CubismFramework.dispose()で終了する。\n   */\n  export class CubismFramework {\n    /**\n     * Cubism FrameworkのAPIを使用可能にする。\n     *  APIを実行する前に必ずこの関数を実行すること。\n     *  一度準備が完了して以降は、再び実行しても内部処理がスキップされます。\n     *\n     * @param    option      Optionクラスのインスタンス\n     *\n     * @return   準備処理が完了したらtrueが返ります。\n     */\n    public static startUp(option: Option = null): boolean {\n      if (s_isStarted) {\n        CubismLogInfo('CubismFramework.startUp() is already done.');\n        return s_isStarted;\n      }\n\n      s_option = option;\n\n      if (s_option != null) {\n        Live2DCubismCore.Logging.csmSetLogFunction(s_option.logFunction);\n      }\n\n      s_isStarted = true;\n\n      // Live2D Cubism Coreバージョン情報を表示\n      if (s_isStarted) {\n        const version: number = Live2DCubismCore.Version.csmGetVersion();\n        const major: number = (version & 0xff000000) >> 24;\n        const minor: number = (version & 0x00ff0000) >> 16;\n        const patch: number = version & 0x0000ffff;\n        const versionNumber: number = version;\n\n        CubismLogInfo(\n          `Live2D Cubism Core version: {0}.{1}.{2} ({3})`,\n          ('00' + major).slice(-2),\n          ('00' + minor).slice(-2),\n          ('0000' + patch).slice(-4),\n          versionNumber\n        );\n      }\n\n      CubismLogInfo('CubismFramework.startUp() is complete.');\n\n      return s_isStarted;\n    }\n\n    /**\n     * StartUp()で初期化したCubismFrameworkの各パラメータをクリアします。\n     * Dispose()したCubismFrameworkを再利用する際に利用してください。\n     */\n    public static cleanUp(): void {\n      s_isStarted = false;\n      s_isInitialized = false;\n      s_option = null;\n      s_cubismIdManager = null;\n    }\n\n    /**\n     * Cubism Framework内のリソースを初期化してモデルを表示可能な状態にします。<br>\n     *     再度Initialize()するには先にDispose()を実行する必要があります。\n     */\n    public static initialize(): void {\n      CSM_ASSERT(s_isStarted);\n      if (!s_isStarted) {\n        CubismLogWarning('CubismFramework is not started.');\n        return;\n      }\n\n      // --- s_isInitializedによる連続初期化ガード ---\n      // 連続してリソース確保が行われないようにする。\n      // 再度Initialize()するには先にDispose()を実行する必要がある。\n      if (s_isInitialized) {\n        CubismLogWarning(\n          'CubismFramework.initialize() skipped, already initialized.'\n        );\n        return;\n      }\n\n      //---- static 初期化 ----\n      Value.staticInitializeNotForClientCall();\n\n      s_cubismIdManager = new CubismIdManager();\n\n      s_isInitialized = true;\n\n      CubismLogInfo('CubismFramework.initialize() is complete.');\n    }\n\n    /**\n     * Cubism Framework内の全てのリソースを解放します。\n     *      ただし、外部で確保されたリソースについては解放しません。\n     *      外部で適切に破棄する必要があります。\n     */\n    public static dispose(): void {\n      CSM_ASSERT(s_isStarted);\n      if (!s_isStarted) {\n        CubismLogWarning('CubismFramework is not started.');\n        return;\n      }\n\n      // --- s_isInitializedによる未初期化解放ガード ---\n      // dispose()するには先にinitialize()を実行する必要がある。\n      if (!s_isInitialized) {\n        // false...リソース未確保の場合\n        CubismLogWarning('CubismFramework.dispose() skipped, not initialized.');\n        return;\n      }\n\n      Value.staticReleaseNotForClientCall();\n\n      s_cubismIdManager.release();\n      s_cubismIdManager = null;\n\n      // レンダラの静的リソース（シェーダプログラム他）を解放する\n      CubismRenderer.staticRelease();\n\n      s_isInitialized = false;\n\n      CubismLogInfo('CubismFramework.dispose() is complete.');\n    }\n\n    /**\n     * Cubism FrameworkのAPIを使用する準備が完了したかどうか\n     * @return APIを使用する準備が完了していればtrueが返ります。\n     */\n    public static isStarted(): boolean {\n      return s_isStarted;\n    }\n\n    /**\n     * Cubism Frameworkのリソース初期化がすでに行われているかどうか\n     * @return リソース確保が完了していればtrueが返ります\n     */\n    public static isInitialized(): boolean {\n      return s_isInitialized;\n    }\n\n    /**\n     * Core APIにバインドしたログ関数を実行する\n     *\n     * @praram message ログメッセージ\n     */\n    public static coreLogFunction(message: string): void {\n      // Return if logging not possible.\n      if (!Live2DCubismCore.Logging.csmGetLogFunction()) {\n        return;\n      }\n\n      Live2DCubismCore.Logging.csmGetLogFunction()(message);\n    }\n\n    /**\n     * 現在のログ出力レベル設定の値を返す。\n     *\n     * @return  現在のログ出力レベル設定の値\n     */\n    public static getLoggingLevel(): LogLevel {\n      if (s_option != null) {\n        return s_option.loggingLevel;\n      }\n      return LogLevel.LogLevel_Off;\n    }\n\n    /**\n     * IDマネージャのインスタンスを取得する\n     * @return CubismManagerクラスのインスタンス\n     */\n    public static getIdManager(): CubismIdManager {\n      return s_cubismIdManager;\n    }\n\n    /**\n     * 静的クラスとして使用する\n     * インスタンス化させない\n     */\n    private constructor() {}\n  }\n}\n\nexport class Option {\n  logFunction: Live2DCubismCore.csmLogFunction; // ログ出力の関数オブジェクト\n  loggingLevel: LogLevel; // ログ出力レベルの設定\n}\n\n/**\n * ログ出力のレベル\n */\nexport enum LogLevel {\n  LogLevel_Verbose = 0, // 詳細ログ\n  LogLevel_Debug, // デバッグログ\n  LogLevel_Info, // Infoログ\n  LogLevel_Warning, // 警告ログ\n  LogLevel_Error, // エラーログ\n  LogLevel_Off // ログ出力無効\n}\n","\nimport {\n    Live2DCubismFramework as live2dcubismframework,\n    Option as Csm_Option,\n    LogLevel,\n  } from '../../framework/live2dcubismframework';\nimport Csm_CubismFramework = live2dcubismframework.CubismFramework;\n\nexport class Delegate {\n    private static _instance:Delegate;\n    public static get instance():Delegate{\n      if (!Delegate._instance) {\n        Delegate._instance = new Delegate();\n      }\n      return Delegate._instance;\n    }\n    private _cubismOption:Csm_Option;\n    constructor() {\n        this._cubismOption = new Csm_Option();\n    }\n\n    /**\n     * live2d framework 初始化\n     * @param logFunction 输出方法\n     * @param logginLevel 输出等级\n     */\n    public initializeCubism(logFunction = console.log,logginLevel:LogLevel = LogLevel.LogLevel_Verbose){\n      // setup cubism\n      this._cubismOption.logFunction = logFunction;\n      this._cubismOption.loggingLevel = logginLevel;\n      Csm_CubismFramework.startUp(this._cubismOption);\n      // initialize cubism\n      Csm_CubismFramework.initialize();\n    }\n\n    /**\n     * 结束清理\n     */\n    public dispose(){\n      Csm_CubismFramework.dispose();\n    }\n}","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nexport namespace Live2DCubismFramework {\n  /**\n   * 2次元ベクトル型\n   *\n   * 2次元ベクトル型の機能を提供する。\n   */\n  export class CubismVector2 {\n    /**\n     * コンストラクタ\n     */\n    public constructor(public x?: number, public y?: number) {\n      this.x = x == undefined ? 0.0 : x;\n\n      this.y = y == undefined ? 0.0 : y;\n    }\n\n    /**\n     * ベクトルの加算\n     *\n     * @param vector2 加算するベクトル値\n     * @return 加算結果 ベクトル値\n     */\n    public add(vector2: CubismVector2): CubismVector2 {\n      const ret: CubismVector2 = new CubismVector2(0.0, 0.0);\n      ret.x = this.x + vector2.x;\n      ret.y = this.y + vector2.y;\n      return ret;\n    }\n\n    /**\n     * ベクトルの減算\n     *\n     * @param vector2 減算するベクトル値\n     * @return 減算結果 ベクトル値\n     */\n    public substract(vector2: CubismVector2): CubismVector2 {\n      const ret: CubismVector2 = new CubismVector2(0.0, 0.0);\n      ret.x = this.x - vector2.x;\n      ret.y = this.y - vector2.y;\n      return ret;\n    }\n\n    /**\n     * ベクトルの乗算\n     *\n     * @param vector2 乗算するベクトル値\n     * @return 乗算結果 ベクトル値\n     */\n    public multiply(vector2: CubismVector2): CubismVector2 {\n      const ret: CubismVector2 = new CubismVector2(0.0, 0.0);\n      ret.x = this.x * vector2.x;\n      ret.y = this.y * vector2.y;\n      return ret;\n    }\n\n    /**\n     * ベクトルの乗算(スカラー)\n     *\n     * @param scalar 乗算するスカラー値\n     * @return 乗算結果 ベクトル値\n     */\n    public multiplyByScaler(scalar: number): CubismVector2 {\n      return this.multiply(new CubismVector2(scalar, scalar));\n    }\n\n    /**\n     * ベクトルの除算\n     *\n     * @param vector2 除算するベクトル値\n     * @return 除算結果 ベクトル値\n     */\n    public division(vector2: CubismVector2): CubismVector2 {\n      const ret: CubismVector2 = new CubismVector2(0.0, 0.0);\n      ret.x = this.x / vector2.x;\n      ret.y = this.y / vector2.y;\n      return ret;\n    }\n\n    /**\n     * ベクトルの除算(スカラー)\n     *\n     * @param scalar 除算するスカラー値\n     * @return 除算結果 ベクトル値\n     */\n    public divisionByScalar(scalar: number): CubismVector2 {\n      return this.division(new CubismVector2(scalar, scalar));\n    }\n\n    /**\n     * ベクトルの長さを取得する\n     *\n     * @return ベクトルの長さ\n     */\n    public getLength(): number {\n      return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n\n    /**\n     * ベクトルの距離の取得\n     *\n     * @param a 点\n     * @return ベクトルの距離\n     */\n    public getDistanceWith(a: CubismVector2): number {\n      return Math.sqrt(\n        (this.x - a.x) * (this.x - a.x) + (this.y - a.y) * (this.y - a.y)\n      );\n    }\n\n    /**\n     * ドット積の計算\n     *\n     * @param a 値\n     * @return 結果\n     */\n    public dot(a: CubismVector2): number {\n      return this.x * a.x + this.y * a.y;\n    }\n\n    /**\n     * 正規化の適用\n     */\n    public normalize(): void {\n      const length: number = Math.pow(this.x * this.x + this.y * this.y, 0.5);\n\n      this.x = this.x / length;\n      this.y = this.y / length;\n    }\n\n    /**\n     * 等しさの確認（等しいか？）\n     *\n     * 値が等しいか？\n     *\n     * @param rhs 確認する値\n     * @return true 値は等しい\n     * @return false 値は等しくない\n     */\n    public isEqual(rhs: CubismVector2): boolean {\n      return this.x == rhs.x && this.y == rhs.y;\n    }\n\n    /**\n     * 等しさの確認（等しくないか？）\n     *\n     * 値が等しくないか？\n     *\n     * @param rhs 確認する値\n     * @return true 値は等しくない\n     * @return false 値は等しい\n     */\n    public isNotEqual(rhs: CubismVector2): boolean {\n      return !this.isEqual(rhs);\n    }\n  }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { Live2DCubismFramework as cubismvector2 } from './cubismvector2';\nimport CubismVector2 = cubismvector2.CubismVector2;\n\nexport namespace Live2DCubismFramework {\n  /**\n   * 数値計算などに使用するユーティリティクラス\n   */\n  export class CubismMath {\n    /**\n     * 第一引数の値を最小値と最大値の範囲に収めた値を返す\n     *\n     * @param value 収められる値\n     * @param min   範囲の最小値\n     * @param max   範囲の最大値\n     * @return 最小値と最大値の範囲に収めた値\n     */\n    static range(value: number, min: number, max: number): number {\n      if (value < min) {\n        value = min;\n      } else if (value > max) {\n        value = max;\n      }\n\n      return value;\n    }\n\n    /**\n     * サイン関数の値を求める\n     *\n     * @param x 角度値（ラジアン）\n     * @return サイン関数sin(x)の値\n     */\n    static sin(x: number): number {\n      return Math.sin(x);\n    }\n\n    /**\n     * コサイン関数の値を求める\n     *\n     * @param x 角度値(ラジアン)\n     * @return コサイン関数cos(x)の値\n     */\n    static cos(x: number): number {\n      return Math.cos(x);\n    }\n\n    /**\n     * 値の絶対値を求める\n     *\n     * @param x 絶対値を求める値\n     * @return 値の絶対値\n     */\n    static abs(x: number): number {\n      return Math.abs(x);\n    }\n\n    /**\n     * 平方根(ルート)を求める\n     * @param x -> 平方根を求める値\n     * @return 値の平方根\n     */\n    static sqrt(x: number): number {\n      return Math.sqrt(x);\n    }\n\n    /**\n     * イージング処理されたサインを求める\n     * フェードイン・アウト時のイージングに利用できる\n     *\n     * @param value イージングを行う値\n     * @return イージング処理されたサイン値\n     */\n    static getEasingSine(value: number): number {\n      if (value < 0.0) {\n        return 0.0;\n      } else if (value > 1.0) {\n        return 1.0;\n      }\n\n      return 0.5 - 0.5 * this.cos(value * Math.PI);\n    }\n\n    /**\n     * 大きい方の値を返す\n     *\n     * @param left 左辺の値\n     * @param right 右辺の値\n     * @return 大きい方の値\n     */\n    static max(left: number, right: number): number {\n      return left > right ? left : right;\n    }\n\n    /**\n     * 小さい方の値を返す\n     *\n     * @param left  左辺の値\n     * @param right 右辺の値\n     * @return 小さい方の値\n     */\n    static min(left: number, right: number): number {\n      return left > right ? right : left;\n    }\n\n    /**\n     * 角度値をラジアン値に変換する\n     *\n     * @param degrees   角度値\n     * @return 角度値から変換したラジアン値\n     */\n    static degreesToRadian(degrees: number): number {\n      return (degrees / 180.0) * Math.PI;\n    }\n\n    /**\n     * ラジアン値を角度値に変換する\n     *\n     * @param radian    ラジアン値\n     * @return ラジアン値から変換した角度値\n     */\n    static radianToDegrees(radian: number): number {\n      return (radian * 180.0) / Math.PI;\n    }\n\n    /**\n     * ２つのベクトルからラジアン値を求める\n     *\n     * @param from  始点ベクトル\n     * @param to    終点ベクトル\n     * @return ラジアン値から求めた方向ベクトル\n     */\n    static directionToRadian(from: CubismVector2, to: CubismVector2): number {\n      const q1: number = Math.atan2(to.y, to.x);\n      const q2: number = Math.atan2(from.y, from.x);\n\n      let ret: number = q1 - q2;\n\n      while (ret < -Math.PI) {\n        ret += Math.PI * 2.0;\n      }\n\n      while (ret > Math.PI) {\n        ret -= Math.PI * 2.0;\n      }\n\n      return ret;\n    }\n\n    /**\n     * ２つのベクトルから角度値を求める\n     *\n     * @param from  始点ベクトル\n     * @param to    終点ベクトル\n     * @return 角度値から求めた方向ベクトル\n     */\n    static directionToDegrees(from: CubismVector2, to: CubismVector2): number {\n      const radian: number = this.directionToRadian(from, to);\n      let degree: number = this.radianToDegrees(radian);\n\n      if (to.x - from.x > 0.0) {\n        degree = -degree;\n      }\n\n      return degree;\n    }\n\n    /**\n     * ラジアン値を方向ベクトルに変換する。\n     *\n     * @param totalAngle    ラジアン値\n     * @return ラジアン値から変換した方向ベクトル\n     */\n\n    static radianToDirection(totalAngle: number): CubismVector2 {\n      const ret: CubismVector2 = new CubismVector2();\n\n      ret.x = this.sin(totalAngle);\n      ret.y = this.cos(totalAngle);\n\n      return ret;\n    }\n\n    /**\n     * コンストラクタ\n     */\n    private constructor() {}\n  }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { Live2DCubismFramework as cubismmath } from '../math/cubismmath';\nimport { Live2DCubismFramework as cubismmodel } from '../model/cubismmodel';\nimport { Live2DCubismFramework as cubismmotionqueueentry } from './cubismmotionqueueentry';\nimport { Live2DCubismFramework as csmstring } from '../type/csmstring';\nimport { Live2DCubismFramework as csmvector } from '../type/csmvector';\nimport { CSM_ASSERT } from '../utils/cubismdebug';\nimport csmVector = csmvector.csmVector;\nimport csmString = csmstring.csmString;\nimport CubismMotionQueueEntry = cubismmotionqueueentry.CubismMotionQueueEntry;\nimport CubismModel = cubismmodel.CubismModel;\nimport CubismMath = cubismmath.CubismMath;\n\nexport namespace Live2DCubismFramework {\n  /** モーション再生終了コールバック関数定義 */\n  export type FinishedMotionCallback = (self: ACubismMotion) => void;\n\n  /**\n   * モーションの抽象基底クラス\n   *\n   * モーションの抽象基底クラス。MotionQueueManagerによってモーションの再生を管理する。\n   */\n  export abstract class ACubismMotion {\n    /**\n     * インスタンスの破棄\n     */\n    public static delete(motion: ACubismMotion): void {\n      motion.release();\n      motion = void 0;\n      motion = null;\n    }\n\n    /**\n     * コンストラクタ\n     */\n    public constructor() {\n      this._fadeInSeconds = -1.0;\n      this._fadeOutSeconds = -1.0;\n      this._weight = 1.0;\n      this._offsetSeconds = 0.0; // 再生の開始時刻\n      this._firedEventValues = new csmVector<csmString>();\n    }\n\n    /**\n     * デストラクタ相当の処理\n     */\n    public release(): void {\n      this._weight = 0.0;\n    }\n\n    /**\n     * モデルのパラメータ\n     * @param model 対象のモデル\n     * @param motionQueueEntry CubismMotionQueueManagerで管理されているモーション\n     * @param userTimeSeconds デルタ時間の積算値[秒]\n     */\n    public updateParameters(\n      model: CubismModel,\n      motionQueueEntry: CubismMotionQueueEntry,\n      userTimeSeconds: number\n    ): void {\n      if (!motionQueueEntry.isAvailable() || motionQueueEntry.isFinished()) {\n        return;\n      }\n\n      if (!motionQueueEntry.isStarted()) {\n        motionQueueEntry.setIsStarted(true);\n        motionQueueEntry.setStartTime(userTimeSeconds - this._offsetSeconds); // モーションの開始時刻を記録\n        motionQueueEntry.setFadeInStartTime(userTimeSeconds); // フェードインの開始時刻\n\n        const duration: number = this.getDuration();\n\n        if (motionQueueEntry.getEndTime() < 0) {\n          // 開始していないうちに終了設定している場合がある。\n          motionQueueEntry.setEndTime(\n            duration <= 0 ? -1 : motionQueueEntry.getStartTime() + duration\n          );\n          // duration == -1 の場合はループする\n        }\n      }\n\n      let fadeWeight: number = this._weight; // 現在の値と掛け合わせる割合\n\n      //---- フェードイン・アウトの処理 ----\n      // 単純なサイン関数でイージングする\n      const fadeIn: number =\n        this._fadeInSeconds == 0.0\n          ? 1.0\n          : CubismMath.getEasingSine(\n              (userTimeSeconds - motionQueueEntry.getFadeInStartTime()) /\n                this._fadeInSeconds\n            );\n\n      const fadeOut: number =\n        this._fadeOutSeconds == 0.0 || motionQueueEntry.getEndTime() < 0.0\n          ? 1.0\n          : CubismMath.getEasingSine(\n              (motionQueueEntry.getEndTime() - userTimeSeconds) /\n                this._fadeOutSeconds\n            );\n\n      fadeWeight = fadeWeight * fadeIn * fadeOut;\n\n      motionQueueEntry.setState(userTimeSeconds, fadeWeight);\n\n      CSM_ASSERT(0.0 <= fadeWeight && fadeWeight <= 1.0);\n\n      //---- 全てのパラメータIDをループする ----\n      this.doUpdateParameters(\n        model,\n        userTimeSeconds,\n        fadeWeight,\n        motionQueueEntry\n      );\n\n      // 後処理\n      // 終了時刻を過ぎたら終了フラグを立てる(CubismMotionQueueManager)\n      if (\n        motionQueueEntry.getEndTime() > 0 &&\n        motionQueueEntry.getEndTime() < userTimeSeconds\n      ) {\n        motionQueueEntry.setIsFinished(true); // 終了\n      }\n    }\n\n    /**\n     * フェードインの時間を設定する\n     * @param fadeInSeconds フェードインにかかる時間[秒]\n     */\n    public setFadeInTime(fadeInSeconds: number): void {\n      this._fadeInSeconds = fadeInSeconds;\n    }\n\n    /**\n     * フェードアウトの時間を設定する\n     * @param fadeOutSeconds フェードアウトにかかる時間[秒]\n     */\n    public setFadeOutTime(fadeOutSeconds: number): void {\n      this._fadeOutSeconds = fadeOutSeconds;\n    }\n\n    /**\n     * フェードアウトにかかる時間の取得\n     * @return フェードアウトにかかる時間[秒]\n     */\n    public getFadeOutTime(): number {\n      return this._fadeOutSeconds;\n    }\n\n    /**\n     * フェードインにかかる時間の取得\n     * @return フェードインにかかる時間[秒]\n     */\n    public getFadeInTime(): number {\n      return this._fadeInSeconds;\n    }\n\n    /**\n     * モーション適用の重みの設定\n     * @param weight 重み（0.0 - 1.0）\n     */\n    public setWeight(weight: number): void {\n      this._weight = weight;\n    }\n\n    /**\n     * モーション適用の重みの取得\n     * @return 重み（0.0 - 1.0）\n     */\n    public getWeight(): number {\n      return this._weight;\n    }\n\n    /**\n     * モーションの長さの取得\n     * @return モーションの長さ[秒]\n     *\n     * @note ループの時は「-1」。\n     *       ループでない場合は、オーバーライドする。\n     *       正の値の時は取得される時間で終了する。\n     *       「-1」の時は外部から停止命令がない限り終わらない処理となる。\n     */\n    public getDuration(): number {\n      return -1.0;\n    }\n\n    /**\n     * モーションのループ1回分の長さの取得\n     * @return モーションのループ一回分の長さ[秒]\n     *\n     * @note ループしない場合は、getDuration()と同じ値を返す\n     *       ループ一回分の長さが定義できない場合(プログラム的に動き続けるサブクラスなど)の場合は「-1」を返す\n     */\n    public getLoopDuration(): number {\n      return -1.0;\n    }\n\n    /**\n     * モーション再生の開始時刻の設定\n     * @param offsetSeconds モーション再生の開始時刻[秒]\n     */\n    public setOffsetTime(offsetSeconds: number): void {\n      this._offsetSeconds = offsetSeconds;\n    }\n\n    /**\n     * モデルのパラメータ更新\n     *\n     * イベント発火のチェック。\n     * 入力する時間は呼ばれるモーションタイミングを０とした秒数で行う。\n     *\n     * @param beforeCheckTimeSeconds 前回のイベントチェック時間[秒]\n     * @param motionTimeSeconds 今回の再生時間[秒]\n     */\n    public getFiredEvent(\n      beforeCheckTimeSeconds: number,\n      motionTimeSeconds: number\n    ): csmVector<csmString> {\n      return this._firedEventValues;\n    }\n\n    /**\n     * モーションを更新して、モデルにパラメータ値を反映する\n     * @param model 対象のモデル\n     * @param userTimeSeconds デルタ時間の積算値[秒]\n     * @param weight モーションの重み\n     * @param motionQueueEntry CubismMotionQueueManagerで管理されているモーション\n     * @return true モデルへパラメータ値の反映あり\n     * @return false モデルへのパラメータ値の反映なし（モーションの変化なし）\n     */\n    public abstract doUpdateParameters(\n      model: CubismModel,\n      userTimeSeconds: number,\n      weight: number,\n      motionQueueEntry: CubismMotionQueueEntry\n    ): void;\n\n    /**\n     * モーション再生終了コールバックの登録\n     *\n     * モーション再生終了コールバックを登録する。\n     * isFinishedフラグを設定するタイミングで呼び出される。\n     * 以下の状態の際には呼び出されない:\n     *   1. 再生中のモーションが「ループ」として設定されているとき\n     *   2. コールバックが登録されていない時\n     *\n     * @param onFinishedMotionHandler モーション再生終了コールバック関数\n     */\n    public setFinishedMotionHandler = (\n      onFinishedMotionHandler: FinishedMotionCallback\n    ) => (this._onFinishedMotion = onFinishedMotionHandler);\n\n    /**\n     * モーション再生終了コールバックの取得\n     *\n     * モーション再生終了コールバックを取得する。\n     *\n     * @return 登録されているモーション再生終了コールバック関数\n     */\n    public getFinishedMotionHandler = () => this._onFinishedMotion;\n\n    public _fadeInSeconds: number; // フェードインにかかる時間[秒]\n    public _fadeOutSeconds: number; // フェードアウトにかかる時間[秒]\n    public _weight: number; // モーションの重み\n    public _offsetSeconds: number; // モーション再生の開始時間[秒]\n\n    public _firedEventValues: csmVector<csmString>;\n\n    // モーション再生終了コールバック関数\n    public _onFinishedMotion?: FinishedMotionCallback;\n  }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { Live2DCubismFramework as acubismmotion } from './acubismmotion';\nimport { Live2DCubismFramework as cubismmotionqueuemanager } from './cubismmotionqueuemanager';\nimport CubismMotionQueueEntryHandle = cubismmotionqueuemanager.CubismMotionQueueEntryHandle;\nimport ACubismMotion = acubismmotion.ACubismMotion;\n\nexport namespace Live2DCubismFramework {\n  /**\n   * CubismMotionQueueManagerで再生している各モーションの管理クラス。\n   */\n  export class CubismMotionQueueEntry {\n    /**\n     * コンストラクタ\n     */\n    public constructor() {\n      this._autoDelete = false;\n      this._motion = null;\n      this._available = true;\n      this._finished = false;\n      this._started = false;\n      this._startTimeSeconds = -1.0;\n      this._fadeInStartTimeSeconds = 0.0;\n      this._endTimeSeconds = -1.0;\n      this._stateTimeSeconds = 0.0;\n      this._stateWeight = 0.0;\n      this._lastEventCheckSeconds = 0.0;\n      this._motionQueueEntryHandle = this;\n    }\n\n    /**\n     * デストラクタ相当の処理\n     */\n    public release(): void {\n      if (this._autoDelete && this._motion) {\n        ACubismMotion.delete(this._motion); //\n      }\n    }\n\n    /**\n     * フェードアウトの開始\n     * @param fadeOutSeconds フェードアウトにかかる時間[秒]\n     * @param userTimeSeconds デルタ時間の積算値[秒]\n     */\n    public startFadeout(fadeoutSeconds: number, userTimeSeconds: number): void {\n      const newEndTimeSeconds: number = userTimeSeconds + fadeoutSeconds;\n\n      if (\n        this._endTimeSeconds < 0.0 ||\n        newEndTimeSeconds < this._endTimeSeconds\n      ) {\n        this._endTimeSeconds = newEndTimeSeconds;\n      }\n    }\n\n    /**\n     * モーションの終了の確認\n     *\n     * @return true モーションが終了した\n     * @return false 終了していない\n     */\n    public isFinished(): boolean {\n      return this._finished;\n    }\n\n    /**\n     * モーションの開始の確認\n     * @return true モーションが開始した\n     * @return false 開始していない\n     */\n    public isStarted(): boolean {\n      return this._started;\n    }\n\n    /**\n     * モーションの開始時刻の取得\n     * @return モーションの開始時刻[秒]\n     */\n    public getStartTime(): number {\n      return this._startTimeSeconds;\n    }\n\n    /**\n     * フェードインの開始時刻の取得\n     * @return フェードインの開始時刻[秒]\n     */\n    public getFadeInStartTime(): number {\n      return this._fadeInStartTimeSeconds;\n    }\n\n    /**\n     * フェードインの終了時刻の取得\n     * @return フェードインの終了時刻の取得\n     */\n    public getEndTime(): number {\n      return this._endTimeSeconds;\n    }\n\n    /**\n     * モーションの開始時刻の設定\n     * @param startTime モーションの開始時刻\n     */\n    public setStartTime(startTime: number): void {\n      this._startTimeSeconds = startTime;\n    }\n\n    /**\n     * フェードインの開始時刻の設定\n     * @param startTime フェードインの開始時刻[秒]\n     */\n    public setFadeInStartTime(startTime: number): void {\n      this._fadeInStartTimeSeconds = startTime;\n    }\n\n    /**\n     * フェードインの終了時刻の設定\n     * @param endTime フェードインの終了時刻[秒]\n     */\n    public setEndTime(endTime: number): void {\n      this._endTimeSeconds = endTime;\n    }\n\n    /**\n     * モーションの終了の設定\n     * @param f trueならモーションの終了\n     */\n    public setIsFinished(f: boolean): void {\n      this._finished = f;\n    }\n\n    /**\n     * モーション開始の設定\n     * @param f trueならモーションの開始\n     */\n    public setIsStarted(f: boolean): void {\n      this._started = f;\n    }\n\n    /**\n     * モーションの有効性の確認\n     * @return true モーションは有効\n     * @return false モーションは無効\n     */\n    public isAvailable(): boolean {\n      return this._available;\n    }\n\n    /**\n     * モーションの有効性の設定\n     * @param v trueならモーションは有効\n     */\n    public setIsAvailable(v: boolean): void {\n      this._available = v;\n    }\n\n    /**\n     * モーションの状態の設定\n     * @param timeSeconds 現在時刻[秒]\n     * @param weight モーション尾重み\n     */\n    public setState(timeSeconds: number, weight: number): void {\n      this._stateTimeSeconds = timeSeconds;\n      this._stateWeight = weight;\n    }\n\n    /**\n     * モーションの現在時刻の取得\n     * @return モーションの現在時刻[秒]\n     */\n    public getStateTime(): number {\n      return this._stateTimeSeconds;\n    }\n\n    /**\n     * モーションの重みの取得\n     * @return モーションの重み\n     */\n    public getStateWeight(): number {\n      return this._stateWeight;\n    }\n\n    /**\n     * 最後にイベントの発火をチェックした時間を取得\n     *\n     * @return 最後にイベントの発火をチェックした時間[秒]\n     */\n    public getLastCheckEventTime(): number {\n      return this._lastEventCheckSeconds;\n    }\n\n    /**\n     * 最後にイベントをチェックした時間を設定\n     * @param checkTime 最後にイベントをチェックした時間[秒]\n     */\n    public setLastCheckEventTime(checkTime: number): void {\n      this._lastEventCheckSeconds = checkTime;\n    }\n\n    _autoDelete: boolean; // 自動削除\n    _motion: ACubismMotion; // モーション\n\n    _available: boolean; // 有効化フラグ\n    _finished: boolean; // 終了フラグ\n    _started: boolean; // 開始フラグ\n    _startTimeSeconds: number; // モーション再生開始時刻[秒]\n    _fadeInStartTimeSeconds: number; // フェードイン開始時刻（ループの時は初回のみ）[秒]\n    _endTimeSeconds: number; // 終了予定時刻[秒]\n    _stateTimeSeconds: number; // 時刻の状態[秒]\n    _stateWeight: number; // 重みの状態\n    _lastEventCheckSeconds: number; // 最終のMotion側のチェックした時間\n\n    _motionQueueEntryHandle: CubismMotionQueueEntryHandle; // インスタンスごとに一意の値を持つ識別番号\n  }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { Live2DCubismFramework as acubismmotion } from './acubismmotion';\nimport { Live2DCubismFramework as cubismmotionqueueentry } from './cubismmotionqueueentry';\nimport { Live2DCubismFramework as csmvector } from '../type/csmvector';\nimport { Live2DCubismFramework as cubismmodel } from '../model/cubismmodel';\nimport { Live2DCubismFramework as csmstring } from '../type/csmstring';\nimport csmString = csmstring.csmString;\nimport CubismModel = cubismmodel.CubismModel;\nimport csmVector = csmvector.csmVector;\nimport iterator = csmvector.iterator;\nimport CubismMotionQueueEntry = cubismmotionqueueentry.CubismMotionQueueEntry;\nimport ACubismMotion = acubismmotion.ACubismMotion;\n\nexport namespace Live2DCubismFramework {\n  /**\n   * モーション再生の管理\n   *\n   * モーション再生の管理用クラス。CubismMotionモーションなどACubismMotionのサブクラスを再生するために使用する。\n   *\n   * @note 再生中に別のモーションが StartMotion()された場合は、新しいモーションに滑らかに変化し旧モーションは中断する。\n   *       表情用モーション、体用モーションなどを分けてモーション化した場合など、\n   *       複数のモーションを同時に再生させる場合は、複数のCubismMotionQueueManagerインスタンスを使用する。\n   */\n  export class CubismMotionQueueManager {\n    /**\n     * コンストラクタ\n     */\n    public constructor() {\n      this._userTimeSeconds = 0.0;\n      this._eventCallBack = null;\n      this._eventCustomData = null;\n      this._motions = new csmVector<CubismMotionQueueEntry>();\n    }\n\n    /**\n     * デストラクタ\n     */\n    public release(): void {\n      for (let i = 0; i < this._motions.getSize(); ++i) {\n        if (this._motions.at(i)) {\n          this._motions.at(i).release();\n          this._motions.set(i, void 0);\n          this._motions.set(i, null);\n        }\n      }\n\n      this._motions = null;\n    }\n\n    /**\n     * 指定したモーションの開始\n     *\n     * 指定したモーションを開始する。同じタイプのモーションが既にある場合は、既存のモーションに終了フラグを立て、フェードアウトを開始させる。\n     *\n     * @param   motion          開始するモーション\n     * @param   autoDelete      再生が終了したモーションのインスタンスを削除するなら true\n     * @param   userTimeSeconds デルタ時間の積算値[秒]\n     * @return                      開始したモーションの識別番号を返す。個別のモーションが終了したか否かを判定するIsFinished()の引数で使用する。開始できない時は「-1」\n     */\n    public startMotion(\n      motion: ACubismMotion,\n      autoDelete: boolean,\n      userTimeSeconds: number\n    ): CubismMotionQueueEntryHandle {\n      if (motion == null) {\n        return InvalidMotionQueueEntryHandleValue;\n      }\n\n      let motionQueueEntry: CubismMotionQueueEntry = null;\n\n      // 既にモーションがあれば終了フラグを立てる\n      for (let i = 0; i < this._motions.getSize(); ++i) {\n        motionQueueEntry = this._motions.at(i);\n        if (motionQueueEntry == null) {\n          continue;\n        }\n\n        motionQueueEntry.startFadeout(\n          motionQueueEntry._motion.getFadeOutTime(),\n          userTimeSeconds\n        ); // フェードアウトを開始し終了する\n      }\n\n      motionQueueEntry = new CubismMotionQueueEntry(); // 終了時に破棄する\n      motionQueueEntry._autoDelete = autoDelete;\n      motionQueueEntry._motion = motion;\n\n      this._motions.pushBack(motionQueueEntry);\n\n      return motionQueueEntry._motionQueueEntryHandle;\n    }\n\n    /**\n     * 全てのモーションの終了の確認\n     * @return true 全て終了している\n     * @return false 終了していない\n     */\n    public isFinished(): boolean {\n      // ------- 処理を行う -------\n      // 既にモーションがあれば終了フラグを立てる\n\n      for (\n        let ite: iterator<CubismMotionQueueEntry> = this._motions.begin();\n        ite.notEqual(this._motions.end());\n\n      ) {\n        let motionQueueEntry: CubismMotionQueueEntry = ite.ptr();\n\n        if (motionQueueEntry == null) {\n          ite = this._motions.erase(ite); // 削除\n          continue;\n        }\n\n        const motion: ACubismMotion = motionQueueEntry._motion;\n\n        if (motion == null) {\n          motionQueueEntry.release();\n          motionQueueEntry = void 0;\n          motionQueueEntry = null;\n          ite = this._motions.erase(ite); // 削除\n          continue;\n        }\n\n        // ----- 終了済みの処理があれば削除する ------\n        if (!motionQueueEntry.isFinished()) {\n          return false;\n        } else {\n          ite.preIncrement();\n        }\n      }\n\n      return true;\n    }\n\n    /**\n     * 指定したモーションの終了の確認\n     * @param motionQueueEntryNumber モーションの識別番号\n     * @return true 全て終了している\n     * @return false 終了していない\n     */\n    public isFinishedByHandle(\n      motionQueueEntryNumber: CubismMotionQueueEntryHandle\n    ): boolean {\n      // 既にモーションがあれば終了フラグを立てる\n      for (\n        let ite: iterator<CubismMotionQueueEntry> = this._motions.begin();\n        ite.notEqual(this._motions.end());\n        ite.increment()\n      ) {\n        const motionQueueEntry: CubismMotionQueueEntry = ite.ptr();\n\n        if (motionQueueEntry == null) {\n          continue;\n        }\n\n        if (\n          motionQueueEntry._motionQueueEntryHandle == motionQueueEntryNumber &&\n          !motionQueueEntry.isFinished()\n        ) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * 全てのモーションを停止する\n     */\n    public stopAllMotions(): void {\n      // ------- 処理を行う -------\n      // 既にモーションがあれば終了フラグを立てる\n\n      for (\n        let ite: iterator<CubismMotionQueueEntry> = this._motions.begin();\n        ite.notEqual(this._motions.end());\n\n      ) {\n        let motionQueueEntry: CubismMotionQueueEntry = ite.ptr();\n\n        if (motionQueueEntry == null) {\n          ite = this._motions.erase(ite);\n\n          continue;\n        }\n\n        // ----- 終了済みの処理があれば削除する ------\n        motionQueueEntry.release();\n        motionQueueEntry = void 0;\n        motionQueueEntry = null;\n        ite = this._motions.erase(ite); // 削除\n      }\n    }\n\n    /**\n         * 指定したCubismMotionQueueEntryの取得\n\n         * @param   motionQueueEntryNumber  モーションの識別番号\n         * @return  指定したCubismMotionQueueEntry\n         * @return  null   見つからなかった\n         */\n    public getCubismMotionQueueEntry(\n      motionQueueEntryNumber: any\n    ): CubismMotionQueueEntry {\n      //------- 処理を行う -------\n      // 既にモーションがあれば終了フラグを立てる\n      for (\n        let ite: iterator<CubismMotionQueueEntry> = this._motions.begin();\n        ite.notEqual(this._motions.end());\n        ite.preIncrement()\n      ) {\n        const motionQueueEntry: CubismMotionQueueEntry = ite.ptr();\n\n        if (motionQueueEntry == null) {\n          continue;\n        }\n\n        if (\n          motionQueueEntry._motionQueueEntryHandle == motionQueueEntryNumber\n        ) {\n          return motionQueueEntry;\n        }\n      }\n\n      return null;\n    }\n\n    /**\n     * イベントを受け取るCallbackの登録\n     *\n     * @param callback コールバック関数\n     * @param customData コールバックに返されるデータ\n     */\n    public setEventCallback(\n      callback: CubismMotionEventFunction,\n      customData: any = null\n    ): void {\n      this._eventCallBack = callback;\n      this._eventCustomData = customData;\n    }\n\n    /**\n     * モーションを更新して、モデルにパラメータ値を反映する。\n     *\n     * @param   model   対象のモデル\n     * @param   userTimeSeconds   デルタ時間の積算値[秒]\n     * @return  true    モデルへパラメータ値の反映あり\n     * @return  false   モデルへパラメータ値の反映なし(モーションの変化なし)\n     */\n    public doUpdateMotion(\n      model: CubismModel,\n      userTimeSeconds: number\n    ): boolean {\n      let updated = false;\n\n      // ------- 処理を行う --------\n      // 既にモーションがあれば終了フラグを立てる\n\n      for (\n        let ite: iterator<CubismMotionQueueEntry> = this._motions.begin();\n        ite.notEqual(this._motions.end());\n\n      ) {\n        let motionQueueEntry: CubismMotionQueueEntry = ite.ptr();\n\n        if (motionQueueEntry == null) {\n          ite = this._motions.erase(ite); // 削除\n          continue;\n        }\n\n        const motion: ACubismMotion = motionQueueEntry._motion;\n\n        if (motion == null) {\n          motionQueueEntry.release();\n          motionQueueEntry = void 0;\n          motionQueueEntry = null;\n          ite = this._motions.erase(ite); // 削除\n\n          continue;\n        }\n\n        // ------ 値を反映する ------\n        motion.updateParameters(model, motionQueueEntry, userTimeSeconds);\n        updated = true;\n\n        // ------ ユーザトリガーイベントを検査する ----\n        const firedList: csmVector<csmString> = motion.getFiredEvent(\n          motionQueueEntry.getLastCheckEventTime() -\n            motionQueueEntry.getStartTime(),\n          userTimeSeconds - motionQueueEntry.getStartTime()\n        );\n\n        for (let i = 0; i < firedList.getSize(); ++i) {\n          this._eventCallBack(this, firedList.at(i), this._eventCustomData);\n        }\n\n        motionQueueEntry.setLastCheckEventTime(userTimeSeconds);\n\n        // ------ 終了済みの処理があれば削除する ------\n        if (motionQueueEntry.isFinished()) {\n          motionQueueEntry.release();\n          motionQueueEntry = void 0;\n          motionQueueEntry = null;\n          ite = this._motions.erase(ite); // 削除\n        } else {\n          ite.preIncrement();\n        }\n      }\n\n      return updated;\n    }\n    _userTimeSeconds: number; // デルタ時間の積算値[秒]\n\n    _motions: csmVector<CubismMotionQueueEntry>; // モーション\n    _eventCallBack: CubismMotionEventFunction; // コールバック関数\n    _eventCustomData: any; // コールバックに戻されるデータ\n  }\n\n  /**\n   * イベントのコールバック関数を定義\n   *\n   * イベントのコールバックに登録できる関数の型情報\n   * @param caller        発火したイベントを再生させたCubismMotionQueueManager\n   * @param eventValue    発火したイベントの文字列データ\n   * @param customData   コールバックに返される登録時に指定されたデータ\n   */\n  export interface CubismMotionEventFunction {\n    (\n      caller: CubismMotionQueueManager,\n      eventValue: csmString,\n      customData: any\n    ): void;\n  }\n\n  /**\n   * モーションの識別番号\n   *\n   * モーションの識別番号の定義\n   */\n  export declare type CubismMotionQueueEntryHandle = any;\n  export const InvalidMotionQueueEntryHandleValue: CubismMotionQueueEntryHandle = -1;\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { Live2DCubismFramework as cubismmotionqueuemanager } from './cubismmotionqueuemanager';\nimport { Live2DCubismFramework as acubismmotion } from './acubismmotion';\nimport { Live2DCubismFramework as cubismmodel } from '../model/cubismmodel';\nimport CubismMotionQueueEntryHandle = cubismmotionqueuemanager.CubismMotionQueueEntryHandle;\nimport CubismModel = cubismmodel.CubismModel;\nimport ACubismMotion = acubismmotion.ACubismMotion;\nimport CubismMotionQueueManager = cubismmotionqueuemanager.CubismMotionQueueManager;\n\nexport namespace Live2DCubismFramework {\n  /**\n   * モーションの管理\n   *\n   * モーションの管理を行うクラス\n   */\n  export class CubismMotionManager extends CubismMotionQueueManager {\n    /**\n     * コンストラクタ\n     */\n    public constructor() {\n      super();\n      this._currentPriority = 0;\n      this._reservePriority = 0;\n    }\n\n    /**\n     * 再生中のモーションの優先度の取得\n     * @return  モーションの優先度\n     */\n    public getCurrentPriority(): number {\n      return this._currentPriority;\n    }\n\n    /**\n     * 予約中のモーションの優先度を取得する。\n     * @return  モーションの優先度\n     */\n    public getReservePriority(): number {\n      return this._reservePriority;\n    }\n\n    /**\n     * 予約中のモーションの優先度を設定する。\n     * @param   val     優先度\n     */\n    public setReservePriority(val: number): void {\n      this._reservePriority = val;\n    }\n\n    /**\n     * 優先度を設定してモーションを開始する。\n     *\n     * @param motion          モーション\n     * @param autoDelete      再生が狩猟したモーションのインスタンスを削除するならtrue\n     * @param priority        優先度\n     * @return                開始したモーションの識別番号を返す。個別のモーションが終了したか否かを判定するIsFinished()の引数で使用する。開始できない時は「-1」\n     */\n    public startMotionPriority(\n      motion: ACubismMotion,\n      autoDelete: boolean,\n      priority: number\n    ): CubismMotionQueueEntryHandle {\n      if (priority == this._reservePriority) {\n        this._reservePriority = 0; // 予約を解除\n      }\n\n      this._currentPriority = priority; // 再生中モーションの優先度を設定\n\n      return super.startMotion(motion, autoDelete, this._userTimeSeconds);\n    }\n\n    /**\n     * モーションを更新して、モデルにパラメータ値を反映する。\n     *\n     * @param model   対象のモデル\n     * @param deltaTimeSeconds    デルタ時間[秒]\n     * @return  true    更新されている\n     * @return  false   更新されていない\n     */\n    public updateMotion(model: CubismModel, deltaTimeSeconds: number): boolean {\n      this._userTimeSeconds += deltaTimeSeconds;\n\n      const updated: boolean = super.doUpdateMotion(\n        model,\n        this._userTimeSeconds\n      );\n\n      if (this.isFinished()) {\n        this._currentPriority = 0; // 再生中のモーションの優先度を解除\n      }\n\n      return updated;\n    }\n\n    /**\n     * モーションを予約する。\n     *\n     * @param   priority    優先度\n     * @return  true    予約できた\n     * @return  false   予約できなかった\n     */\n    public reserveMotion(priority: number): boolean {\n      if (\n        priority <= this._reservePriority ||\n        priority <= this._currentPriority\n      ) {\n        return false;\n      }\n\n      this._reservePriority = priority;\n\n      return true;\n    }\n\n    _currentPriority: number; // 現在再生中のモーションの優先度\n    _reservePriority: number; // 再生予定のモーションの優先度。再生中は0になる。モーションファイルを別スレッドで読み込むときの機能。\n  }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { Live2DCubismFramework as csmmap } from '../type/csmmap';\nimport { Live2DCubismFramework as cubismmatrix44 } from './cubismmatrix44';\nimport csmMap = csmmap.csmMap;\nimport iterator = csmmap.iterator;\nimport CubismMatrix44 = cubismmatrix44.CubismMatrix44;\n\nexport namespace Live2DCubismFramework {\n  /**\n   * モデル座標設定用の4x4行列\n   *\n   * モデル座標設定用の4x4行列クラス\n   */\n  export class CubismModelMatrix extends CubismMatrix44 {\n    /**\n     * コンストラクタ\n     *\n     * @param w 横幅\n     * @param h 縦幅\n     */\n    constructor(w?: number, h?: number) {\n      super();\n\n      this._width = w !== undefined ? w : 0.0;\n      this._height = h !== undefined ? h : 0.0;\n\n      this.setHeight(1.0);\n    }\n\n    /**\n     * 横幅を設定\n     *\n     * @param w 横幅\n     */\n    public setWidth(w: number): void {\n      const scaleX: number = w / this._width;\n      const scaleY: number = scaleX;\n      this.scale(scaleX, scaleY);\n    }\n\n    /**\n     * 縦幅を設定\n     * @param h 縦幅\n     */\n    public setHeight(h: number): void {\n      const scaleX: number = h / this._height;\n      const scaleY: number = scaleX;\n      this.scale(scaleX, scaleY);\n    }\n\n    /**\n     * 位置を設定\n     *\n     * @param x X軸の位置\n     * @param y Y軸の位置\n     */\n    public setPosition(x: number, y: number): void {\n      this.translate(x, y);\n    }\n\n    /**\n     * 中心位置を設定\n     *\n     * @param x X軸の中心位置\n     * @param y Y軸の中心位置\n     *\n     * @note widthかheightを設定したあとでないと、拡大率が正しく取得できないためずれる。\n     */\n    public setCenterPosition(x: number, y: number) {\n      this.centerX(x);\n      this.centerY(y);\n    }\n\n    /**\n     * 上辺の位置を設定する\n     *\n     * @param y 上辺のY軸位置\n     */\n    public top(y: number): void {\n      this.setY(y);\n    }\n\n    /**\n     * 下辺の位置を設定する\n     *\n     * @param y 下辺のY軸位置\n     */\n    public bottom(y: number) {\n      const h: number = this._height * this.getScaleY();\n\n      this.translateY(y - h);\n    }\n\n    /**\n     * 左辺の位置を設定\n     *\n     * @param x 左辺のX軸位置\n     */\n    public left(x: number): void {\n      this.setX(x);\n    }\n\n    /**\n     * 右辺の位置を設定\n     *\n     * @param x 右辺のX軸位置\n     */\n    public right(x: number): void {\n      const w = this._width * this.getScaleX();\n\n      this.translateX(x - w);\n    }\n\n    /**\n     * X軸の中心位置を設定\n     *\n     * @param x X軸の中心位置\n     */\n    public centerX(x: number): void {\n      const w = this._width * this.getScaleX();\n\n      this.translateX(x - w / 2.0);\n    }\n\n    /**\n     * X軸の位置を設定\n     *\n     * @param x X軸の位置\n     */\n    public setX(x: number): void {\n      this.translateX(x);\n    }\n\n    /**\n     * Y軸の中心位置を設定\n     *\n     * @param y Y軸の中心位置\n     */\n    public centerY(y: number): void {\n      const h: number = this._height * this.getScaleY();\n\n      this.translateY(y - h / 2.0);\n    }\n\n    /**\n     * Y軸の位置を設定する\n     *\n     * @param y Y軸の位置\n     */\n    public setY(y: number): void {\n      this.translateY(y);\n    }\n\n    /**\n     * レイアウト情報から位置を設定\n     *\n     * @param layout レイアウト情報\n     */\n    public setupFromLayout(layout: csmMap<string, number>): void {\n      const keyWidth = 'width';\n      const keyHeight = 'height';\n      const keyX = 'x';\n      const keyY = 'y';\n      const keyCenterX = 'center_x';\n      const keyCenterY = 'center_y';\n      const keyTop = 'top';\n      const keyBottom = 'bottom';\n      const keyLeft = 'left';\n      const keyRight = 'right';\n\n      for (\n        const ite: iterator<string, number> = layout.begin();\n        ite.notEqual(layout.end());\n        ite.preIncrement()\n      ) {\n        const key: string = ite.ptr().first;\n        const value: number = ite.ptr().second;\n\n        if (key == keyWidth) {\n          this.setWidth(value);\n        } else if (key == keyHeight) {\n          this.setHeight(value);\n        }\n      }\n\n      for (\n        const ite: iterator<string, number> = layout.begin();\n        ite.notEqual(layout.end());\n        ite.preIncrement()\n      ) {\n        const key: string = ite.ptr().first;\n        const value: number = ite.ptr().second;\n\n        if (key == keyX) {\n          this.setX(value);\n        } else if (key == keyY) {\n          this.setY(value);\n        } else if (key == keyCenterX) {\n          this.centerX(value);\n        } else if (key == keyCenterY) {\n          this.centerY(value);\n        } else if (key == keyTop) {\n          this.top(value);\n        } else if (key == keyBottom) {\n          this.bottom(value);\n        } else if (key == keyLeft) {\n          this.left(value);\n        } else if (key == keyRight) {\n          this.right(value);\n        }\n      }\n    }\n\n    private _width: number; // 横幅\n    private _height: number; // 縦幅\n  }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { Live2DCubismFramework as cubismjson } from '../utils/cubismjson';\nimport { Live2DCubismFramework as cubismid } from '../id/cubismid';\nimport { Live2DCubismFramework as cubismframework } from '../live2dcubismframework';\nimport { Live2DCubismFramework as csmstring } from '../type/csmstring';\nimport csmString = csmstring.csmString;\nimport CubismFramework = cubismframework.CubismFramework;\nimport CubismIdHandle = cubismid.CubismIdHandle;\nimport CubismJson = cubismjson.CubismJson;\n\nexport namespace Live2DCubismFramework {\n  // JSON keys\n  const Meta = 'Meta';\n  const Duration = 'Duration';\n  const Loop = 'Loop';\n  const CurveCount = 'CurveCount';\n  const Fps = 'Fps';\n  const TotalSegmentCount = 'TotalSegmentCount';\n  const TotalPointCount = 'TotalPointCount';\n  const Curves = 'Curves';\n  const Target = 'Target';\n  const Id = 'Id';\n  const FadeInTime = 'FadeInTime';\n  const FadeOutTime = 'FadeOutTime';\n  const Segments = 'Segments';\n  const UserData = 'UserData';\n  const UserDataCount = 'UserDataCount';\n  const TotalUserDataSize = 'TotalUserDataSize';\n  const Time = 'Time';\n  const Value = 'Value';\n\n  /**\n   * motion3.jsonのコンテナ。\n   */\n  export class CubismMotionJson {\n    /**\n     * コンストラクタ\n     * @param buffer motion3.jsonが読み込まれているバッファ\n     * @param size バッファのサイズ\n     */\n    public constructor(buffer: ArrayBuffer, size: number) {\n      this._json = CubismJson.create(buffer, size);\n    }\n\n    /**\n     * デストラクタ相当の処理\n     */\n    public release(): void {\n      CubismJson.delete(this._json);\n    }\n\n    /**\n     * モーションの長さを取得する\n     * @return モーションの長さ[秒]\n     */\n    public getMotionDuration(): number {\n      return this._json\n        .getRoot()\n        .getValueByString(Meta)\n        .getValueByString(Duration)\n        .toFloat();\n    }\n\n    /**\n     * モーションのループ情報の取得\n     * @return true ループする\n     * @return false ループしない\n     */\n    public isMotionLoop(): boolean {\n      return this._json\n        .getRoot()\n        .getValueByString(Meta)\n        .getValueByString(Loop)\n        .toBoolean();\n    }\n\n    /**\n     * モーションカーブの個数の取得\n     * @return モーションカーブの個数\n     */\n    public getMotionCurveCount(): number {\n      return this._json\n        .getRoot()\n        .getValueByString(Meta)\n        .getValueByString(CurveCount)\n        .toInt();\n    }\n\n    /**\n     * モーションのフレームレートの取得\n     * @return フレームレート[FPS]\n     */\n    public getMotionFps(): number {\n      return this._json\n        .getRoot()\n        .getValueByString(Meta)\n        .getValueByString(Fps)\n        .toFloat();\n    }\n\n    /**\n     * モーションのセグメントの総合計の取得\n     * @return モーションのセグメントの取得\n     */\n    public getMotionTotalSegmentCount(): number {\n      return this._json\n        .getRoot()\n        .getValueByString(Meta)\n        .getValueByString(TotalSegmentCount)\n        .toInt();\n    }\n\n    /**\n     * モーションのカーブの制御店の総合計の取得\n     * @return モーションのカーブの制御点の総合計\n     */\n    public getMotionTotalPointCount(): number {\n      return this._json\n        .getRoot()\n        .getValueByString(Meta)\n        .getValueByString(TotalPointCount)\n        .toInt();\n    }\n\n    /**\n     * モーションのフェードイン時間の存在\n     * @return true 存在する\n     * @return false 存在しない\n     */\n    public isExistMotionFadeInTime(): boolean {\n      return !this._json\n        .getRoot()\n        .getValueByString(Meta)\n        .getValueByString(FadeInTime)\n        .isNull();\n    }\n\n    /**\n     * モーションのフェードアウト時間の存在\n     * @return true 存在する\n     * @return false 存在しない\n     */\n    public isExistMotionFadeOutTime(): boolean {\n      return !this._json\n        .getRoot()\n        .getValueByString(Meta)\n        .getValueByString(FadeOutTime)\n        .isNull();\n    }\n\n    /**\n     * モーションのフェードイン時間の取得\n     * @return フェードイン時間[秒]\n     */\n    public getMotionFadeInTime(): number {\n      return this._json\n        .getRoot()\n        .getValueByString(Meta)\n        .getValueByString(FadeInTime)\n        .toFloat();\n    }\n\n    /**\n     * モーションのフェードアウト時間の取得\n     * @return フェードアウト時間[秒]\n     */\n    public getMotionFadeOutTime(): number {\n      return this._json\n        .getRoot()\n        .getValueByString(Meta)\n        .getValueByString(FadeOutTime)\n        .toFloat();\n    }\n\n    /**\n     * モーションのカーブの種類の取得\n     * @param curveIndex カーブのインデックス\n     * @return カーブの種類\n     */\n    public getMotionCurveTarget(curveIndex: number): string {\n      return this._json\n        .getRoot()\n        .getValueByString(Curves)\n        .getValueByIndex(curveIndex)\n        .getValueByString(Target)\n        .getRawString();\n    }\n\n    /**\n     * モーションのカーブのIDの取得\n     * @param curveIndex カーブのインデックス\n     * @return カーブのID\n     */\n    public getMotionCurveId(curveIndex: number): CubismIdHandle {\n      return CubismFramework.getIdManager().getId(\n        this._json\n          .getRoot()\n          .getValueByString(Curves)\n          .getValueByIndex(curveIndex)\n          .getValueByString(Id)\n          .getRawString()\n      );\n    }\n\n    /**\n     * モーションのカーブのフェードイン時間の存在\n     * @param curveIndex カーブのインデックス\n     * @return true 存在する\n     * @return false 存在しない\n     */\n    public isExistMotionCurveFadeInTime(curveIndex: number): boolean {\n      return !this._json\n        .getRoot()\n        .getValueByString(Curves)\n        .getValueByIndex(curveIndex)\n        .getValueByString(FadeInTime)\n        .isNull();\n    }\n\n    /**\n     * モーションのカーブのフェードアウト時間の存在\n     * @param curveIndex カーブのインデックス\n     * @return true 存在する\n     * @return false 存在しない\n     */\n    public isExistMotionCurveFadeOutTime(curveIndex: number): boolean {\n      return !this._json\n        .getRoot()\n        .getValueByString(Curves)\n        .getValueByIndex(curveIndex)\n        .getValueByString(FadeOutTime)\n        .isNull();\n    }\n\n    /**\n     * モーションのカーブのフェードイン時間の取得\n     * @param curveIndex カーブのインデックス\n     * @return フェードイン時間[秒]\n     */\n    public getMotionCurveFadeInTime(curveIndex: number): number {\n      return this._json\n        .getRoot()\n        .getValueByString(Curves)\n        .getValueByIndex(curveIndex)\n        .getValueByString(FadeInTime)\n        .toFloat();\n    }\n\n    /**\n     * モーションのカーブのフェードアウト時間の取得\n     * @param curveIndex カーブのインデックス\n     * @return フェードアウト時間[秒]\n     */\n    public getMotionCurveFadeOutTime(curveIndex: number): number {\n      return this._json\n        .getRoot()\n        .getValueByString(Curves)\n        .getValueByIndex(curveIndex)\n        .getValueByString(FadeOutTime)\n        .toFloat();\n    }\n\n    /**\n     * モーションのカーブのセグメントの個数を取得する\n     * @param curveIndex カーブのインデックス\n     * @return モーションのカーブのセグメントの個数\n     */\n    public getMotionCurveSegmentCount(curveIndex: number): number {\n      return this._json\n        .getRoot()\n        .getValueByString(Curves)\n        .getValueByIndex(curveIndex)\n        .getValueByString(Segments)\n        .getVector()\n        .getSize();\n    }\n\n    /**\n     * モーションのカーブのセグメントの値の取得\n     * @param curveIndex カーブのインデックス\n     * @param segmentIndex セグメントのインデックス\n     * @return セグメントの値\n     */\n    public getMotionCurveSegment(\n      curveIndex: number,\n      segmentIndex: number\n    ): number {\n      return this._json\n        .getRoot()\n        .getValueByString(Curves)\n        .getValueByIndex(curveIndex)\n        .getValueByString(Segments)\n        .getValueByIndex(segmentIndex)\n        .toFloat();\n    }\n\n    /**\n     * イベントの個数の取得\n     * @return イベントの個数\n     */\n    public getEventCount(): number {\n      return this._json\n        .getRoot()\n        .getValueByString(Meta)\n        .getValueByString(UserDataCount)\n        .toInt();\n    }\n\n    /**\n     *  イベントの総文字数の取得\n     * @return イベントの総文字数\n     */\n    public getTotalEventValueSize(): number {\n      return this._json\n        .getRoot()\n        .getValueByString(Meta)\n        .getValueByString(TotalUserDataSize)\n        .toInt();\n    }\n\n    /**\n     * イベントの時間の取得\n     * @param userDataIndex イベントのインデックス\n     * @return イベントの時間[秒]\n     */\n    public getEventTime(userDataIndex: number): number {\n      return this._json\n        .getRoot()\n        .getValueByString(UserData)\n        .getValueByIndex(userDataIndex)\n        .getValueByString(Time)\n        .toInt();\n    }\n\n    /**\n     * イベントの取得\n     * @param userDataIndex イベントのインデックス\n     * @return イベントの文字列\n     */\n    public getEventValue(userDataIndex: number): csmString {\n      return new csmString(\n        this._json\n          .getRoot()\n          .getValueByString(UserData)\n          .getValueByIndex(userDataIndex)\n          .getValueByString(Value)\n          .getRawString()\n      );\n    }\n\n    _json: CubismJson; // motion3.jsonのデータ\n  }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { Live2DCubismFramework as cubismid } from '../id/cubismid';\nimport { Live2DCubismFramework as csmstring } from '../type/csmstring';\nimport { Live2DCubismFramework as csmvector } from '../type/csmvector';\nimport csmVector = csmvector.csmVector;\nimport csmString = csmstring.csmString;\nimport CubismIdHandle = cubismid.CubismIdHandle;\n\nexport namespace Live2DCubismFramework {\n  /**\n   * @brief モーションカーブの種類\n   *\n   * モーションカーブの種類。\n   */\n  export enum CubismMotionCurveTarget {\n    CubismMotionCurveTarget_Model, // モデルに対して\n    CubismMotionCurveTarget_Parameter, // パラメータに対して\n    CubismMotionCurveTarget_PartOpacity // パーツの不透明度に対して\n  }\n\n  /**\n   * @brief モーションカーブのセグメントの種類\n   *\n   * モーションカーブのセグメントの種類。\n   */\n  export enum CubismMotionSegmentType {\n    CubismMotionSegmentType_Linear = 0, // リニア\n    CubismMotionSegmentType_Bezier = 1, // ベジェ曲線\n    CubismMotionSegmentType_Stepped = 2, // ステップ\n    CubismMotionSegmentType_InverseStepped = 3 // インバースステップ\n  }\n\n  /**\n   * @brief モーションカーブの制御点\n   *\n   * モーションカーブの制御点。\n   */\n  export class CubismMotionPoint {\n    time = 0.0; // 時間[秒]\n    value = 0.0; // 値\n  }\n\n  /**\n   * モーションカーブのセグメントの評価関数\n   *\n   * @param   points      モーションカーブの制御点リスト\n   * @param   time        評価する時間[秒]\n   */\n  export interface csmMotionSegmentEvaluationFunction {\n    (points: CubismMotionPoint[], time: number): number;\n  }\n\n  /**\n   * @brief モーションカーブのセグメント\n   *\n   * モーションカーブのセグメント。\n   */\n  export class CubismMotionSegment {\n    /**\n     * @brief コンストラクタ\n     *\n     * コンストラクタ。\n     */\n    public constructor() {\n      this.evaluate = null;\n      this.basePointIndex = 0;\n      this.segmentType = 0;\n    }\n\n    evaluate: csmMotionSegmentEvaluationFunction; // 使用する評価関数\n    basePointIndex: number; // 最初のセグメントへのインデックス\n    segmentType: number; // セグメントの種類\n  }\n\n  /**\n   * @brief モーションカーブ\n   *\n   * モーションカーブ。\n   */\n  export class CubismMotionCurve {\n    public constructor() {\n      this.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Model;\n      this.segmentCount = 0;\n      this.baseSegmentIndex = 0;\n      this.fadeInTime = 0.0;\n      this.fadeOutTime = 0.0;\n    }\n\n    type: CubismMotionCurveTarget; // カーブの種類\n    id: CubismIdHandle; // カーブのID\n    segmentCount: number; // セグメントの個数\n    baseSegmentIndex: number; // 最初のセグメントのインデックス\n    fadeInTime: number; // フェードインにかかる時間[秒]\n    fadeOutTime: number; // フェードアウトにかかる時間[秒]\n  }\n\n  /**\n   * イベント。\n   */\n  export class CubismMotionEvent {\n    fireTime = 0.0;\n    value: csmString;\n  }\n\n  /**\n   * @brief モーションデータ\n   *\n   * モーションデータ。\n   */\n  export class CubismMotionData {\n    public constructor() {\n      this.duration = 0.0;\n      this.loop = false;\n      this.curveCount = 0;\n      this.eventCount = 0;\n      this.fps = 0.0;\n\n      this.curves = new csmVector<CubismMotionCurve>();\n      this.segments = new csmVector<CubismMotionSegment>();\n      this.points = new csmVector<CubismMotionPoint>();\n      this.events = new csmVector<CubismMotionEvent>();\n    }\n\n    duration: number; // モーションの長さ[秒]\n    loop: boolean; // ループするかどうか\n    curveCount: number; // カーブの個数\n    eventCount: number; // UserDataの個数\n    fps: number; // フレームレート\n    curves: csmVector<CubismMotionCurve>; // カーブのリスト\n    segments: csmVector<CubismMotionSegment>; // セグメントのリスト\n    points: csmVector<CubismMotionPoint>; // ポイントのリスト\n    events: csmVector<CubismMotionEvent>; // イベントのリスト\n  }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { Live2DCubismFramework as cubismmotionjson } from './cubismmotionjson';\nimport { Live2DCubismFramework as cubismmotioninternal } from './cubismmotioninternal';\nimport { Live2DCubismFramework as acubismmotion } from './acubismmotion';\nimport { Live2DCubismFramework as cubismmodel } from '../model/cubismmodel';\nimport { Live2DCubismFramework as cubismframework } from '../live2dcubismframework';\nimport { Live2DCubismFramework as cubismmotionqueueentry } from './cubismmotionqueueentry';\nimport { Live2DCubismFramework as cubismmath } from '../math/cubismmath';\nimport { Live2DCubismFramework as csmvector } from '../type/csmvector';\nimport { Live2DCubismFramework as cubismid } from '../id/cubismid';\nimport { Live2DCubismFramework as csmstring } from '../type/csmstring';\nimport { CubismLogDebug, CSM_ASSERT } from '../utils/cubismdebug';\nimport csmString = csmstring.csmString;\nimport CubismMotionData = cubismmotioninternal.CubismMotionData;\nimport CubismMotionSegment = cubismmotioninternal.CubismMotionSegment;\nimport CubismMotionPoint = cubismmotioninternal.CubismMotionPoint;\nimport CubismMotionEvent = cubismmotioninternal.CubismMotionEvent;\nimport CubismMotionSegmentType = cubismmotioninternal.CubismMotionSegmentType;\nimport CubismIdHandle = cubismid.CubismIdHandle;\nimport CubismMotionCurve = cubismmotioninternal.CubismMotionCurve;\nimport CubismMotionCurveTarget = cubismmotioninternal.CubismMotionCurveTarget;\nimport csmVector = csmvector.csmVector;\nimport CubismMath = cubismmath.CubismMath;\nimport CubismMotionQueueEntry = cubismmotionqueueentry.CubismMotionQueueEntry;\nimport CubismFramework = cubismframework.CubismFramework;\nimport CubismModel = cubismmodel.CubismModel;\nimport ACubismMotion = acubismmotion.ACubismMotion;\nimport FinishedMotionCallback = acubismmotion.FinishedMotionCallback;\nimport CubismMotionJson = cubismmotionjson.CubismMotionJson;\n\nexport namespace Live2DCubismFramework {\n  const EffectNameEyeBlink = 'EyeBlink';\n  const EffectNameLipSync = 'LipSync';\n  const TargetNameModel = 'Model';\n  const TargetNameParameter = 'Parameter';\n  const TargetNamePartOpacity = 'PartOpacity';\n\n  function lerpPoints(\n    a: CubismMotionPoint,\n    b: CubismMotionPoint,\n    t: number\n  ): CubismMotionPoint {\n    const result: CubismMotionPoint = new CubismMotionPoint();\n\n    result.time = a.time + (b.time - a.time) * t;\n    result.value = a.value + (b.value - a.value) * t;\n\n    return result;\n  }\n\n  function linearEvaluate(points: CubismMotionPoint[], time: number): number {\n    let t: number = (time - points[0].time) / (points[1].time - points[0].time);\n\n    if (t < 0.0) {\n      t = 0.0;\n    }\n\n    return points[0].value + (points[1].value - points[0].value) * t;\n  }\n\n  function bezierEvaluate(points: CubismMotionPoint[], time: number): number {\n    let t: number = (time - points[0].time) / (points[3].time - points[0].time);\n\n    if (t < 0.0) {\n      t = 0.0;\n    }\n\n    const p01: CubismMotionPoint = lerpPoints(points[0], points[1], t);\n    const p12: CubismMotionPoint = lerpPoints(points[1], points[2], t);\n    const p23: CubismMotionPoint = lerpPoints(points[2], points[3], t);\n\n    const p012: CubismMotionPoint = lerpPoints(p01, p12, t);\n    const p123: CubismMotionPoint = lerpPoints(p12, p23, t);\n\n    return lerpPoints(p012, p123, t).value;\n  }\n\n  function steppedEvaluate(points: CubismMotionPoint[], time: number): number {\n    return points[0].value;\n  }\n\n  function inverseSteppedEvaluate(\n    points: CubismMotionPoint[],\n    time: number\n  ): number {\n    return points[1].value;\n  }\n\n  function evaluateCurve(\n    motionData: CubismMotionData,\n    index: number,\n    time: number\n  ): number {\n    // Find segment to evaluate.\n    const curve: CubismMotionCurve = motionData.curves.at(index);\n\n    let target = -1;\n    const totalSegmentCount: number =\n      curve.baseSegmentIndex + curve.segmentCount;\n    let pointPosition = 0;\n    for (let i: number = curve.baseSegmentIndex; i < totalSegmentCount; ++i) {\n      // Get first point of next segment.\n      pointPosition =\n        motionData.segments.at(i).basePointIndex +\n        (motionData.segments.at(i).segmentType ==\n        CubismMotionSegmentType.CubismMotionSegmentType_Bezier\n          ? 3\n          : 1);\n\n      // Break if time lies within current segment.\n      if (motionData.points.at(pointPosition).time > time) {\n        target = i;\n        break;\n      }\n    }\n\n    if (target == -1) {\n      return motionData.points.at(pointPosition).value;\n    }\n\n    const segment: CubismMotionSegment = motionData.segments.at(target);\n\n    return segment.evaluate(\n      motionData.points.get(segment.basePointIndex),\n      time\n    );\n  }\n\n  /**\n   * モーションクラス\n   *\n   * モーションのクラス。\n   */\n  export class CubismMotion extends ACubismMotion {\n    /**\n     * インスタンスを作成する\n     *\n     * @param buffer motion3.jsonが読み込まれているバッファ\n     * @param size バッファのサイズ\n     * @param onFinishedMotionHandler モーション再生終了時に呼び出されるコールバック関数\n     * @return 作成されたインスタンス\n     */\n    public static create(\n      buffer: ArrayBuffer,\n      size: number,\n      onFinishedMotionHandler?: FinishedMotionCallback\n    ): CubismMotion {\n      const ret = new CubismMotion();\n\n      ret.parse(buffer, size);\n      ret._sourceFrameRate = ret._motionData.fps;\n      ret._loopDurationSeconds = ret._motionData.duration;\n      ret._onFinishedMotion = onFinishedMotionHandler;\n\n      // NOTE: Editorではループありのモーション書き出しは非対応\n      // ret->_loop = (ret->_motionData->Loop > 0);\n      return ret;\n    }\n\n    /**\n     * モデルのパラメータの更新の実行\n     * @param model             対象のモデル\n     * @param userTimeSeconds   現在の時刻[秒]\n     * @param fadeWeight        モーションの重み\n     * @param motionQueueEntry  CubismMotionQueueManagerで管理されているモーション\n     */\n    public doUpdateParameters(\n      model: CubismModel,\n      userTimeSeconds: number,\n      fadeWeight: number,\n      motionQueueEntry: CubismMotionQueueEntry\n    ): void {\n      if (this._modelCurveIdEyeBlink == null) {\n        this._modelCurveIdEyeBlink = CubismFramework.getIdManager().getId(\n          EffectNameEyeBlink\n        );\n      }\n\n      if (this._modelCurveIdLipSync == null) {\n        this._modelCurveIdLipSync = CubismFramework.getIdManager().getId(\n          EffectNameLipSync\n        );\n      }\n\n      let timeOffsetSeconds: number =\n        userTimeSeconds - motionQueueEntry.getStartTime();\n\n      if (timeOffsetSeconds < 0.0) {\n        timeOffsetSeconds = 0.0; // エラー回避\n      }\n\n      let lipSyncValue: number = Number.MAX_VALUE;\n      let eyeBlinkValue: number = Number.MAX_VALUE;\n\n      //まばたき、リップシンクのうちモーションの適用を検出するためのビット（maxFlagCount個まで\n      const MaxTargetSize = 64;\n      let lipSyncFlags = 0;\n      let eyeBlinkFlags = 0;\n\n      //瞬き、リップシンクのターゲット数が上限を超えている場合\n      if (this._eyeBlinkParameterIds.getSize() > MaxTargetSize) {\n        CubismLogDebug(\n          'too many eye blink targets : {0}',\n          this._eyeBlinkParameterIds.getSize()\n        );\n      }\n      if (this._lipSyncParameterIds.getSize() > MaxTargetSize) {\n        CubismLogDebug(\n          'too many lip sync targets : {0}',\n          this._lipSyncParameterIds.getSize()\n        );\n      }\n\n      const tmpFadeIn: number =\n        this._fadeInSeconds <= 0.0\n          ? 1.0\n          : CubismMath.getEasingSine(\n              (userTimeSeconds - motionQueueEntry.getFadeInStartTime()) /\n                this._fadeInSeconds\n            );\n\n      const tmpFadeOut: number =\n        this._fadeOutSeconds <= 0.0 || motionQueueEntry.getEndTime() < 0.0\n          ? 1.0\n          : CubismMath.getEasingSine(\n              (motionQueueEntry.getEndTime() - userTimeSeconds) /\n                this._fadeOutSeconds\n            );\n      let value: number;\n      let c: number, parameterIndex: number;\n\n      // 'Repeat' time as necessary.\n      let time: number = timeOffsetSeconds;\n\n      if (this._isLoop) {\n        while (time > this._motionData.duration) {\n          time -= this._motionData.duration;\n        }\n      }\n\n      const curves: csmVector<CubismMotionCurve> = this._motionData.curves;\n\n      // Evaluate model curves.\n      for (\n        c = 0;\n        c < this._motionData.curveCount &&\n        curves.at(c).type ==\n          CubismMotionCurveTarget.CubismMotionCurveTarget_Model;\n        ++c\n      ) {\n        // Evaluate curve and call handler.\n        value = evaluateCurve(this._motionData, c, time);\n\n        if (curves.at(c).id == this._modelCurveIdEyeBlink) {\n          eyeBlinkValue = value;\n        } else if (curves.at(c).id == this._modelCurveIdLipSync) {\n          lipSyncValue = value;\n        }\n      }\n\n      let parameterMotionCurveCount = 0;\n\n      for (\n        ;\n        c < this._motionData.curveCount &&\n        curves.at(c).type ==\n          CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter;\n        ++c\n      ) {\n        parameterMotionCurveCount++;\n\n        // Find parameter index.\n        parameterIndex = model.getParameterIndex(curves.at(c).id);\n\n        // Skip curve evaluation if no value in sink.\n        if (parameterIndex == -1) {\n          continue;\n        }\n\n        const sourceValue: number = model.getParameterValueByIndex(\n          parameterIndex\n        );\n\n        // Evaluate curve and apply value.\n        value = evaluateCurve(this._motionData, c, time);\n\n        if (eyeBlinkValue != Number.MAX_VALUE) {\n          for (\n            let i = 0;\n            i < this._eyeBlinkParameterIds.getSize() && i < MaxTargetSize;\n            ++i\n          ) {\n            if (this._eyeBlinkParameterIds.at(i) == curves.at(c).id) {\n              value *= eyeBlinkValue;\n              eyeBlinkFlags |= 1 << i;\n              break;\n            }\n          }\n        }\n\n        if (lipSyncValue != Number.MAX_VALUE) {\n          for (\n            let i = 0;\n            i < this._lipSyncParameterIds.getSize() && i < MaxTargetSize;\n            ++i\n          ) {\n            if (this._lipSyncParameterIds.at(i) == curves.at(c).id) {\n              value += lipSyncValue;\n              lipSyncFlags |= 1 << i;\n              break;\n            }\n          }\n        }\n\n        let v: number;\n\n        // パラメータごとのフェード\n        if (curves.at(c).fadeInTime < 0.0 && curves.at(c).fadeOutTime < 0.0) {\n          // モーションのフェードを適用\n          v = sourceValue + (value - sourceValue) * fadeWeight;\n        } else {\n          // パラメータに対してフェードインかフェードアウトが設定してある場合はそちらを適用\n          let fin: number;\n          let fout: number;\n\n          if (curves.at(c).fadeInTime < 0.0) {\n            fin = tmpFadeIn;\n          } else {\n            fin =\n              curves.at(c).fadeInTime == 0.0\n                ? 1.0\n                : CubismMath.getEasingSine(\n                    (userTimeSeconds - motionQueueEntry.getFadeInStartTime()) /\n                      curves.at(c).fadeInTime\n                  );\n          }\n\n          if (curves.at(c).fadeOutTime < 0.0) {\n            fout = tmpFadeOut;\n          } else {\n            fout =\n              curves.at(c).fadeOutTime == 0.0 ||\n              motionQueueEntry.getEndTime() < 0.0\n                ? 1.0\n                : CubismMath.getEasingSine(\n                    (motionQueueEntry.getEndTime() - userTimeSeconds) /\n                      curves.at(c).fadeOutTime\n                  );\n          }\n\n          const paramWeight: number = this._weight * fin * fout;\n\n          // パラメータごとのフェードを適用\n          v = sourceValue + (value - sourceValue) * paramWeight;\n        }\n\n        model.setParameterValueByIndex(parameterIndex, v, 1.0);\n      }\n\n      {\n        if (eyeBlinkValue != Number.MAX_VALUE) {\n          for (\n            let i = 0;\n            i < this._eyeBlinkParameterIds.getSize() && i < MaxTargetSize;\n            ++i\n          ) {\n            const sourceValue: number = model.getParameterValueById(\n              this._eyeBlinkParameterIds.at(i)\n            );\n\n            // モーションでの上書きがあった時にはまばたきは適用しない\n            if ((eyeBlinkFlags >> i) & 0x01) {\n              continue;\n            }\n\n            const v: number =\n              sourceValue + (eyeBlinkValue - sourceValue) * fadeWeight;\n\n            model.setParameterValueById(this._eyeBlinkParameterIds.at(i), v);\n          }\n        }\n\n        if (lipSyncValue != Number.MAX_VALUE) {\n          for (\n            let i = 0;\n            i < this._lipSyncParameterIds.getSize() && i < MaxTargetSize;\n            ++i\n          ) {\n            const sourceValue: number = model.getParameterValueById(\n              this._lipSyncParameterIds.at(i)\n            );\n\n            // モーションでの上書きがあった時にはリップシンクは適用しない\n            if ((lipSyncFlags >> i) & 0x01) {\n              continue;\n            }\n\n            const v: number =\n              sourceValue + (lipSyncValue - sourceValue) * fadeWeight;\n\n            model.setParameterValueById(this._lipSyncParameterIds.at(i), v);\n          }\n        }\n      }\n\n      for (\n        ;\n        c < this._motionData.curveCount &&\n        curves.at(c).type ==\n          CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity;\n        ++c\n      ) {\n        // Find parameter index.\n        parameterIndex = model.getParameterIndex(curves.at(c).id);\n\n        // Skip curve evaluation if no value in sink.\n        if (parameterIndex == -1) {\n          continue;\n        }\n\n        // Evaluate curve and apply value.\n        value = evaluateCurve(this._motionData, c, time);\n\n        model.setParameterValueByIndex(parameterIndex, value);\n      }\n\n      if (timeOffsetSeconds >= this._motionData.duration) {\n        if (this._isLoop) {\n          motionQueueEntry.setStartTime(userTimeSeconds); // 最初の状態へ\n          if (this._isLoopFadeIn) {\n            // ループ内でループ用フェードインが有効の時は、フェードイン設定し直し\n            motionQueueEntry.setFadeInStartTime(userTimeSeconds);\n          }\n        } else {\n          if (this._onFinishedMotion) {\n            this._onFinishedMotion(this);\n          }\n\n          motionQueueEntry.setIsFinished(true);\n        }\n      }\n      this._lastWeight = fadeWeight;\n    }\n\n    /**\n     * ループ情報の設定\n     * @param loop ループ情報\n     */\n    public setIsLoop(loop: boolean): void {\n      this._isLoop = loop;\n    }\n\n    /**\n     * ループ情報の取得\n     * @return true ループする\n     * @return false ループしない\n     */\n    public isLoop(): boolean {\n      return this._isLoop;\n    }\n\n    /**\n     * ループ時のフェードイン情報の設定\n     * @param loopFadeIn  ループ時のフェードイン情報\n     */\n    public setIsLoopFadeIn(loopFadeIn: boolean): void {\n      this._isLoopFadeIn = loopFadeIn;\n    }\n\n    /**\n     * ループ時のフェードイン情報の取得\n     *\n     * @return  true    する\n     * @return  false   しない\n     */\n    public isLoopFadeIn(): boolean {\n      return this._isLoopFadeIn;\n    }\n\n    /**\n     * モーションの長さを取得する。\n     *\n     * @return  モーションの長さ[秒]\n     */\n    public getDuration(): number {\n      return this._isLoop ? -1.0 : this._loopDurationSeconds;\n    }\n\n    /**\n     * モーションのループ時の長さを取得する。\n     *\n     * @return  モーションのループ時の長さ[秒]\n     */\n    public getLoopDuration(): number {\n      return this._loopDurationSeconds;\n    }\n\n    /**\n     * パラメータに対するフェードインの時間を設定する。\n     *\n     * @param parameterId     パラメータID\n     * @param value           フェードインにかかる時間[秒]\n     */\n    public setParameterFadeInTime(\n      parameterId: CubismIdHandle,\n      value: number\n    ): void {\n      const curves: csmVector<CubismMotionCurve> = this._motionData.curves;\n\n      for (let i = 0; i < this._motionData.curveCount; ++i) {\n        if (parameterId == curves.at(i).id) {\n          curves.at(i).fadeInTime = value;\n          return;\n        }\n      }\n    }\n\n    /**\n     * パラメータに対するフェードアウトの時間の設定\n     * @param parameterId     パラメータID\n     * @param value           フェードアウトにかかる時間[秒]\n     */\n    public setParameterFadeOutTime(\n      parameterId: CubismIdHandle,\n      value: number\n    ): void {\n      const curves: csmVector<CubismMotionCurve> = this._motionData.curves;\n\n      for (let i = 0; i < this._motionData.curveCount; ++i) {\n        if (parameterId == curves.at(i).id) {\n          curves.at(i).fadeOutTime = value;\n          return;\n        }\n      }\n    }\n\n    /**\n     * パラメータに対するフェードインの時間の取得\n     * @param    parameterId     パラメータID\n     * @return   フェードインにかかる時間[秒]\n     */\n    public getParameterFadeInTime(parameterId: CubismIdHandle): number {\n      const curves: csmVector<CubismMotionCurve> = this._motionData.curves;\n\n      for (let i = 0; i < this._motionData.curveCount; ++i) {\n        if (parameterId == curves.at(i).id) {\n          return curves.at(i).fadeInTime;\n        }\n      }\n\n      return -1;\n    }\n\n    /**\n     * パラメータに対するフェードアウトの時間を取得\n     *\n     * @param   parameterId     パラメータID\n     * @return   フェードアウトにかかる時間[秒]\n     */\n    public getParameterFadeOutTime(parameterId: CubismIdHandle): number {\n      const curves: csmVector<CubismMotionCurve> = this._motionData.curves;\n\n      for (let i = 0; i < this._motionData.curveCount; ++i) {\n        if (parameterId == curves.at(i).id) {\n          return curves.at(i).fadeOutTime;\n        }\n      }\n\n      return -1;\n    }\n\n    /**\n     * 自動エフェクトがかかっているパラメータIDリストの設定\n     * @param eyeBlinkParameterIds    自動まばたきがかかっているパラメータIDのリスト\n     * @param lipSyncParameterIds     リップシンクがかかっているパラメータIDのリスト\n     */\n    public setEffectIds(\n      eyeBlinkParameterIds: csmVector<CubismIdHandle>,\n      lipSyncParameterIds: csmVector<CubismIdHandle>\n    ): void {\n      this._eyeBlinkParameterIds = eyeBlinkParameterIds;\n      this._lipSyncParameterIds = lipSyncParameterIds;\n    }\n\n    /**\n     * コンストラクタ\n     */\n    public constructor() {\n      super();\n      this._sourceFrameRate = 30.0;\n      this._loopDurationSeconds = -1.0;\n      this._isLoop = false; // trueから false へデフォルトを変更\n      this._isLoopFadeIn = true; // ループ時にフェードインが有効かどうかのフラグ\n      this._lastWeight = 0.0;\n      this._motionData = null;\n      this._modelCurveIdEyeBlink = null;\n      this._modelCurveIdLipSync = null;\n      this._eyeBlinkParameterIds = null;\n      this._lipSyncParameterIds = null;\n    }\n\n    /**\n     * デストラクタ相当の処理\n     */\n    public release(): void {\n      this._motionData = void 0;\n      this._motionData = null;\n    }\n\n    /**\n     * motion3.jsonをパースする。\n     *\n     * @param motionJson  motion3.jsonが読み込まれているバッファ\n     * @param size        バッファのサイズ\n     */\n    public parse(motionJson: ArrayBuffer, size: number): void {\n      this._motionData = new CubismMotionData();\n\n      let json: CubismMotionJson = new CubismMotionJson(motionJson, size);\n\n      this._motionData.duration = json.getMotionDuration();\n      this._motionData.loop = json.isMotionLoop();\n      this._motionData.curveCount = json.getMotionCurveCount();\n      this._motionData.fps = json.getMotionFps();\n      this._motionData.eventCount = json.getEventCount();\n\n      if (json.isExistMotionFadeInTime()) {\n        this._fadeInSeconds =\n          json.getMotionFadeInTime() < 0.0 ? 1.0 : json.getMotionFadeInTime();\n      } else {\n        this._fadeInSeconds = 1.0;\n      }\n\n      if (json.isExistMotionFadeOutTime()) {\n        this._fadeOutSeconds =\n          json.getMotionFadeOutTime() < 0.0 ? 1.0 : json.getMotionFadeOutTime();\n      } else {\n        this._fadeOutSeconds = 1.0;\n      }\n\n      this._motionData.curves.updateSize(\n        this._motionData.curveCount,\n        CubismMotionCurve,\n        true\n      );\n      this._motionData.segments.updateSize(\n        json.getMotionTotalSegmentCount(),\n        CubismMotionSegment,\n        true\n      );\n      this._motionData.points.updateSize(\n        json.getMotionTotalPointCount(),\n        CubismMotionPoint,\n        true\n      );\n      this._motionData.events.updateSize(\n        this._motionData.eventCount,\n        CubismMotionEvent,\n        true\n      );\n\n      let totalPointCount = 0;\n      let totalSegmentCount = 0;\n\n      // Curves\n      for (\n        let curveCount = 0;\n        curveCount < this._motionData.curveCount;\n        ++curveCount\n      ) {\n        if (json.getMotionCurveTarget(curveCount) == TargetNameModel) {\n          this._motionData.curves.at(curveCount).type =\n            CubismMotionCurveTarget.CubismMotionCurveTarget_Model;\n        } else if (\n          json.getMotionCurveTarget(curveCount) == TargetNameParameter\n        ) {\n          this._motionData.curves.at(curveCount).type =\n            CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter;\n        } else if (\n          json.getMotionCurveTarget(curveCount) == TargetNamePartOpacity\n        ) {\n          this._motionData.curves.at(curveCount).type =\n            CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity;\n        }\n\n        this._motionData.curves.at(curveCount).id = json.getMotionCurveId(\n          curveCount\n        );\n\n        this._motionData.curves.at(\n          curveCount\n        ).baseSegmentIndex = totalSegmentCount;\n\n        this._motionData.curves.at(\n          curveCount\n        ).fadeInTime = json.isExistMotionCurveFadeInTime(curveCount)\n          ? json.getMotionCurveFadeInTime(curveCount)\n          : -1.0;\n        this._motionData.curves.at(\n          curveCount\n        ).fadeOutTime = json.isExistMotionCurveFadeOutTime(curveCount)\n          ? json.getMotionCurveFadeOutTime(curveCount)\n          : -1.0;\n\n        // Segments\n        for (\n          let segmentPosition = 0;\n          segmentPosition < json.getMotionCurveSegmentCount(curveCount);\n\n        ) {\n          if (segmentPosition == 0) {\n            this._motionData.segments.at(\n              totalSegmentCount\n            ).basePointIndex = totalPointCount;\n\n            this._motionData.points.at(\n              totalPointCount\n            ).time = json.getMotionCurveSegment(curveCount, segmentPosition);\n            this._motionData.points.at(\n              totalPointCount\n            ).value = json.getMotionCurveSegment(\n              curveCount,\n              segmentPosition + 1\n            );\n\n            totalPointCount += 1;\n            segmentPosition += 2;\n          } else {\n            this._motionData.segments.at(totalSegmentCount).basePointIndex =\n              totalPointCount - 1;\n          }\n\n          const segment: number = json.getMotionCurveSegment(\n            curveCount,\n            segmentPosition\n          );\n          switch (segment) {\n            case CubismMotionSegmentType.CubismMotionSegmentType_Linear: {\n              this._motionData.segments.at(totalSegmentCount).segmentType =\n                CubismMotionSegmentType.CubismMotionSegmentType_Linear;\n              this._motionData.segments.at(\n                totalSegmentCount\n              ).evaluate = linearEvaluate;\n\n              this._motionData.points.at(\n                totalPointCount\n              ).time = json.getMotionCurveSegment(\n                curveCount,\n                segmentPosition + 1\n              );\n              this._motionData.points.at(\n                totalPointCount\n              ).value = json.getMotionCurveSegment(\n                curveCount,\n                segmentPosition + 2\n              );\n\n              totalPointCount += 1;\n              segmentPosition += 3;\n\n              break;\n            }\n            case CubismMotionSegmentType.CubismMotionSegmentType_Bezier: {\n              this._motionData.segments.at(totalSegmentCount).segmentType =\n                CubismMotionSegmentType.CubismMotionSegmentType_Bezier;\n              this._motionData.segments.at(\n                totalSegmentCount\n              ).evaluate = bezierEvaluate;\n\n              this._motionData.points.at(\n                totalPointCount\n              ).time = json.getMotionCurveSegment(\n                curveCount,\n                segmentPosition + 1\n              );\n              this._motionData.points.at(\n                totalPointCount\n              ).value = json.getMotionCurveSegment(\n                curveCount,\n                segmentPosition + 2\n              );\n\n              this._motionData.points.at(\n                totalPointCount + 1\n              ).time = json.getMotionCurveSegment(\n                curveCount,\n                segmentPosition + 3\n              );\n              this._motionData.points.at(\n                totalPointCount + 1\n              ).value = json.getMotionCurveSegment(\n                curveCount,\n                segmentPosition + 4\n              );\n\n              this._motionData.points.at(\n                totalPointCount + 2\n              ).time = json.getMotionCurveSegment(\n                curveCount,\n                segmentPosition + 5\n              );\n              this._motionData.points.at(\n                totalPointCount + 2\n              ).value = json.getMotionCurveSegment(\n                curveCount,\n                segmentPosition + 6\n              );\n\n              totalPointCount += 3;\n              segmentPosition += 7;\n\n              break;\n            }\n\n            case CubismMotionSegmentType.CubismMotionSegmentType_Stepped: {\n              this._motionData.segments.at(totalSegmentCount).segmentType =\n                CubismMotionSegmentType.CubismMotionSegmentType_Stepped;\n              this._motionData.segments.at(\n                totalSegmentCount\n              ).evaluate = steppedEvaluate;\n\n              this._motionData.points.at(\n                totalPointCount\n              ).time = json.getMotionCurveSegment(\n                curveCount,\n                segmentPosition + 1\n              );\n              this._motionData.points.at(\n                totalPointCount\n              ).value = json.getMotionCurveSegment(\n                curveCount,\n                segmentPosition + 2\n              );\n\n              totalPointCount += 1;\n              segmentPosition += 3;\n\n              break;\n            }\n\n            case CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped: {\n              this._motionData.segments.at(totalSegmentCount).segmentType =\n                CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped;\n              this._motionData.segments.at(\n                totalSegmentCount\n              ).evaluate = inverseSteppedEvaluate;\n\n              this._motionData.points.at(\n                totalPointCount\n              ).time = json.getMotionCurveSegment(\n                curveCount,\n                segmentPosition + 1\n              );\n              this._motionData.points.at(\n                totalPointCount\n              ).value = json.getMotionCurveSegment(\n                curveCount,\n                segmentPosition + 2\n              );\n\n              totalPointCount += 1;\n              segmentPosition += 3;\n\n              break;\n            }\n            default: {\n              CSM_ASSERT(0);\n              break;\n            }\n          }\n\n          ++this._motionData.curves.at(curveCount).segmentCount;\n          ++totalSegmentCount;\n        }\n      }\n\n      for (\n        let userdatacount = 0;\n        userdatacount < json.getEventCount();\n        ++userdatacount\n      ) {\n        this._motionData.events.at(userdatacount).fireTime = json.getEventTime(\n          userdatacount\n        );\n        this._motionData.events.at(userdatacount).value = json.getEventValue(\n          userdatacount\n        );\n      }\n\n      json.release();\n      json = void 0;\n      json = null;\n    }\n\n    /**\n     * モデルのパラメータ更新\n     *\n     * イベント発火のチェック。\n     * 入力する時間は呼ばれるモーションタイミングを０とした秒数で行う。\n     *\n     * @param beforeCheckTimeSeconds   前回のイベントチェック時間[秒]\n     * @param motionTimeSeconds        今回の再生時間[秒]\n     */\n    public getFiredEvent(\n      beforeCheckTimeSeconds: number,\n      motionTimeSeconds: number\n    ): csmVector<csmString> {\n      this._firedEventValues.updateSize(0);\n\n      // イベントの発火チェック\n      for (let u = 0; u < this._motionData.eventCount; ++u) {\n        if (\n          this._motionData.events.at(u).fireTime > beforeCheckTimeSeconds &&\n          this._motionData.events.at(u).fireTime <= motionTimeSeconds\n        ) {\n          this._firedEventValues.pushBack(\n            new csmString(this._motionData.events.at(u).value.s)\n          );\n        }\n      }\n\n      return this._firedEventValues;\n    }\n\n    public _sourceFrameRate: number; // ロードしたファイルのFPS。記述が無ければデフォルト値15fpsとなる\n    public _loopDurationSeconds: number; // mtnファイルで定義される一連のモーションの長さ\n    public _isLoop: boolean; // ループするか?\n    public _isLoopFadeIn: boolean; // ループ時にフェードインが有効かどうかのフラグ。初期値では有効。\n    public _lastWeight: number; // 最後に設定された重み\n\n    public _motionData: CubismMotionData; // 実際のモーションデータ本体\n\n    public _eyeBlinkParameterIds: csmVector<CubismIdHandle>; // 自動まばたきを適用するパラメータIDハンドルのリスト。  モデル（モデルセッティング）とパラメータを対応付ける。\n    public _lipSyncParameterIds: csmVector<CubismIdHandle>; // リップシンクを適用するパラメータIDハンドルのリスト。  モデル（モデルセッティング）とパラメータを対応付ける。\n\n    public _modelCurveIdEyeBlink: CubismIdHandle; // モデルが持つ自動まばたき用パラメータIDのハンドル。  モデルとモーションを対応付ける。\n    public _modelCurveIdLipSync: CubismIdHandle; // モデルが持つリップシンク用パラメータIDのハンドル。  モデルとモーションを対応付ける。\n  }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { Live2DCubismFramework as acubismmotion } from './acubismmotion';\nimport { Live2DCubismFramework as cubismjson } from '../utils/cubismjson';\nimport { Live2DCubismFramework as cubismid } from '../id/cubismid';\nimport { Live2DCubismFramework as cubismframework } from '../live2dcubismframework';\nimport { Live2DCubismFramework as cubismmodel } from '../model/cubismmodel';\nimport { Live2DCubismFramework as cubismmotionqueueentry } from './cubismmotionqueueentry';\nimport { Live2DCubismFramework as csmvector } from '../type/csmvector';\nimport JsonFloat = cubismjson.JsonFloat;\nimport csmVector = csmvector.csmVector;\nimport CubismMotionQueueEntry = cubismmotionqueueentry.CubismMotionQueueEntry;\nimport CubismModel = cubismmodel.CubismModel;\nimport CubismFramework = cubismframework.CubismFramework;\nimport CubismIdHandle = cubismid.CubismIdHandle;\nimport CubismJson = cubismjson.CubismJson;\nimport Value = cubismjson.Value;\nimport ACubismMotion = acubismmotion.ACubismMotion;\n\nexport namespace Live2DCubismFramework {\n  // exp3.jsonのキーとデフォルト\n  const ExpressionKeyFadeIn = 'FadeInTime';\n  const ExpressionKeyFadeOut = 'FadeOutTime';\n  const ExpressionKeyParameters = 'Parameters';\n  const ExpressionKeyId = 'Id';\n  const ExpressionKeyValue = 'Value';\n  const ExpressionKeyBlend = 'Blend';\n  const BlendValueAdd = 'Add';\n  const BlendValueMultiply = 'Multiply';\n  const BlendValueOverwrite = 'Overwrite';\n  const DefaultFadeTime = 1.0;\n\n  /**\n   * 表情のモーション\n   *\n   * 表情のモーションクラス。\n   */\n  export class CubismExpressionMotion extends ACubismMotion {\n    /**\n     * インスタンスを作成する。\n     * @param buffer expファイルが読み込まれているバッファ\n     * @param size バッファのサイズ\n     * @return 作成されたインスタンス\n     */\n    public static create(\n      buffer: ArrayBuffer,\n      size: number\n    ): CubismExpressionMotion {\n      const expression: CubismExpressionMotion = new CubismExpressionMotion();\n\n      const json: CubismJson = CubismJson.create(buffer, size);\n      const root: Value = json.getRoot();\n\n      expression.setFadeInTime(\n        root.getValueByString(ExpressionKeyFadeIn).toFloat(DefaultFadeTime)\n      ); // フェードイン\n      expression.setFadeOutTime(\n        root.getValueByString(ExpressionKeyFadeOut).toFloat(DefaultFadeTime)\n      ); // フェードアウト\n\n      // 各パラメータについて\n      const parameterCount = root\n        .getValueByString(ExpressionKeyParameters)\n        .getSize();\n      expression._parameters.prepareCapacity(parameterCount);\n\n      for (let i = 0; i < parameterCount; ++i) {\n        const param: Value = root\n          .getValueByString(ExpressionKeyParameters)\n          .getValueByIndex(i);\n        const parameterId: CubismIdHandle = CubismFramework.getIdManager().getId(\n          param.getValueByString(ExpressionKeyId).getRawString()\n        ); // パラメータID\n\n        const value: number = param\n          .getValueByString(ExpressionKeyValue)\n          .toFloat(); // 値\n\n        // 計算方法の設定\n        let blendType: ExpressionBlendType;\n\n        if (\n          param.getValueByString(ExpressionKeyBlend).isNull() ||\n          param.getValueByString(ExpressionKeyBlend).getString() ==\n            BlendValueAdd\n        ) {\n          blendType = ExpressionBlendType.ExpressionBlendType_Add;\n        } else if (\n          param.getValueByString(ExpressionKeyBlend).getString() ==\n          BlendValueMultiply\n        ) {\n          blendType = ExpressionBlendType.ExpressionBlendType_Multiply;\n        } else if (\n          param.getValueByString(ExpressionKeyBlend).getString() ==\n          BlendValueOverwrite\n        ) {\n          blendType = ExpressionBlendType.ExpressionBlendType_Overwrite;\n        } else {\n          // その他 仕様にない値を設定した時は加算モードにすることで復旧\n          blendType = ExpressionBlendType.ExpressionBlendType_Add;\n        }\n\n        // 設定オブジェクトを作成してリストに追加する\n        const item: ExpressionParameter = new ExpressionParameter();\n\n        item.parameterId = parameterId;\n        item.blendType = blendType;\n        item.value = value;\n\n        expression._parameters.pushBack(item);\n      }\n\n      CubismJson.delete(json); // JSONデータは不要になったら削除する\n      return expression;\n    }\n\n    /**\n     * モデルのパラメータの更新の実行\n     * @param model 対象のモデル\n     * @param userTimeSeconds デルタ時間の積算値[秒]\n     * @param weight モーションの重み\n     * @param motionQueueEntry CubismMotionQueueManagerで管理されているモーション\n     */\n    public doUpdateParameters(\n      model: CubismModel,\n      userTimeSeconds: number,\n      weight: number,\n      motionQueueEntry: CubismMotionQueueEntry\n    ): void {\n      for (let i = 0; i < this._parameters.getSize(); ++i) {\n        const parameter: ExpressionParameter = this._parameters.at(i);\n\n        switch (parameter.blendType) {\n          case ExpressionBlendType.ExpressionBlendType_Add: {\n            model.addParameterValueById(\n              parameter.parameterId,\n              parameter.value,\n              weight\n            );\n            break;\n          }\n          case ExpressionBlendType.ExpressionBlendType_Multiply: {\n            model.multiplyParameterValueById(\n              parameter.parameterId,\n              parameter.value,\n              weight\n            );\n            break;\n          }\n          case ExpressionBlendType.ExpressionBlendType_Overwrite: {\n            model.setParameterValueById(\n              parameter.parameterId,\n              parameter.value,\n              weight\n            );\n            break;\n          }\n          default:\n            // 仕様にない値を設定した時はすでに加算モードになっている\n            break;\n        }\n      }\n    }\n\n    /**\n     * コンストラクタ\n     */\n    constructor() {\n      super();\n\n      this._parameters = new csmVector<ExpressionParameter>();\n    }\n\n    _parameters: csmVector<ExpressionParameter>; // 表情のパラメータ情報リスト\n  }\n\n  /**\n   * 表情パラメータ値の計算方式\n   */\n  export enum ExpressionBlendType {\n    ExpressionBlendType_Add = 0, // 加算\n    ExpressionBlendType_Multiply = 1, // 乗算\n    ExpressionBlendType_Overwrite = 2 // 上書き\n  }\n\n  /**\n   * 表情のパラメータ情報\n   */\n  export class ExpressionParameter {\n    parameterId: CubismIdHandle; // パラメータID\n    blendType: ExpressionBlendType; // パラメータの演算種類\n    value: number; // 値\n  }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { Live2DCubismFramework as cubismid } from './id/cubismid';\nimport { Live2DCubismFramework as csmmap } from './type/csmmap';\nimport csmMap = csmmap.csmMap;\nimport CubismIdHandle = cubismid.CubismIdHandle;\n\nexport namespace Live2DCubismFramework {\n  /**\n   * モデル設定情報を取り扱う関数を宣言した純粋仮想クラス。\n   *\n   * このクラスを継承することで、モデル設定情報を取り扱うクラスになる。\n   */\n  export abstract class ICubismModelSetting {\n    /**\n     * Mocファイルの名前を取得する\n     * @return Mocファイルの名前\n     */\n    public abstract getModelFileName(): string;\n\n    /**\n     * モデルが使用するテクスチャの数を取得する\n     * テクスチャの数\n     */\n    public abstract getTextureCount(): number;\n\n    /**\n     * テクスチャが配置されたディレクトリの名前を取得する\n     * @return テクスチャが配置されたディレクトリの名前\n     */\n    public abstract getTextureDirectory(): string;\n\n    /**\n     * モデルが使用するテクスチャの名前を取得する\n     * @param index 配列のインデックス値\n     * @return テクスチャの名前\n     */\n    public abstract getTextureFileName(index: number): string;\n\n    /**\n     * モデルに設定された当たり判定の数を取得する\n     * @return モデルに設定された当たり判定の数\n     */\n    public abstract getHitAreasCount(): number;\n\n    /**\n     * 当たり判定に設定されたIDを取得する\n     *\n     * @param index 配列のindex\n     * @return 当たり判定に設定されたID\n     */\n    public abstract getHitAreaId(index: number): CubismIdHandle;\n\n    /**\n     * 当たり判定に設定された名前を取得する\n     * @param index 配列のインデックス値\n     * @return 当たり判定に設定された名前\n     */\n    public abstract getHitAreaName(index: number): string;\n\n    /**\n     * 物理演算設定ファイルの名前を取得する\n     * @return 物理演算設定ファイルの名前\n     */\n    public abstract getPhysicsFileName(): string;\n\n    /**\n     * パーツ切り替え設定ファイルの名前を取得する\n     * @return パーツ切り替え設定ファイルの名前\n     */\n    public abstract getPoseFileName(): string;\n\n    /**\n     * 表情設定ファイルの数を取得する\n     * @return 表情設定ファイルの数\n     */\n    public abstract getExpressionCount(): number;\n\n    /**\n     * 表情設定ファイルを識別する名前（別名）を取得する\n     * @param index 配列のインデックス値\n     * @return 表情の名前\n     */\n    public abstract getExpressionName(index: number): string;\n\n    /**\n     * 表情設定ファイルの名前を取得する\n     * @param index 配列のインデックス値\n     * @return 表情設定ファイルの名前\n     */\n    public abstract getExpressionFileName(index: number): string;\n\n    /**\n     * モーショングループの数を取得する\n     * @return モーショングループの数\n     */\n    public abstract getMotionGroupCount(): number;\n\n    /**\n     * モーショングループの名前を取得する\n     * @param index 配列のインデックス値\n     * @return モーショングループの名前\n     */\n    public abstract getMotionGroupName(index: number): string;\n\n    /**\n     * モーショングループに含まれるモーションの数を取得する\n     * @param groupName モーショングループの名前\n     * @return モーショングループの数\n     */\n    public abstract getMotionCount(groupName: string): number;\n\n    /**\n     * グループ名とインデックス値からモーションファイル名を取得する\n     * @param groupName モーショングループの名前\n     * @param index     配列のインデックス値\n     * @return モーションファイルの名前\n     */\n    public abstract getMotionFileName(groupName: string, index: number): string;\n\n    /**\n     * モーションに対応するサウンドファイルの名前を取得する\n     * @param groupName モーショングループの名前\n     * @param index 配列のインデックス値\n     * @return サウンドファイルの名前\n     */\n    public abstract getMotionSoundFileName(\n      groupName: string,\n      index: number\n    ): string;\n\n    /**\n     * モーション開始時のフェードイン処理時間を取得する\n     * @param groupName モーショングループの名前\n     * @param index 配列のインデックス値\n     * @return フェードイン処理時間[秒]\n     */\n    public abstract getMotionFadeInTimeValue(\n      groupName: string,\n      index: number\n    ): number;\n\n    /**\n     * モーション終了時のフェードアウト処理時間を取得する\n     * @param groupName モーショングループの名前\n     * @param index 配列のインデックス値\n     * @return フェードアウト処理時間[秒]\n     */\n    public abstract getMotionFadeOutTimeValue(\n      groupName: string,\n      index: number\n    ): number;\n\n    /**\n     * ユーザーデータのファイル名を取得する\n     * @return ユーザーデータのファイル名\n     */\n    public abstract getUserDataFile(): string;\n\n    /**\n     * レイアウト情報を取得する\n     * @param outLayoutMap csmMapクラスのインスタンス\n     * @return true レイアウト情報が存在する\n     * @return false レイアウト情報が存在しない\n     */\n    public abstract getLayoutMap(outLayoutMap: csmMap<string, number>): boolean;\n\n    /**\n     * 目パチに関連付けられたパラメータの数を取得する\n     * @return 目パチに関連付けられたパラメータの数\n     */\n    public abstract getEyeBlinkParameterCount(): number;\n\n    /**\n     * 目パチに関連付けられたパラメータのIDを取得する\n     * @param index 配列のインデックス値\n     * @return パラメータID\n     */\n    public abstract getEyeBlinkParameterId(index: number): CubismIdHandle;\n\n    /**\n     * リップシンクに関連付けられたパラメータの数を取得する\n     * @return リップシンクに関連付けられたパラメータの数\n     */\n    public abstract getLipSyncParameterCount(): number;\n\n    /**\n     * リップシンクに関連付けられたパラメータの数を取得する\n     * @param index 配列のインデックス値\n     * @return パラメータID\n     */\n    public abstract getLipSyncParameterId(index: number): CubismIdHandle;\n  }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { Live2DCubismFramework as cubismframework } from './live2dcubismframework';\nimport { Live2DCubismFramework as icubismmodelsetting } from './icubismmodelsetting';\nimport { Live2DCubismFramework as cubismid } from './id/cubismid';\nimport { Live2DCubismFramework as cubismjson } from './utils/cubismjson';\nimport { Live2DCubismFramework as csmmap } from './type/csmmap';\nimport { Live2DCubismFramework as csmvector } from './type/csmvector';\nimport csmVector = csmvector.csmVector;\nimport csmMap = csmmap.csmMap;\nimport iterator = csmmap.iterator;\nimport CubismFramework = cubismframework.CubismFramework;\nimport CubismIdHandle = cubismid.CubismIdHandle;\nimport CubismJson = cubismjson.CubismJson;\nimport Value = cubismjson.Value;\nimport ICubismModelSetting = icubismmodelsetting.ICubismModelSetting;\n\nexport namespace Live2DCubismFramework {\n  /**\n   * Model3Jsonのキー文字列\n   */\n\n  // JSON Keys\n  const Version = 'Version';\n  const FileReferences = 'FileReferences';\n  const Groups = 'Groups';\n  const Layout = 'Layout';\n  const HitAreas = 'HitAreas';\n\n  const Moc = 'Moc';\n  const Textures = 'Textures';\n  const Physics = 'Physics';\n  const Pose = 'Pose';\n  const Expressions = 'Expressions';\n  const Motions = 'Motions';\n\n  const UserData = 'UserData';\n  const Name = 'Name';\n  const FilePath = 'File';\n  const Id = 'Id';\n  const Ids = 'Ids';\n  const Target = 'Target';\n\n  // Motions\n  const Idle = 'Idle';\n  const TapBody = 'TapBody';\n  const PinchIn = 'PinchIn';\n  const PinchOut = 'PinchOut';\n  const Shake = 'Shake';\n  const FlickHead = 'FlickHead';\n  const Parameter = 'Parameter';\n\n  const SoundPath = 'Sound';\n  const FadeInTime = 'FadeInTime';\n  const FadeOutTime = 'FadeOutTime';\n\n  // Layout\n  const CenterX = 'CenterX';\n  const CenterY = 'CenterY';\n  const X = 'X';\n  const Y = 'Y';\n  const Width = 'Width';\n  const Height = 'Height';\n\n  const LipSync = 'LipSync';\n  const EyeBlink = 'EyeBlink';\n\n  const InitParameter = 'init_param';\n  const InitPartsVisible = 'init_parts_visible';\n  const Val = 'val';\n\n  enum FrequestNode {\n    FrequestNode_Groups, // getRoot().getValueByString(Groups)\n    FrequestNode_Moc, // getRoot().getValueByString(FileReferences).getValueByString(Moc)\n    FrequestNode_Motions, // getRoot().getValueByString(FileReferences).getValueByString(Motions)\n    FrequestNode_Expressions, // getRoot().getValueByString(FileReferences).getValueByString(Expressions)\n    FrequestNode_Textures, // getRoot().getValueByString(FileReferences).getValueByString(Textures)\n    FrequestNode_Physics, // getRoot().getValueByString(FileReferences).getValueByString(Physics)\n    FrequestNode_Pose, // getRoot().getValueByString(FileReferences).getValueByString(Pose)\n    FrequestNode_HitAreas // getRoot().getValueByString(HitAreas)\n  }\n\n  /**\n   * Model3Jsonパーサー\n   *\n   * model3.jsonファイルをパースして値を取得する\n   */\n  export class CubismModelSettingJson extends ICubismModelSetting {\n    /**\n     * 引数付きコンストラクタ\n     *\n     * @param buffer    Model3Jsonをバイト配列として読み込んだデータバッファ\n     * @param size      Model3Jsonのデータサイズ\n     */\n    public constructor(buffer: ArrayBuffer, size: number) {\n      super();\n      this._json = CubismJson.create(buffer, size);\n\n      if (this._json) {\n        this._jsonValue = new csmVector<Value>();\n\n        // 順番はenum FrequestNodeと一致させる\n        this._jsonValue.pushBack(this._json.getRoot().getValueByString(Groups));\n        this._jsonValue.pushBack(\n          this._json\n            .getRoot()\n            .getValueByString(FileReferences)\n            .getValueByString(Moc)\n        );\n        this._jsonValue.pushBack(\n          this._json\n            .getRoot()\n            .getValueByString(FileReferences)\n            .getValueByString(Motions)\n        );\n        this._jsonValue.pushBack(\n          this._json\n            .getRoot()\n            .getValueByString(FileReferences)\n            .getValueByString(Expressions)\n        );\n        this._jsonValue.pushBack(\n          this._json\n            .getRoot()\n            .getValueByString(FileReferences)\n            .getValueByString(Textures)\n        );\n        this._jsonValue.pushBack(\n          this._json\n            .getRoot()\n            .getValueByString(FileReferences)\n            .getValueByString(Physics)\n        );\n        this._jsonValue.pushBack(\n          this._json\n            .getRoot()\n            .getValueByString(FileReferences)\n            .getValueByString(Pose)\n        );\n        this._jsonValue.pushBack(\n          this._json.getRoot().getValueByString(HitAreas)\n        );\n      }\n    }\n\n    /**\n     * デストラクタ相当の処理\n     */\n    public release(): void {\n      CubismJson.delete(this._json);\n\n      this._jsonValue = null;\n    }\n\n    /**\n     * CubismJsonオブジェクトを取得する\n     *\n     * @return CubismJson\n     */\n    public GetJson(): CubismJson {\n      return this._json;\n    }\n\n    /**\n     * Mocファイルの名前を取得する\n     * @return Mocファイルの名前\n     */\n    public getModelFileName(): string {\n      if (!this.isExistModelFile()) {\n        return '';\n      }\n      return this._jsonValue.at(FrequestNode.FrequestNode_Moc).getRawString();\n    }\n\n    /**\n     * モデルが使用するテクスチャの数を取得する\n     * テクスチャの数\n     */\n    public getTextureCount(): number {\n      if (!this.isExistTextureFiles()) {\n        return 0;\n      }\n\n      return this._jsonValue.at(FrequestNode.FrequestNode_Textures).getSize();\n    }\n\n    /**\n     * テクスチャが配置されたディレクトリの名前を取得する\n     * @return テクスチャが配置されたディレクトリの名前\n     */\n    public getTextureDirectory(): string {\n      return this._jsonValue\n        .at(FrequestNode.FrequestNode_Textures)\n        .getRawString();\n    }\n\n    /**\n     * モデルが使用するテクスチャの名前を取得する\n     * @param index 配列のインデックス値\n     * @return テクスチャの名前\n     */\n    public getTextureFileName(index: number): string {\n      return this._jsonValue\n        .at(FrequestNode.FrequestNode_Textures)\n        .getValueByIndex(index)\n        .getRawString();\n    }\n\n    /**\n     * モデルに設定された当たり判定の数を取得する\n     * @return モデルに設定された当たり判定の数\n     */\n    public getHitAreasCount(): number {\n      if (!this.isExistHitAreas()) {\n        return 0;\n      }\n\n      return this._jsonValue.at(FrequestNode.FrequestNode_HitAreas).getSize();\n    }\n\n    /**\n     * 当たり判定に設定されたIDを取得する\n     *\n     * @param index 配列のindex\n     * @return 当たり判定に設定されたID\n     */\n    public getHitAreaId(index: number): CubismIdHandle {\n      return CubismFramework.getIdManager().getId(\n        this._jsonValue\n          .at(FrequestNode.FrequestNode_HitAreas)\n          .getValueByIndex(index)\n          .getValueByString(Id)\n          .getRawString()\n      );\n    }\n\n    /**\n     * 当たり判定に設定された名前を取得する\n     * @param index 配列のインデックス値\n     * @return 当たり判定に設定された名前\n     */\n    public getHitAreaName(index: number): string {\n      return this._jsonValue\n        .at(FrequestNode.FrequestNode_HitAreas)\n        .getValueByIndex(index)\n        .getValueByString(Name)\n        .getRawString();\n    }\n\n    /**\n     * 物理演算設定ファイルの名前を取得する\n     * @return 物理演算設定ファイルの名前\n     */\n    public getPhysicsFileName(): string {\n      if (!this.isExistPhysicsFile()) {\n        return '';\n      }\n\n      return this._jsonValue\n        .at(FrequestNode.FrequestNode_Physics)\n        .getRawString();\n    }\n\n    /**\n     * パーツ切り替え設定ファイルの名前を取得する\n     * @return パーツ切り替え設定ファイルの名前\n     */\n    public getPoseFileName(): string {\n      if (!this.isExistPoseFile()) {\n        return '';\n      }\n\n      return this._jsonValue.at(FrequestNode.FrequestNode_Pose).getRawString();\n    }\n\n    /**\n     * 表情設定ファイルの数を取得する\n     * @return 表情設定ファイルの数\n     */\n    public getExpressionCount(): number {\n      if (!this.isExistExpressionFile()) {\n        return 0;\n      }\n\n      return this._jsonValue\n        .at(FrequestNode.FrequestNode_Expressions)\n        .getSize();\n    }\n\n    /**\n     * 表情設定ファイルを識別する名前（別名）を取得する\n     * @param index 配列のインデックス値\n     * @return 表情の名前\n     */\n    public getExpressionName(index: number): string {\n      return this._jsonValue\n        .at(FrequestNode.FrequestNode_Expressions)\n        .getValueByIndex(index)\n        .getValueByString(Name)\n        .getRawString();\n    }\n\n    /**\n     * 表情設定ファイルの名前を取得する\n     * @param index 配列のインデックス値\n     * @return 表情設定ファイルの名前\n     */\n    public getExpressionFileName(index: number): string {\n      return this._jsonValue\n        .at(FrequestNode.FrequestNode_Expressions)\n        .getValueByIndex(index)\n        .getValueByString(FilePath)\n        .getRawString();\n    }\n\n    /**\n     * モーショングループの数を取得する\n     * @return モーショングループの数\n     */\n    public getMotionGroupCount(): number {\n      if (!this.isExistMotionGroups()) {\n        return 0;\n      }\n\n      return this._jsonValue\n        .at(FrequestNode.FrequestNode_Motions)\n        .getKeys()\n        .getSize();\n    }\n\n    /**\n     * モーショングループの名前を取得する\n     * @param index 配列のインデックス値\n     * @return モーショングループの名前\n     */\n    public getMotionGroupName(index: number): string {\n      if (!this.isExistMotionGroups()) {\n        return null;\n      }\n\n      return this._jsonValue\n        .at(FrequestNode.FrequestNode_Motions)\n        .getKeys()\n        .at(index);\n    }\n\n    /**\n     * モーショングループに含まれるモーションの数を取得する\n     * @param groupName モーショングループの名前\n     * @return モーショングループの数\n     */\n    public getMotionCount(groupName: string): number {\n      if (!this.isExistMotionGroupName(groupName)) {\n        return 0;\n      }\n\n      return this._jsonValue\n        .at(FrequestNode.FrequestNode_Motions)\n        .getValueByString(groupName)\n        .getSize();\n    }\n\n    /**\n     * グループ名とインデックス値からモーションファイル名を取得する\n     * @param groupName モーショングループの名前\n     * @param index     配列のインデックス値\n     * @return モーションファイルの名前\n     */\n    public getMotionFileName(groupName: string, index: number): string {\n      if (!this.isExistMotionGroupName(groupName)) {\n        return '';\n      }\n\n      return this._jsonValue\n        .at(FrequestNode.FrequestNode_Motions)\n        .getValueByString(groupName)\n        .getValueByIndex(index)\n        .getValueByString(FilePath)\n        .getRawString();\n    }\n\n    /**\n     * モーションに対応するサウンドファイルの名前を取得する\n     * @param groupName モーショングループの名前\n     * @param index 配列のインデックス値\n     * @return サウンドファイルの名前\n     */\n    public getMotionSoundFileName(groupName: string, index: number): string {\n      if (!this.isExistMotionSoundFile(groupName, index)) {\n        return '';\n      }\n\n      return this._jsonValue\n        .at(FrequestNode.FrequestNode_Motions)\n        .getValueByString(groupName)\n        .getValueByIndex(index)\n        .getValueByString(SoundPath)\n        .getRawString();\n    }\n\n    /**\n     * モーション開始時のフェードイン処理時間を取得する\n     * @param groupName モーショングループの名前\n     * @param index 配列のインデックス値\n     * @return フェードイン処理時間[秒]\n     */\n    public getMotionFadeInTimeValue(groupName: string, index: number): number {\n      if (!this.isExistMotionFadeIn(groupName, index)) {\n        return -1.0;\n      }\n\n      return this._jsonValue\n        .at(FrequestNode.FrequestNode_Motions)\n        .getValueByString(groupName)\n        .getValueByIndex(index)\n        .getValueByString(FadeInTime)\n        .toFloat();\n    }\n\n    /**\n     * モーション終了時のフェードアウト処理時間を取得する\n     * @param groupName モーショングループの名前\n     * @param index 配列のインデックス値\n     * @return フェードアウト処理時間[秒]\n     */\n    public getMotionFadeOutTimeValue(groupName: string, index: number): number {\n      if (!this.isExistMotionFadeOut(groupName, index)) {\n        return -1.0;\n      }\n\n      return this._jsonValue\n        .at(FrequestNode.FrequestNode_Motions)\n        .getValueByString(groupName)\n        .getValueByIndex(index)\n        .getValueByString(FadeOutTime)\n        .toFloat();\n    }\n\n    /**\n     * ユーザーデータのファイル名を取得する\n     * @return ユーザーデータのファイル名\n     */\n    public getUserDataFile(): string {\n      if (!this.isExistUserDataFile()) {\n        return '';\n      }\n\n      return this._json\n        .getRoot()\n        .getValueByString(FileReferences)\n        .getValueByString(UserData)\n        .getRawString();\n    }\n\n    /**\n     * レイアウト情報を取得する\n     * @param outLayoutMap csmMapクラスのインスタンス\n     * @return true レイアウト情報が存在する\n     * @return false レイアウト情報が存在しない\n     */\n    public getLayoutMap(outLayoutMap: csmMap<string, number>): boolean {\n      // 存在しない要素にアクセスするとエラーになるためValueがnullの場合はnullを代入する\n      const map: csmMap<string, Value> = this._json\n        .getRoot()\n        .getValueByString(Layout)\n        .getMap();\n\n      if (map == null) {\n        return false;\n      }\n\n      let ret = false;\n\n      for (\n        const ite: iterator<string, Value> = map.begin();\n        ite.notEqual(map.end());\n        ite.preIncrement()\n      ) {\n        outLayoutMap.setValue(ite.ptr().first, ite.ptr().second.toFloat());\n        ret = true;\n      }\n\n      return ret;\n    }\n\n    /**\n     * 目パチに関連付けられたパラメータの数を取得する\n     * @return 目パチに関連付けられたパラメータの数\n     */\n    public getEyeBlinkParameterCount(): number {\n      if (!this.isExistEyeBlinkParameters()) {\n        return 0;\n      }\n\n      let num = 0;\n      for (\n        let i = 0;\n        i < this._jsonValue.at(FrequestNode.FrequestNode_Groups).getSize();\n        i++\n      ) {\n        const refI: Value = this._jsonValue\n          .at(FrequestNode.FrequestNode_Groups)\n          .getValueByIndex(i);\n        if (refI.isNull() || refI.isError()) {\n          continue;\n        }\n\n        if (refI.getValueByString(Name).getRawString() == EyeBlink) {\n          num = refI\n            .getValueByString(Ids)\n            .getVector()\n            .getSize();\n          break;\n        }\n      }\n\n      return num;\n    }\n\n    /**\n     * 目パチに関連付けられたパラメータのIDを取得する\n     * @param index 配列のインデックス値\n     * @return パラメータID\n     */\n    public getEyeBlinkParameterId(index: number): CubismIdHandle {\n      if (!this.isExistEyeBlinkParameters()) {\n        return null;\n      }\n\n      for (\n        let i = 0;\n        i < this._jsonValue.at(FrequestNode.FrequestNode_Groups).getSize();\n        i++\n      ) {\n        const refI: Value = this._jsonValue\n          .at(FrequestNode.FrequestNode_Groups)\n          .getValueByIndex(i);\n        if (refI.isNull() || refI.isError()) {\n          continue;\n        }\n\n        if (refI.getValueByString(Name).getRawString() == EyeBlink) {\n          return CubismFramework.getIdManager().getId(\n            refI\n              .getValueByString(Ids)\n              .getValueByIndex(index)\n              .getRawString()\n          );\n        }\n      }\n      return null;\n    }\n\n    /**\n     * リップシンクに関連付けられたパラメータの数を取得する\n     * @return リップシンクに関連付けられたパラメータの数\n     */\n    public getLipSyncParameterCount(): number {\n      if (!this.isExistLipSyncParameters()) {\n        return 0;\n      }\n\n      let num = 0;\n      for (\n        let i = 0;\n        i < this._jsonValue.at(FrequestNode.FrequestNode_Groups).getSize();\n        i++\n      ) {\n        const refI: Value = this._jsonValue\n          .at(FrequestNode.FrequestNode_Groups)\n          .getValueByIndex(i);\n        if (refI.isNull() || refI.isError()) {\n          continue;\n        }\n\n        if (refI.getValueByString(Name).getRawString() == LipSync) {\n          num = refI\n            .getValueByString(Ids)\n            .getVector()\n            .getSize();\n          break;\n        }\n      }\n\n      return num;\n    }\n\n    /**\n     * リップシンクに関連付けられたパラメータの数を取得する\n     * @param index 配列のインデックス値\n     * @return パラメータID\n     */\n    public getLipSyncParameterId(index: number): CubismIdHandle {\n      if (!this.isExistLipSyncParameters()) {\n        return null;\n      }\n\n      for (\n        let i = 0;\n        i < this._jsonValue.at(FrequestNode.FrequestNode_Groups).getSize();\n        i++\n      ) {\n        const refI: Value = this._jsonValue\n          .at(FrequestNode.FrequestNode_Groups)\n          .getValueByIndex(i);\n        if (refI.isNull() || refI.isError()) {\n          continue;\n        }\n\n        if (refI.getValueByString(Name).getRawString() == LipSync) {\n          return CubismFramework.getIdManager().getId(\n            refI\n              .getValueByString(Ids)\n              .getValueByIndex(index)\n              .getRawString()\n          );\n        }\n      }\n      return null;\n    }\n\n    /**\n     * モデルファイルのキーが存在するかどうかを確認する\n     * @return true キーが存在する\n     * @return false キーが存在しない\n     */\n    private isExistModelFile(): boolean {\n      const node: Value = this._jsonValue.at(FrequestNode.FrequestNode_Moc);\n      return !node.isNull() && !node.isError();\n    }\n\n    /**\n     * テクスチャファイルのキーが存在するかどうかを確認する\n     * @return true キーが存在する\n     * @return false キーが存在しない\n     */\n    private isExistTextureFiles(): boolean {\n      const node: Value = this._jsonValue.at(\n        FrequestNode.FrequestNode_Textures\n      );\n      return !node.isNull() && !node.isError();\n    }\n\n    /**\n     * 当たり判定のキーが存在するかどうかを確認する\n     * @return true キーが存在する\n     * @return false キーが存在しない\n     */\n    private isExistHitAreas(): boolean {\n      const node: Value = this._jsonValue.at(\n        FrequestNode.FrequestNode_HitAreas\n      );\n      return !node.isNull() && !node.isError();\n    }\n\n    /**\n     * 物理演算ファイルのキーが存在するかどうかを確認する\n     * @return true キーが存在する\n     * @return false キーが存在しない\n     */\n    private isExistPhysicsFile(): boolean {\n      const node: Value = this._jsonValue.at(FrequestNode.FrequestNode_Physics);\n      return !node.isNull() && !node.isError();\n    }\n\n    /**\n     * ポーズ設定ファイルのキーが存在するかどうかを確認する\n     * @return true キーが存在する\n     * @return false キーが存在しない\n     */\n    private isExistPoseFile(): boolean {\n      const node: Value = this._jsonValue.at(FrequestNode.FrequestNode_Pose);\n      return !node.isNull() && !node.isError();\n    }\n\n    /**\n     * 表情設定ファイルのキーが存在するかどうかを確認する\n     * @return true キーが存在する\n     * @return false キーが存在しない\n     */\n    private isExistExpressionFile(): boolean {\n      const node: Value = this._jsonValue.at(\n        FrequestNode.FrequestNode_Expressions\n      );\n      return !node.isNull() && !node.isError();\n    }\n\n    /**\n     * モーショングループのキーが存在するかどうかを確認する\n     * @return true キーが存在する\n     * @return false キーが存在しない\n     */\n    private isExistMotionGroups(): boolean {\n      const node: Value = this._jsonValue.at(FrequestNode.FrequestNode_Motions);\n      return !node.isNull() && !node.isError();\n    }\n\n    /**\n     * 引数で指定したモーショングループのキーが存在するかどうかを確認する\n     * @param groupName  グループ名\n     * @return true キーが存在する\n     * @return false キーが存在しない\n     */\n    private isExistMotionGroupName(groupName: string): boolean {\n      const node: Value = this._jsonValue\n        .at(FrequestNode.FrequestNode_Motions)\n        .getValueByString(groupName);\n      return !node.isNull() && !node.isError();\n    }\n\n    /**\n     * 引数で指定したモーションに対応するサウンドファイルのキーが存在するかどうかを確認する\n     * @param groupName  グループ名\n     * @param index 配列のインデックス値\n     * @return true キーが存在する\n     * @return false キーが存在しない\n     */\n    private isExistMotionSoundFile(groupName: string, index: number): boolean {\n      const node: Value = this._jsonValue\n        .at(FrequestNode.FrequestNode_Motions)\n        .getValueByString(groupName)\n        .getValueByIndex(index)\n        .getValueByString(SoundPath);\n      return !node.isNull() && !node.isError();\n    }\n\n    /**\n     * 引数で指定したモーションに対応するフェードイン時間のキーが存在するかどうかを確認する\n     * @param groupName  グループ名\n     * @param index 配列のインデックス値\n     * @return true キーが存在する\n     * @return false キーが存在しない\n     */\n    private isExistMotionFadeIn(groupName: string, index: number): boolean {\n      const node: Value = this._jsonValue\n        .at(FrequestNode.FrequestNode_Motions)\n        .getValueByString(groupName)\n        .getValueByIndex(index)\n        .getValueByString(FadeInTime);\n      return !node.isNull() && !node.isError();\n    }\n\n    /**\n     * 引数で指定したモーションに対応するフェードアウト時間のキーが存在するかどうかを確認する\n     * @param groupName  グループ名\n     * @param index 配列のインデックス値\n     * @return true キーが存在する\n     * @return false キーが存在しない\n     */\n    private isExistMotionFadeOut(groupName: string, index: number): boolean {\n      const node: Value = this._jsonValue\n        .at(FrequestNode.FrequestNode_Motions)\n        .getValueByString(groupName)\n        .getValueByIndex(index)\n        .getValueByString(FadeOutTime);\n      return !node.isNull() && !node.isError();\n    }\n\n    /**\n     * UserDataのファイル名が存在するかどうかを確認する\n     * @return true キーが存在する\n     * @return false キーが存在しない\n     */\n    private isExistUserDataFile(): boolean {\n      const node: Value = this._json\n        .getRoot()\n        .getValueByString(FileReferences)\n        .getValueByString(UserData);\n      return !node.isNull() && !node.isError();\n    }\n\n    /**\n     * 目ぱちに対応付けられたパラメータが存在するかどうかを確認する\n     * @return true キーが存在する\n     * @return false キーが存在しない\n     */\n    private isExistEyeBlinkParameters(): boolean {\n      if (\n        this._jsonValue.at(FrequestNode.FrequestNode_Groups).isNull() ||\n        this._jsonValue.at(FrequestNode.FrequestNode_Groups).isError()\n      ) {\n        return false;\n      }\n\n      for (\n        let i = 0;\n        i < this._jsonValue.at(FrequestNode.FrequestNode_Groups).getSize();\n        ++i\n      ) {\n        if (\n          this._jsonValue\n            .at(FrequestNode.FrequestNode_Groups)\n            .getValueByIndex(i)\n            .getValueByString(Name)\n            .getRawString() == EyeBlink\n        ) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    /**\n     * リップシンクに対応付けられたパラメータが存在するかどうかを確認する\n     * @return true キーが存在する\n     * @return false キーが存在しない\n     */\n    private isExistLipSyncParameters(): boolean {\n      if (\n        this._jsonValue.at(FrequestNode.FrequestNode_Groups).isNull() ||\n        this._jsonValue.at(FrequestNode.FrequestNode_Groups).isError()\n      ) {\n        return false;\n      }\n      for (\n        let i = 0;\n        i < this._jsonValue.at(FrequestNode.FrequestNode_Groups).getSize();\n        ++i\n      ) {\n        if (\n          this._jsonValue\n            .at(FrequestNode.FrequestNode_Groups)\n            .getValueByIndex(i)\n            .getValueByString(Name)\n            .getRawString() == LipSync\n        ) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    private _json: CubismJson;\n    private _jsonValue: csmVector<Value>;\n  }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { Live2DCubismFramework as cubismrenderer } from '../rendering/cubismrenderer';\nimport { Live2DCubismFramework as cubismid } from '../id/cubismid';\nimport { Live2DCubismFramework as cubismframework } from '../live2dcubismframework';\nimport { Live2DCubismFramework as csmmap } from '../type/csmmap';\nimport { Live2DCubismFramework as csmvector } from '../type/csmvector';\nimport { CSM_ASSERT } from '../utils/cubismdebug';\nimport CubismFramework = cubismframework.CubismFramework;\nimport CubismBlendMode = cubismrenderer.CubismBlendMode;\nimport csmVector = csmvector.csmVector;\nimport csmMap = csmmap.csmMap;\nimport CubismIdHandle = cubismid.CubismIdHandle;\n\nexport namespace Live2DCubismFramework {\n  /**\n   * モデル\n   *\n   * Mocデータから生成されるモデルのクラス。\n   */\n  export class CubismModel {\n    /**\n     * モデルのパラメータの更新\n     */\n    public update(): void {\n      // Update model\n      this._model.update();\n\n      this._model.drawables.resetDynamicFlags();\n    }\n\n    /**\n     * 获取画布的宽度\n     */\n    public getCanvasWidth(): number {\n      if (this._model == null) {\n        return 0.0;\n      }\n\n      return (\n        this._model.canvasinfo.CanvasWidth /\n        this._model.canvasinfo.PixelsPerUnit\n      );\n    }\n\n    /**\n     * 获取画布的高度\n     */\n    public getCanvasHeight(): number {\n      if (this._model == null) {\n        return 0.0;\n      }\n\n      return (\n        this._model.canvasinfo.CanvasHeight /\n        this._model.canvasinfo.PixelsPerUnit\n      );\n    }\n\n    /**\n     * パラメータを保存する\n     */\n    public saveParameters(): void {\n      const parameterCount: number = this._model.parameters.count;\n      const savedParameterCount: number = this._savedParameters.getSize();\n\n      for (let i = 0; i < parameterCount; ++i) {\n        if (i < savedParameterCount) {\n          this._savedParameters.set(i, this._parameterValues[i]);\n        } else {\n          this._savedParameters.pushBack(this._parameterValues[i]);\n        }\n      }\n    }\n\n    /**\n     * モデルを取得\n     */\n    public getModel(): Live2DCubismCore.Model {\n      return this._model;\n    }\n\n    /**\n     * パーツのインデックスを取得\n     * @param partId パーツのID\n     * @return パーツのインデックス\n     */\n    public getPartIndex(partId: CubismIdHandle): number {\n      let partIndex: number;\n      const partCount: number = this._model.parts.count;\n\n      for (partIndex = 0; partIndex < partCount; ++partIndex) {\n        if (partId == this._partIds.at(partIndex)) {\n          return partIndex;\n        }\n      }\n\n      // モデルに存在していない場合、非存在パーツIDリスト内にあるかを検索し、そのインデックスを返す\n      if (this._notExistPartId.isExist(partId)) {\n        return this._notExistPartId.getValue(partId);\n      }\n\n      // 非存在パーツIDリストにない場合、新しく要素を追加する\n      partIndex = partCount + this._notExistPartId.getSize();\n      this._notExistPartId.setValue(partId, partIndex);\n      this._notExistPartOpacities.appendKey(partIndex);\n\n      return partIndex;\n    }\n\n    /**\n     * パーツの個数の取得\n     * @return パーツの個数\n     */\n    public getPartCount(): number {\n      const partCount: number = this._model.parts.count;\n      return partCount;\n    }\n\n    /**\n     * パーツの不透明度の設定(Index)\n     * @param partIndex パーツのインデックス\n     * @param opacity 不透明度\n     */\n    public setPartOpacityByIndex(partIndex: number, opacity: number): void {\n      if (this._notExistPartOpacities.isExist(partIndex)) {\n        this._notExistPartOpacities.setValue(partIndex, opacity);\n        return;\n      }\n\n      // インデックスの範囲内検知\n      CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\n\n      this._partOpacities[partIndex] = opacity;\n    }\n\n    /**\n     * パーツの不透明度の設定(Id)\n     * @param partId パーツのID\n     * @param opacity パーツの不透明度\n     */\n    public setPartOpacityById(partId: CubismIdHandle, opacity: number): void {\n      // 高速化のためにPartIndexを取得できる機構になっているが、外部からの設定の時は呼び出し頻度が低いため不要\n      const index: number = this.getPartIndex(partId);\n\n      if (index < 0) {\n        return; // パーツがないのでスキップ\n      }\n\n      this.setPartOpacityByIndex(index, opacity);\n    }\n\n    /**\n     * パーツの不透明度の取得(index)\n     * @param partIndex パーツのインデックス\n     * @return パーツの不透明度\n     */\n    public getPartOpacityByIndex(partIndex: number): number {\n      if (this._notExistPartOpacities.isExist(partIndex)) {\n        // モデルに存在しないパーツIDの場合、非存在パーツリストから不透明度を返す。\n        return this._notExistPartOpacities.getValue(partIndex);\n      }\n\n      // インデックスの範囲内検知\n      CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\n\n      return this._partOpacities[partIndex];\n    }\n\n    /**\n     * パーツの不透明度の取得(id)\n     * @param partId パーツのＩｄ\n     * @return パーツの不透明度\n     */\n    public getPartOpacityById(partId: CubismIdHandle): number {\n      // 高速化のためにPartIndexを取得できる機構になっているが、外部からの設定の時は呼び出し頻度が低いため不要\n      const index: number = this.getPartIndex(partId);\n\n      if (index < 0) {\n        return 0; // パーツが無いのでスキップ\n      }\n\n      return this.getPartOpacityByIndex(index);\n    }\n\n    /**\n     * パラメータのインデックスの取得\n     * @param パラメータID\n     * @return パラメータのインデックス\n     */\n    public getParameterIndex(parameterId: CubismIdHandle): number {\n      let parameterIndex: number;\n      const idCount: number = this._model.parameters.count;\n\n      for (parameterIndex = 0; parameterIndex < idCount; ++parameterIndex) {\n        if (parameterId != this._parameterIds.at(parameterIndex)) {\n          continue;\n        }\n\n        return parameterIndex;\n      }\n\n      // モデルに存在していない場合、非存在パラメータIDリスト内を検索し、そのインデックスを返す\n      if (this._notExistParameterId.isExist(parameterId)) {\n        return this._notExistParameterId.getValue(parameterId);\n      }\n\n      // 非存在パラメータIDリストにない場合新しく要素を追加する\n      parameterIndex =\n        this._model.parameters.count + this._notExistParameterId.getSize();\n\n      this._notExistParameterId.setValue(parameterId, parameterIndex);\n      this._notExistParameterValues.appendKey(parameterIndex);\n\n      return parameterIndex;\n    }\n\n    /**\n     * パラメータの個数の取得\n     * @return パラメータの個数\n     */\n    public getParameterCount(): number {\n      return this._model.parameters.count;\n    }\n\n    /**\n     * 获取参数的最大值\n     * @param parameterIndex パラメータのインデックス\n     * @return パラメータの最大値\n     */\n    public getParameterMaximumValue(parameterIndex: number): number {\n      return this._model.parameters.maximumValues[parameterIndex];\n    }\n\n    /**\n     * パラメータの最小値の取得\n     * @param parameterIndex パラメータのインデックス\n     * @return パラメータの最小値\n     */\n    public getParameterMinimumValue(parameterIndex: number): number {\n      return this._model.parameters.minimumValues[parameterIndex];\n    }\n\n    /**\n     * パラメータのデフォルト値の取得\n     * @param parameterIndex パラメータのインデックス\n     * @return パラメータのデフォルト値\n     */\n    public getParameterDefaultValue(parameterIndex: number): number {\n      return this._model.parameters.defaultValues[parameterIndex];\n    }\n\n    /**\n     * パラメータの値の取得\n     * @param parameterIndex    パラメータのインデックス\n     * @return パラメータの値\n     */\n    public getParameterValueByIndex(parameterIndex: number): number {\n      if (this._notExistParameterValues.isExist(parameterIndex)) {\n        return this._notExistParameterValues.getValue(parameterIndex);\n      }\n\n      // インデックスの範囲内検知\n      CSM_ASSERT(\n        0 <= parameterIndex && parameterIndex < this.getParameterCount()\n      );\n\n      return this._parameterValues[parameterIndex];\n    }\n\n    /**\n     * パラメータの値の取得\n     * @param parameterId    パラメータのID\n     * @return パラメータの値\n     */\n    public getParameterValueById(parameterId: CubismIdHandle): number {\n      // 高速化のためにparameterIndexを取得できる機構になっているが、外部からの設定の時は呼び出し頻度が低いため不要\n      const parameterIndex: number = this.getParameterIndex(parameterId);\n      return this.getParameterValueByIndex(parameterIndex);\n    }\n\n    /**\n     * パラメータの値の設定\n     * @param parameterIndex パラメータのインデックス\n     * @param value パラメータの値\n     * @param weight 重み\n     */\n    public setParameterValueByIndex(\n      parameterIndex: number,\n      value: number,\n      weight = 1.0\n    ): void {\n      if (this._notExistParameterValues.isExist(parameterIndex)) {\n        this._notExistParameterValues.setValue(\n          parameterIndex,\n          weight == 1\n            ? value\n            : this._notExistParameterValues.getValue(parameterIndex) *\n                (1 - weight) +\n                value * weight\n        );\n\n        return;\n      }\n\n      // インデックスの範囲内検知\n      CSM_ASSERT(\n        0 <= parameterIndex && parameterIndex < this.getParameterCount()\n      );\n\n      if (this._model.parameters.maximumValues[parameterIndex] < value) {\n        value = this._model.parameters.maximumValues[parameterIndex];\n      }\n      if (this._model.parameters.minimumValues[parameterIndex] > value) {\n        value = this._model.parameters.minimumValues[parameterIndex];\n      }\n\n      this._parameterValues[parameterIndex] =\n        weight == 1\n          ? value\n          : (this._parameterValues[parameterIndex] =\n              this._parameterValues[parameterIndex] * (1 - weight) +\n              value * weight);\n    }\n\n    /**\n     * パラメータの値の設定\n     * @param parameterId パラメータのID\n     * @param value パラメータの値\n     * @param weight 重み\n     */\n    public setParameterValueById(\n      parameterId: CubismIdHandle,\n      value: number,\n      weight = 1.0\n    ): void {\n      const index: number = this.getParameterIndex(parameterId);\n      this.setParameterValueByIndex(index, value, weight);\n    }\n\n    /**\n     * パラメータの値の加算(index)\n     * @param parameterIndex パラメータインデックス\n     * @param value 加算する値\n     * @param weight 重み\n     */\n    public addParameterValueByIndex(\n      parameterIndex: number,\n      value: number,\n      weight = 1.0\n    ): void {\n      this.setParameterValueByIndex(\n        parameterIndex,\n        this.getParameterValueByIndex(parameterIndex) + value * weight\n      );\n    }\n\n    /**\n     * 参数值的加法（id）\n     * @param parameterId 参数ID\n     * @param value 增值\n     * @param weight 权重\n     */\n    public addParameterValueById(\n      parameterId: any,\n      value: number,\n      weight = 1.0\n    ): void {\n      const index: number = this.getParameterIndex(parameterId);\n      this.addParameterValueByIndex(index, value, weight);\n    }\n\n    /**\n     * パラメータの値の乗算\n     * @param parameterId パラメータのID\n     * @param value 乗算する値\n     * @param weight 重み\n     */\n    public multiplyParameterValueById(\n      parameterId: CubismIdHandle,\n      value: number,\n      weight = 1.0\n    ): void {\n      const index: number = this.getParameterIndex(parameterId);\n      this.multiplyParameterValueByIndex(index, value, weight);\n    }\n\n    /**\n     * パラメータの値の乗算\n     * @param parameterIndex パラメータのインデックス\n     * @param value 乗算する値\n     * @param weight 重み\n     */\n    public multiplyParameterValueByIndex(\n      parameterIndex: number,\n      value: number,\n      weight = 1.0\n    ): void {\n      this.setParameterValueByIndex(\n        parameterIndex,\n        this.getParameterValueByIndex(parameterIndex) *\n          (1.0 + (value - 1.0) * weight)\n      );\n    }\n\n    /**\n     * Drawableのインデックスの取得\n     * @param drawableId DrawableのID\n     * @return Drawableのインデックス\n     */\n    public getDrawableIndex(drawableId: CubismIdHandle): number {\n      const drawableCount = this._model.drawables.count;\n\n      for (\n        let drawableIndex = 0;\n        drawableIndex < drawableCount;\n        ++drawableIndex\n      ) {\n        if (this._drawableIds.at(drawableIndex) == drawableId) {\n          return drawableIndex;\n        }\n      }\n\n      return -1;\n    }\n\n    /**\n     * Drawableの個数の取得\n     * @return drawableの個数\n     */\n    public getDrawableCount(): number {\n      const drawableCount = this._model.drawables.count;\n      return drawableCount;\n    }\n\n    /**\n     * DrawableのIDを取得する\n     * @param drawableIndex Drawableのインデックス\n     * @return drawableのID\n     */\n    public getDrawableId(drawableIndex: number): CubismIdHandle {\n      const parameterIds: string[] = this._model.drawables.ids;\n      return CubismFramework.getIdManager().getId(parameterIds[drawableIndex]);\n    }\n\n    /**\n     * Drawableの描画順リストの取得\n     * @return Drawableの描画順リスト\n     */\n    public getDrawableRenderOrders(): Int32Array {\n      const renderOrders: Int32Array = this._model.drawables.renderOrders;\n      return renderOrders;\n    }\n\n    /**\n     * Drawableのテクスチャインデックスリストの取得\n     * @param drawableIndex Drawableのインデックス\n     * @return drawableのテクスチャインデックスリスト\n     */\n    public getDrawableTextureIndices(drawableIndex: number): number {\n      const textureIndices: Int32Array = this._model.drawables.textureIndices;\n      return textureIndices[drawableIndex];\n    }\n\n    /**\n     * DrawableのVertexPositionsの変化情報の取得\n     *\n     * 直近のCubismModel.update関数でDrawableの頂点情報が変化したかを取得する。\n     *\n     * @param   drawableIndex   Drawableのインデックス\n     * @retval  true    Drawableの頂点情報が直近のCubismModel.update関数で変化した\n     * @retval  false   Drawableの頂点情報が直近のCubismModel.update関数で変化していない\n     */\n    public getDrawableDynamicFlagVertexPositionsDidChange(\n      drawableIndex: number\n    ): boolean {\n      const dynamicFlags: Uint8Array = this._model.drawables.dynamicFlags;\n      return Live2DCubismCore.Utils.hasVertexPositionsDidChangeBit(\n        dynamicFlags[drawableIndex]\n      );\n    }\n\n    /**\n     * Drawableの頂点インデックスの個数の取得\n     * @param drawableIndex Drawableのインデックス\n     * @return drawableの頂点インデックスの個数\n     */\n    public getDrawableVertexIndexCount(drawableIndex: number): number {\n      const indexCounts: Int32Array = this._model.drawables.indexCounts;\n      return indexCounts[drawableIndex];\n    }\n\n    /**\n     * Drawableの頂点の個数の取得\n     * @param drawableIndex Drawableのインデックス\n     * @return drawableの頂点の個数\n     */\n    public getDrawableVertexCount(drawableIndex: number): number {\n      const vertexCounts = this._model.drawables.vertexCounts;\n      return vertexCounts[drawableIndex];\n    }\n\n    /**\n     * Drawableの頂点リストの取得\n     * @param drawableIndex drawableのインデックス\n     * @return drawableの頂点リスト\n     */\n    public getDrawableVertices(drawableIndex: number): Float32Array {\n      return this.getDrawableVertexPositions(drawableIndex);\n    }\n\n    /**\n     * Drawableの頂点インデックスリストの取得\n     * @param drarableIndex Drawableのインデックス\n     * @return drawableの頂点インデックスリスト\n     */\n    public getDrawableVertexIndices(drawableIndex: number): Uint16Array {\n      const indicesArray: Uint16Array[] = this._model.drawables.indices;\n      return indicesArray[drawableIndex];\n    }\n\n    /**\n     * Drawableの頂点リストの取得\n     * @param drawableIndex Drawableのインデックス\n     * @return drawableの頂点リスト\n     */\n    public getDrawableVertexPositions(drawableIndex: number): Float32Array {\n      const verticesArray: Float32Array[] = this._model.drawables\n        .vertexPositions;\n      return verticesArray[drawableIndex];\n    }\n\n    /**\n     * Drawableの頂点のUVリストの取得\n     * @param drawableIndex Drawableのインデックス\n     * @return drawableの頂点UVリスト\n     */\n    public getDrawableVertexUvs(drawableIndex: number): Float32Array {\n      const uvsArray: Float32Array[] = this._model.drawables.vertexUvs;\n      return uvsArray[drawableIndex];\n    }\n\n    /**\n     * Drawableの不透明度の取得\n     * @param drawableIndex Drawableのインデックス\n     * @return drawableの不透明度\n     */\n    public getDrawableOpacity(drawableIndex: number): number {\n      const opacities: Float32Array = this._model.drawables.opacities;\n      return opacities[drawableIndex];\n    }\n\n    /**\n     * Drawableのカリング情報の取得\n     * @param drawableIndex Drawableのインデックス\n     * @return drawableのカリング情報\n     */\n    public getDrawableCulling(drawableIndex: number): boolean {\n      const constantFlags = this._model.drawables.constantFlags;\n\n      return !Live2DCubismCore.Utils.hasIsDoubleSidedBit(\n        constantFlags[drawableIndex]\n      );\n    }\n\n    /**\n     * Drawableのブレンドモードを取得\n     * @param drawableIndex Drawableのインデックス\n     * @return drawableのブレンドモード\n     */\n    public getDrawableBlendMode(drawableIndex: number): CubismBlendMode {\n      const constantFlags = this._model.drawables.constantFlags;\n\n      return Live2DCubismCore.Utils.hasBlendAdditiveBit(\n        constantFlags[drawableIndex]\n      )\n        ? CubismBlendMode.CubismBlendMode_Additive\n        : Live2DCubismCore.Utils.hasBlendMultiplicativeBit(\n            constantFlags[drawableIndex]\n          )\n        ? CubismBlendMode.CubismBlendMode_Multiplicative\n        : CubismBlendMode.CubismBlendMode_Normal;\n    }\n\n    /**\n     * Drawableのマスクの反転使用の取得\n     *\n     * Drawableのマスク使用時の反転設定を取得する。\n     * マスクを使用しない場合は無視される。\n     *\n     * @param drawableIndex Drawableのインデックス\n     * @return Drawableの反転設定\n     */\n    public getDrawableInvertedMaskBit(drawableIndex: number): boolean {\n      const constantFlags: Uint8Array = this._model.drawables.constantFlags;\n\n      return Live2DCubismCore.Utils.hasIsInvertedMaskBit(\n        constantFlags[drawableIndex]\n      );\n    }\n\n    /**\n     * Drawableのクリッピングマスクリストの取得\n     * @return Drawableのクリッピングマスクリスト\n     */\n    public getDrawableMasks(): Int32Array[] {\n      const masks: Int32Array[] = this._model.drawables.masks;\n      return masks;\n    }\n\n    /**\n     * Drawableのクリッピングマスクの個数リストの取得\n     * @return Drawableのクリッピングマスクの個数リスト\n     */\n    public getDrawableMaskCounts(): Int32Array {\n      const maskCounts: Int32Array = this._model.drawables.maskCounts;\n      return maskCounts;\n    }\n\n    /**\n     * クリッピングマスクの使用状態\n     *\n     * @return true クリッピングマスクを使用している\n     * @return false クリッピングマスクを使用していない\n     */\n    public isUsingMasking(): boolean {\n      for (let d = 0; d < this._model.drawables.count; ++d) {\n        if (this._model.drawables.maskCounts[d] <= 0) {\n          continue;\n        }\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Drawableの表示情報を取得する\n     *\n     * @param drawableIndex Drawableのインデックス\n     * @return true Drawableが表示\n     * @return false Drawableが非表示\n     */\n    public getDrawableDynamicFlagIsVisible(drawableIndex: number): boolean {\n      const dynamicFlags: Uint8Array = this._model.drawables.dynamicFlags;\n      return Live2DCubismCore.Utils.hasIsVisibleBit(\n        dynamicFlags[drawableIndex]\n      );\n    }\n\n    /**\n     * DrawableのDrawOrderの変化情報の取得\n     *\n     * 直近のCubismModel.update関数でdrawableのdrawOrderが変化したかを取得する。\n     * drawOrderはartMesh上で指定する0から1000の情報\n     * @param drawableIndex drawableのインデックス\n     * @return true drawableの不透明度が直近のCubismModel.update関数で変化した\n     * @return false drawableの不透明度が直近のCubismModel.update関数で変化している\n     */\n    public getDrawableDynamicFlagVisibilityDidChange(\n      drawableIndex: number\n    ): boolean {\n      const dynamicFlags: Uint8Array = this._model.drawables.dynamicFlags;\n      return Live2DCubismCore.Utils.hasVisibilityDidChangeBit(\n        dynamicFlags[drawableIndex]\n      );\n    }\n\n    /**\n     * Drawableの不透明度の変化情報の取得\n     *\n     * 直近のCubismModel.update関数でdrawableの不透明度が変化したかを取得する。\n     *\n     * @param drawableIndex drawableのインデックス\n     * @return true Drawableの不透明度が直近のCubismModel.update関数で変化した\n     * @return false Drawableの不透明度が直近のCubismModel.update関数で変化してない\n     */\n    public getDrawableDynamicFlagOpacityDidChange(\n      drawableIndex: number\n    ): boolean {\n      const dynamicFlags: Uint8Array = this._model.drawables.dynamicFlags;\n      return Live2DCubismCore.Utils.hasOpacityDidChangeBit(\n        dynamicFlags[drawableIndex]\n      );\n    }\n\n    /**\n     * Drawableの描画順序の変化情報の取得\n     *\n     * 直近のCubismModel.update関数でDrawableの描画の順序が変化したかを取得する。\n     *\n     * @param drawableIndex Drawableのインデックス\n     * @return true Drawableの描画の順序が直近のCubismModel.update関数で変化した\n     * @return false Drawableの描画の順序が直近のCubismModel.update関数で変化してない\n     */\n    public getDrawableDynamicFlagRenderOrderDidChange(\n      drawableIndex: number\n    ): boolean {\n      const dynamicFlags: Uint8Array = this._model.drawables.dynamicFlags;\n      return Live2DCubismCore.Utils.hasRenderOrderDidChangeBit(\n        dynamicFlags[drawableIndex]\n      );\n    }\n\n    /**\n     * 保存されたパラメータの読み込み\n     */\n    public loadParameters(): void {\n      let parameterCount: number = this._model.parameters.count;\n      const savedParameterCount: number = this._savedParameters.getSize();\n\n      if (parameterCount > savedParameterCount) {\n        parameterCount = savedParameterCount;\n      }\n\n      for (let i = 0; i < parameterCount; ++i) {\n        this._parameterValues[i] = this._savedParameters.at(i);\n      }\n    }\n\n    /**\n     * 初期化する\n     */\n    public initialize(): void {\n      CSM_ASSERT(this._model);\n\n      this._parameterValues = this._model.parameters.values;\n      this._partOpacities = this._model.parts.opacities;\n      this._parameterMaximumValues = this._model.parameters.maximumValues;\n      this._parameterMinimumValues = this._model.parameters.minimumValues;\n\n      {\n        const parameterIds: string[] = this._model.parameters.ids;\n        const parameterCount: number = this._model.parameters.count;\n\n        this._parameterIds.prepareCapacity(parameterCount);\n        for (let i = 0; i < parameterCount; ++i) {\n          this._parameterIds.pushBack(\n            CubismFramework.getIdManager().getId(parameterIds[i])\n          );\n        }\n      }\n\n      {\n        const partIds: string[] = this._model.parts.ids;\n        const partCount: number = this._model.parts.count;\n\n        this._partIds.prepareCapacity(partCount);\n        for (let i = 0; i < partCount; ++i) {\n          this._partIds.pushBack(\n            CubismFramework.getIdManager().getId(partIds[i])\n          );\n        }\n      }\n\n      {\n        const drawableIds: string[] = this._model.drawables.ids;\n        const drawableCount: number = this._model.drawables.count;\n\n        this._drawableIds.prepareCapacity(drawableCount);\n        for (let i = 0; i < drawableCount; ++i) {\n          this._drawableIds.pushBack(\n            CubismFramework.getIdManager().getId(drawableIds[i])\n          );\n        }\n      }\n    }\n\n    /**\n     * コンストラクタ\n     * @param model モデル\n     */\n    public constructor(model: Live2DCubismCore.Model) {\n      this._model = model;\n      this._parameterValues = null;\n      this._parameterMaximumValues = null;\n      this._parameterMinimumValues = null;\n      this._partOpacities = null;\n      this._savedParameters = new csmVector<number>();\n      this._parameterIds = new csmVector<CubismIdHandle>();\n      this._drawableIds = new csmVector<CubismIdHandle>();\n      this._partIds = new csmVector<CubismIdHandle>();\n\n      this._notExistPartId = new csmMap<CubismIdHandle, number>();\n      this._notExistParameterId = new csmMap<CubismIdHandle, number>();\n      this._notExistParameterValues = new csmMap<number, number>();\n      this._notExistPartOpacities = new csmMap<number, number>();\n    }\n\n    /**\n     * デストラクタ相当の処理\n     */\n    public release(): void {\n      this._model.release();\n      this._model = null;\n    }\n\n    private _notExistPartOpacities: csmMap<number, number>; // 存在していないパーツの不透明度のリスト\n    private _notExistPartId: csmMap<CubismIdHandle, number>; // 存在していないパーツIDのリスト\n\n    private _notExistParameterValues: csmMap<number, number>; // 存在していないパラメータの値のリスト\n    private _notExistParameterId: csmMap<CubismIdHandle, number>; // 存在していないパラメータIDのリスト\n\n    private _savedParameters: csmVector<number>; // 保存されたパラメータ\n\n    private _model: Live2DCubismCore.Model; // モデル\n\n    private _parameterValues: Float32Array; // パラメータの値のリスト\n    private _parameterMaximumValues: Float32Array; // パラメータの最大値のリスト\n    private _parameterMinimumValues: Float32Array; // パラメータの最小値のリスト\n\n    private _partOpacities: Float32Array; // パーツの不透明度のリスト\n\n    private _parameterIds: csmVector<CubismIdHandle>;\n    private _partIds: csmVector<CubismIdHandle>;\n    private _drawableIds: csmVector<CubismIdHandle>;\n  }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { Live2DCubismFramework as cubismmodel } from './cubismmodel';\nimport CubismModel = cubismmodel.CubismModel;\nimport { CSM_ASSERT } from '../utils/cubismdebug';\n\nexport namespace Live2DCubismFramework {\n  /**\n   * Mocデータの管理\n   *\n   * Mocデータの管理を行うクラス。\n   */\n  export class CubismMoc {\n    /**\n     * Mocデータの作成\n     */\n    public static create(mocBytes: ArrayBuffer): CubismMoc {\n      let cubismMoc: CubismMoc = null;\n      const moc: Live2DCubismCore.Moc = Live2DCubismCore.Moc.fromArrayBuffer(\n        mocBytes\n      );\n\n      if (moc) {\n        cubismMoc = new CubismMoc(moc);\n      }\n\n      return cubismMoc;\n    }\n\n    /**\n     * Mocデータを削除\n     *\n     * Mocデータを削除する\n     */\n    public static delete(moc: CubismMoc): void {\n      moc._moc._release();\n      moc._moc = null;\n      moc = null;\n    }\n\n    /**\n     * モデルを作成する\n     *\n     * @return Mocデータから作成されたモデル\n     */\n    createModel(): CubismModel {\n      let cubismModel: CubismModel = null;\n\n      const model: Live2DCubismCore.Model = Live2DCubismCore.Model.fromMoc(\n        this._moc\n      );\n\n      if (model) {\n        cubismModel = new CubismModel(model);\n        cubismModel.initialize();\n\n        ++this._modelCount;\n      }\n\n      return cubismModel;\n    }\n\n    /**\n     * モデルを削除する\n     */\n    deleteModel(model: CubismModel): void {\n      if (model != null) {\n        model.release();\n        model = null;\n        --this._modelCount;\n      }\n    }\n\n    /**\n     * コンストラクタ\n     */\n    private constructor(moc: Live2DCubismCore.Moc) {\n      this._moc = moc;\n      this._modelCount = 0;\n    }\n\n    /**\n     * デストラクタ相当の処理\n     */\n    public release(): void {\n      CSM_ASSERT(this._modelCount == 0);\n\n      this._moc._release();\n      this._moc = null;\n    }\n\n    _moc: Live2DCubismCore.Moc; // Mocデータ\n    _modelCount: number; // Mocデータから作られたモデルの個数\n  }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { Live2DCubismFramework as cubismvector2 } from '../math/cubismvector2';\nimport { Live2DCubismFramework as cubismid } from '../id/cubismid';\nimport { Live2DCubismFramework as csmvector } from '../type/csmvector';\nimport csmVector = csmvector.csmVector;\nimport CubismIdHandle = cubismid.CubismIdHandle;\nimport CubismVector2 = cubismvector2.CubismVector2;\n\nexport namespace Live2DCubismFramework {\n  /**\n   * 物理演算の適用先の種類\n   */\n  export enum CubismPhysicsTargetType {\n    CubismPhysicsTargetType_Parameter // パラメータに対して適用\n  }\n\n  /**\n   * 物理演算の入力の種類\n   */\n  export enum CubismPhysicsSource {\n    CubismPhysicsSource_X, // X軸の位置から\n    CubismPhysicsSource_Y, // Y軸の位置から\n    CubismPhysicsSource_Angle // 角度から\n  }\n\n  /**\n   * @brief 物理演算で使用する外部の力\n   *\n   * 物理演算で使用する外部の力。\n   */\n  export class PhysicsJsonEffectiveForces {\n    constructor() {\n      this.gravity = new CubismVector2(0, 0);\n      this.wind = new CubismVector2(0, 0);\n    }\n    gravity: CubismVector2; // 重力\n    wind: CubismVector2; // 風\n  }\n\n  /**\n   * 物理演算のパラメータ情報\n   */\n  export class CubismPhysicsParameter {\n    id: CubismIdHandle; // パラメータ\n    targetType: CubismPhysicsTargetType; // 適用先の種類\n  }\n\n  /**\n   * 物理演算の正規化情報\n   */\n  export class CubismPhysicsNormalization {\n    minimum: number; // 最大値\n    maximum: number; // 最小値\n    defalut: number; // デフォルト値\n  }\n\n  /**\n   * 物理演算の演算委使用する物理点の情報\n   */\n  export class CubismPhysicsParticle {\n    constructor() {\n      this.initialPosition = new CubismVector2(0, 0);\n      this.position = new CubismVector2(0, 0);\n      this.lastPosition = new CubismVector2(0, 0);\n      this.lastGravity = new CubismVector2(0, 0);\n      this.force = new CubismVector2(0, 0);\n      this.velocity = new CubismVector2(0, 0);\n    }\n\n    initialPosition: CubismVector2; // 初期位置\n    mobility: number; // 動きやすさ\n    delay: number; // 遅れ\n    acceleration: number; // 加速度\n    radius: number; // 距離\n    position: CubismVector2; // 現在の位置\n    lastPosition: CubismVector2; // 最後の位置\n    lastGravity: CubismVector2; // 最後の重力\n    force: CubismVector2; // 現在かかっている力\n    velocity: CubismVector2; // 現在の速度\n  }\n\n  /**\n   * 物理演算の物理点の管理\n   */\n  export class CubismPhysicsSubRig {\n    constructor() {\n      this.normalizationPosition = new CubismPhysicsNormalization();\n      this.normalizationAngle = new CubismPhysicsNormalization();\n    }\n    inputCount: number; // 入力の個数\n    outputCount: number; // 出力の個数\n    particleCount: number; // 物理点の個数\n    baseInputIndex: number; // 入力の最初のインデックス\n    baseOutputIndex: number; // 出力の最初のインデックス\n    baseParticleIndex: number; // 物理点の最初のインデックス\n    normalizationPosition: CubismPhysicsNormalization; // 正規化された位置\n    normalizationAngle: CubismPhysicsNormalization; // 正規化された角度\n  }\n\n  /**\n   * 正規化されたパラメータの取得関数の宣言\n   * @param targetTranslation     // 演算結果の移動値\n   * @param targetAngle           // 演算結果の角度\n   * @param value                 // パラメータの値\n   * @param parameterMinimunValue // パラメータの最小値\n   * @param parameterMaximumValue // パラメータの最大値\n   * @param parameterDefaultValue // パラメータのデフォルト値\n   * @param normalizationPosition // 正規化された位置\n   * @param normalizationAngle    // 正規化された角度\n   * @param isInverted            // 値が反転されているか？\n   * @param weight                // 重み\n   */\n  export interface normalizedPhysicsParameterValueGetter {\n    (\n      targetTranslation: CubismVector2,\n      targetAngle: { angle: number },\n      value: number,\n      parameterMinimunValue: number,\n      parameterMaximumValue: number,\n      parameterDefaultValue: number,\n      normalizationPosition: CubismPhysicsNormalization,\n      normalizationAngle: CubismPhysicsNormalization,\n      isInverted: boolean,\n      weight: number\n    ): void;\n  }\n\n  /**\n   * 物理演算の値の取得関数の宣言\n   * @param translation 移動値\n   * @param particles 物理点のリスト\n   * @param isInverted 値が反映されているか\n   * @param parentGravity 重力\n   * @return 値\n   */\n  export interface physicsValueGetter {\n    (\n      translation: CubismVector2,\n      particles: CubismPhysicsParticle[],\n      particleIndex: number,\n      isInverted: boolean,\n      parentGravity: CubismVector2\n    ): number;\n  }\n\n  /**\n   * 物理演算のスケールの取得関数の宣言\n   * @param translationScale 移動値のスケール\n   * @param angleScale    角度のスケール\n   * @return スケール値\n   */\n  export interface physicsScaleGetter {\n    (translationScale: CubismVector2, angleScale: number): number;\n  }\n\n  /**\n   * 物理演算の入力情報\n   */\n  export class CubismPhysicsInput {\n    constructor() {\n      this.source = new CubismPhysicsParameter();\n    }\n    source: CubismPhysicsParameter; // 入力元のパラメータ\n    sourceParameterIndex: number; // 入力元のパラメータのインデックス\n    weight: number; // 重み\n    type: number; // 入力の種類\n    reflect: boolean; // 値が反転されているかどうか\n    getNormalizedParameterValue: normalizedPhysicsParameterValueGetter; // 正規化されたパラメータ値の取得関数\n  }\n\n  /**\n   * @brief 物理演算の出力情報\n   *\n   * 物理演算の出力情報。\n   */\n  export class CubismPhysicsOutput {\n    constructor() {\n      this.destination = new CubismPhysicsParameter();\n      this.translationScale = new CubismVector2(0, 0);\n    }\n\n    destination: CubismPhysicsParameter; // 出力先のパラメータ\n    destinationParameterIndex: number; // 出力先のパラメータのインデックス\n    vertexIndex: number; // 振り子のインデックス\n    translationScale: CubismVector2; // 移動値のスケール\n    angleScale: number; // 角度のスケール\n    weight: number; // 重み\n    type: CubismPhysicsSource; // 出力の種類\n    reflect: boolean; // 値が反転されているかどうか\n    valueBelowMinimum: number; // 最小値を下回った時の値\n    valueExceededMaximum: number; // 最大値をこえた時の値\n    getValue: physicsValueGetter; // 物理演算の値の取得関数\n    getScale: physicsScaleGetter; // 物理演算のスケール値の取得関数\n  }\n\n  /**\n   * @brief 物理演算のデータ\n   *\n   * 物理演算のデータ。\n   */\n  export class CubismPhysicsRig {\n    constructor() {\n      this.settings = new csmVector<CubismPhysicsSubRig>();\n      this.inputs = new csmVector<CubismPhysicsInput>();\n      this.outputs = new csmVector<CubismPhysicsOutput>();\n      this.particles = new csmVector<CubismPhysicsParticle>();\n      this.gravity = new CubismVector2(0, 0);\n      this.wind = new CubismVector2(0, 0);\n    }\n\n    subRigCount: number; // 物理演算の物理点の個数\n    settings: csmVector<CubismPhysicsSubRig>; // 物理演算の物理点の管理のリスト\n    inputs: csmVector<CubismPhysicsInput>; // 物理演算の入力のリスト\n    outputs: csmVector<CubismPhysicsOutput>; // 物理演算の出力のリスト\n    particles: csmVector<CubismPhysicsParticle>; // 物理演算の物理点のリスト\n    gravity: CubismVector2; // 重力\n    wind: CubismVector2; // 風\n  }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { Live2DCubismFramework as cubismjson } from '../utils/cubismjson';\nimport { Live2DCubismFramework as cubismvector2 } from '../math/cubismvector2';\nimport { Live2DCubismFramework as cubismid } from '../id/cubismid';\nimport { Live2DCubismFramework as cubismframework } from '../live2dcubismframework';\nimport CubismFramework = cubismframework.CubismFramework;\nimport CubismIdHandle = cubismid.CubismIdHandle;\nimport CubismVector2 = cubismvector2.CubismVector2;\nimport CubismJson = cubismjson.CubismJson;\n\nexport namespace Live2DCubismFramework {\n  // JSON keys\n  const Position = 'Position';\n  const X = 'X';\n  const Y = 'Y';\n  const Angle = 'Angle';\n  const Type = 'Type';\n  const Id = 'Id';\n\n  // Meta\n  const Meta = 'Meta';\n  const EffectiveForces = 'EffectiveForces';\n  const TotalInputCount = 'TotalInputCount';\n  const TotalOutputCount = 'TotalOutputCount';\n  const PhysicsSettingCount = 'PhysicsSettingCount';\n  const Gravity = 'Gravity';\n  const Wind = 'Wind';\n  const VertexCount = 'VertexCount';\n\n  // PhysicsSettings\n  const PhysicsSettings = 'PhysicsSettings';\n  const Normalization = 'Normalization';\n  const Minimum = 'Minimum';\n  const Maximum = 'Maximum';\n  const Default = 'Default';\n  const Reflect = 'Reflect';\n  const Weight = 'Weight';\n\n  // Input\n  const Input = 'Input';\n  const Source = 'Source';\n\n  // Output\n  const Output = 'Output';\n  const Scale = 'Scale';\n  const VertexIndex = 'VertexIndex';\n  const Destination = 'Destination';\n\n  // Particle\n  const Vertices = 'Vertices';\n  const Mobility = 'Mobility';\n  const Delay = 'Delay';\n  const Radius = 'Radius';\n  const Acceleration = 'Acceleration';\n\n  /**\n   * physics3.jsonのコンテナ。\n   */\n  export class CubismPhysicsJson {\n    /**\n     * コンストラクタ\n     * @param buffer physics3.jsonが読み込まれているバッファ\n     * @param size バッファのサイズ\n     */\n    public constructor(buffer: ArrayBuffer, size: number) {\n      this._json = CubismJson.create(buffer, size);\n    }\n\n    /**\n     * デストラクタ相当の処理\n     */\n    public release(): void {\n      CubismJson.delete(this._json);\n    }\n\n    /**\n     * 重力の取得\n     * @return 重力\n     */\n    public getGravity(): CubismVector2 {\n      const ret: CubismVector2 = new CubismVector2(0, 0);\n      ret.x = this._json\n        .getRoot()\n        .getValueByString(Meta)\n        .getValueByString(EffectiveForces)\n        .getValueByString(Gravity)\n        .getValueByString(X)\n        .toFloat();\n      ret.y = this._json\n        .getRoot()\n        .getValueByString(Meta)\n        .getValueByString(EffectiveForces)\n        .getValueByString(Gravity)\n        .getValueByString(Y)\n        .toFloat();\n      return ret;\n    }\n\n    /**\n     * 風の取得\n     * @return 風\n     */\n    public getWind(): CubismVector2 {\n      const ret: CubismVector2 = new CubismVector2(0, 0);\n      ret.x = this._json\n        .getRoot()\n        .getValueByString(Meta)\n        .getValueByString(EffectiveForces)\n        .getValueByString(Wind)\n        .getValueByString(X)\n        .toFloat();\n      ret.y = this._json\n        .getRoot()\n        .getValueByString(Meta)\n        .getValueByString(EffectiveForces)\n        .getValueByString(Wind)\n        .getValueByString(Y)\n        .toFloat();\n      return ret;\n    }\n\n    /**\n     * 物理店の管理の個数の取得\n     * @return 物理店の管理の個数\n     */\n    public getSubRigCount(): number {\n      return this._json\n        .getRoot()\n        .getValueByString(Meta)\n        .getValueByString(PhysicsSettingCount)\n        .toInt();\n    }\n\n    /**\n     * 入力の総合計の取得\n     * @return 入力の総合計\n     */\n    public getTotalInputCount(): number {\n      return this._json\n        .getRoot()\n        .getValueByString(Meta)\n        .getValueByString(TotalInputCount)\n        .toInt();\n    }\n\n    /**\n     * 出力の総合計の取得\n     * @return 出力の総合計\n     */\n    public getTotalOutputCount(): number {\n      return this._json\n        .getRoot()\n        .getValueByString(Meta)\n        .getValueByString(TotalOutputCount)\n        .toInt();\n    }\n\n    /**\n     * 物理点の個数の取得\n     * @return 物理点の個数\n     */\n    public getVertexCount(): number {\n      return this._json\n        .getRoot()\n        .getValueByString(Meta)\n        .getValueByString(VertexCount)\n        .toInt();\n    }\n\n    /**\n     * 正規化された位置の最小値の取得\n     * @param physicsSettingIndex 物理演算の設定のインデックス\n     * @return 正規化された位置の最小値\n     */\n    public getNormalizationPositionMinimumValue(\n      physicsSettingIndex: number\n    ): number {\n      return this._json\n        .getRoot()\n        .getValueByString(PhysicsSettings)\n        .getValueByIndex(physicsSettingIndex)\n        .getValueByString(Normalization)\n        .getValueByString(Position)\n        .getValueByString(Minimum)\n        .toFloat();\n    }\n\n    /**\n     * 正規化された位置の最大値の取得\n     * @param physicsSettingIndex 物理演算の設定のインデックス\n     * @return 正規化された位置の最大値\n     */\n    public getNormalizationPositionMaximumValue(\n      physicsSettingIndex: number\n    ): number {\n      return this._json\n        .getRoot()\n        .getValueByString(PhysicsSettings)\n        .getValueByIndex(physicsSettingIndex)\n        .getValueByString(Normalization)\n        .getValueByString(Position)\n        .getValueByString(Maximum)\n        .toFloat();\n    }\n\n    /**\n     * 正規化された位置のデフォルト値の取得\n     * @param physicsSettingIndex 物理演算の設定のインデックス\n     * @return 正規化された位置のデフォルト値\n     */\n    public getNormalizationPositionDefaultValue(\n      physicsSettingIndex: number\n    ): number {\n      return this._json\n        .getRoot()\n        .getValueByString(PhysicsSettings)\n        .getValueByIndex(physicsSettingIndex)\n        .getValueByString(Normalization)\n        .getValueByString(Position)\n        .getValueByString(Default)\n        .toFloat();\n    }\n\n    /**\n     * 正規化された角度の最小値の取得\n     * @param physicsSettingIndex 物理演算の設定のインデックス\n     * @return 正規化された角度の最小値\n     */\n    public getNormalizationAngleMinimumValue(\n      physicsSettingIndex: number\n    ): number {\n      return this._json\n        .getRoot()\n        .getValueByString(PhysicsSettings)\n        .getValueByIndex(physicsSettingIndex)\n        .getValueByString(Normalization)\n        .getValueByString(Angle)\n        .getValueByString(Minimum)\n        .toFloat();\n    }\n\n    /**\n     * 正規化された角度の最大値の取得\n     * @param physicsSettingIndex\n     * @return 正規化された角度の最大値\n     */\n    public getNormalizationAngleMaximumValue(\n      physicsSettingIndex: number\n    ): number {\n      return this._json\n        .getRoot()\n        .getValueByString(PhysicsSettings)\n        .getValueByIndex(physicsSettingIndex)\n        .getValueByString(Normalization)\n        .getValueByString(Angle)\n        .getValueByString(Maximum)\n        .toFloat();\n    }\n\n    /**\n     * 正規化された角度のデフォルト値の取得\n     * @param physicsSettingIndex 物理演算の設定のインデックス\n     * @return 正規化された角度のデフォルト値\n     */\n    public getNormalizationAngleDefaultValue(\n      physicsSettingIndex: number\n    ): number {\n      return this._json\n        .getRoot()\n        .getValueByString(PhysicsSettings)\n        .getValueByIndex(physicsSettingIndex)\n        .getValueByString(Normalization)\n        .getValueByString(Angle)\n        .getValueByString(Default)\n        .toFloat();\n    }\n\n    /**\n     * 入力の個数の取得\n     * @param physicsSettingIndex 物理演算の設定のインデックス\n     * @return 入力の個数\n     */\n    public getInputCount(physicsSettingIndex: number): number {\n      return this._json\n        .getRoot()\n        .getValueByString(PhysicsSettings)\n        .getValueByIndex(physicsSettingIndex)\n        .getValueByString(Input)\n        .getVector()\n        .getSize();\n    }\n\n    /**\n     * 入力の重みの取得\n     * @param physicsSettingIndex 物理演算の設定のインデックス\n     * @param inputIndex 入力のインデックス\n     * @return 入力の重み\n     */\n    public getInputWeight(\n      physicsSettingIndex: number,\n      inputIndex: number\n    ): number {\n      return this._json\n        .getRoot()\n        .getValueByString(PhysicsSettings)\n        .getValueByIndex(physicsSettingIndex)\n        .getValueByString(Input)\n        .getValueByIndex(inputIndex)\n        .getValueByString(Weight)\n        .toFloat();\n    }\n\n    /**\n     * 入力の反転の取得\n     * @param physicsSettingIndex 物理演算の設定のインデックス\n     * @param inputIndex 入力のインデックス\n     * @return 入力の反転\n     */\n    public getInputReflect(\n      physicsSettingIndex: number,\n      inputIndex: number\n    ): boolean {\n      return this._json\n        .getRoot()\n        .getValueByString(PhysicsSettings)\n        .getValueByIndex(physicsSettingIndex)\n        .getValueByString(Input)\n        .getValueByIndex(inputIndex)\n        .getValueByString(Reflect)\n        .toBoolean();\n    }\n\n    /**\n     * 入力の種類の取得\n     * @param physicsSettingIndex 物理演算の設定のインデックス\n     * @param inputIndex 入力のインデックス\n     * @return 入力の種類\n     */\n    public getInputType(\n      physicsSettingIndex: number,\n      inputIndex: number\n    ): string {\n      return this._json\n        .getRoot()\n        .getValueByString(PhysicsSettings)\n        .getValueByIndex(physicsSettingIndex)\n        .getValueByString(Input)\n        .getValueByIndex(inputIndex)\n        .getValueByString(Type)\n        .getRawString();\n    }\n\n    /**\n     * 入力元のIDの取得\n     * @param physicsSettingIndex 物理演算の設定のインデックス\n     * @param inputIndex 入力のインデックス\n     * @return 入力元のID\n     */\n    public getInputSourceId(\n      physicsSettingIndex: number,\n      inputIndex: number\n    ): CubismIdHandle {\n      return CubismFramework.getIdManager().getId(\n        this._json\n          .getRoot()\n          .getValueByString(PhysicsSettings)\n          .getValueByIndex(physicsSettingIndex)\n          .getValueByString(Input)\n          .getValueByIndex(inputIndex)\n          .getValueByString(Source)\n          .getValueByString(Id)\n          .getRawString()\n      );\n    }\n\n    /**\n     * 出力の個数の取得\n     * @param physicsSettingIndex 物理演算の設定のインデックス\n     * @return 出力の個数\n     */\n    public getOutputCount(physicsSettingIndex: number): number {\n      return this._json\n        .getRoot()\n        .getValueByString(PhysicsSettings)\n        .getValueByIndex(physicsSettingIndex)\n        .getValueByString(Output)\n        .getVector()\n        .getSize();\n    }\n\n    /**\n     * 出力の物理点のインデックスの取得\n     * @param physicsSettingIndex 物理演算の設定のインデックス\n     * @param outputIndex 出力のインデックス\n     * @return 出力の物理点のインデックス\n     */\n    public getOutputVertexIndex(\n      physicsSettingIndex: number,\n      outputIndex: number\n    ): number {\n      return this._json\n        .getRoot()\n        .getValueByString(PhysicsSettings)\n        .getValueByIndex(physicsSettingIndex)\n        .getValueByString(Output)\n        .getValueByIndex(outputIndex)\n        .getValueByString(VertexIndex)\n        .toInt();\n    }\n\n    /**\n     * 出力の角度のスケールを取得する\n     * @param physicsSettingIndex 物理演算の設定のインデックス\n     * @param outputIndex 出力のインデックス\n     * @return 出力の角度のスケール\n     */\n    public getOutputAngleScale(\n      physicsSettingIndex: number,\n      outputIndex: number\n    ): number {\n      return this._json\n        .getRoot()\n        .getValueByString(PhysicsSettings)\n        .getValueByIndex(physicsSettingIndex)\n        .getValueByString(Output)\n        .getValueByIndex(outputIndex)\n        .getValueByString(Scale)\n        .toFloat();\n    }\n\n    /**\n     * 出力の重みの取得\n     * @param physicsSettingIndex 物理演算の設定のインデックス\n     * @param outputIndex 出力のインデックス\n     * @return 出力の重み\n     */\n    public getOutputWeight(\n      physicsSettingIndex: number,\n      outputIndex: number\n    ): number {\n      return this._json\n        .getRoot()\n        .getValueByString(PhysicsSettings)\n        .getValueByIndex(physicsSettingIndex)\n        .getValueByString(Output)\n        .getValueByIndex(outputIndex)\n        .getValueByString(Weight)\n        .toFloat();\n    }\n\n    /**\n     * 出力先のIDの取得\n     * @param physicsSettingIndex 物理演算の設定のインデックス\n     * @param outputIndex 出力のインデックス\n     * @return 出力先のID\n     */\n    public getOutputDestinationId(\n      physicsSettingIndex: number,\n      outputIndex: number\n    ): CubismIdHandle {\n      return CubismFramework.getIdManager().getId(\n        this._json\n          .getRoot()\n          .getValueByString(PhysicsSettings)\n          .getValueByIndex(physicsSettingIndex)\n          .getValueByString(Output)\n          .getValueByIndex(outputIndex)\n          .getValueByString(Destination)\n          .getValueByString(Id)\n          .getRawString()\n      );\n    }\n\n    /**\n     * 出力の種類の取得\n     * @param physicsSettingIndex 物理演算の設定のインデックス\n     * @param outputIndex 出力のインデックス\n     * @return 出力の種類\n     */\n    public getOutputType(\n      physicsSettingIndex: number,\n      outputIndex: number\n    ): string {\n      return this._json\n        .getRoot()\n        .getValueByString(PhysicsSettings)\n        .getValueByIndex(physicsSettingIndex)\n        .getValueByString(Output)\n        .getValueByIndex(outputIndex)\n        .getValueByString(Type)\n        .getRawString();\n    }\n\n    /**\n     * 出力の反転の取得\n     * @param physicsSettingIndex 物理演算のインデックス\n     * @param outputIndex 出力のインデックス\n     * @return 出力の反転\n     */\n    public getOutputReflect(\n      physicsSettingIndex: number,\n      outputIndex: number\n    ): boolean {\n      return this._json\n        .getRoot()\n        .getValueByString(PhysicsSettings)\n        .getValueByIndex(physicsSettingIndex)\n        .getValueByString(Output)\n        .getValueByIndex(outputIndex)\n        .getValueByString(Reflect)\n        .toBoolean();\n    }\n\n    /**\n     * 物理点の個数の取得\n     * @param physicsSettingIndex 物理演算男設定のインデックス\n     * @return 物理点の個数\n     */\n    public getParticleCount(physicsSettingIndex: number): number {\n      return this._json\n        .getRoot()\n        .getValueByString(PhysicsSettings)\n        .getValueByIndex(physicsSettingIndex)\n        .getValueByString(Vertices)\n        .getVector()\n        .getSize();\n    }\n\n    /**\n     * 物理点の動きやすさの取得\n     * @param physicsSettingIndex 物理演算の設定のインデックス\n     * @param vertexIndex 物理点のインデックス\n     * @return 物理点の動きやすさ\n     */\n    public getParticleMobility(\n      physicsSettingIndex: number,\n      vertexIndex: number\n    ): number {\n      return this._json\n        .getRoot()\n        .getValueByString(PhysicsSettings)\n        .getValueByIndex(physicsSettingIndex)\n        .getValueByString(Vertices)\n        .getValueByIndex(vertexIndex)\n        .getValueByString(Mobility)\n        .toFloat();\n    }\n\n    /**\n     * 物理点の遅れの取得\n     * @param physicsSettingIndex 物理演算の設定のインデックス\n     * @param vertexIndex 物理点のインデックス\n     * @return 物理点の遅れ\n     */\n    public getParticleDelay(\n      physicsSettingIndex: number,\n      vertexIndex: number\n    ): number {\n      return this._json\n        .getRoot()\n        .getValueByString(PhysicsSettings)\n        .getValueByIndex(physicsSettingIndex)\n        .getValueByString(Vertices)\n        .getValueByIndex(vertexIndex)\n        .getValueByString(Delay)\n        .toFloat();\n    }\n\n    /**\n     * 物理点の加速度の取得\n     * @param physicsSettingIndex 物理演算の設定\n     * @param vertexIndex 物理点のインデックス\n     * @return 物理点の加速度\n     */\n    public getParticleAcceleration(\n      physicsSettingIndex: number,\n      vertexIndex: number\n    ): number {\n      return this._json\n        .getRoot()\n        .getValueByString(PhysicsSettings)\n        .getValueByIndex(physicsSettingIndex)\n        .getValueByString(Vertices)\n        .getValueByIndex(vertexIndex)\n        .getValueByString(Acceleration)\n        .toFloat();\n    }\n\n    /**\n     * 物理点の距離の取得\n     * @param physicsSettingIndex 物理演算の設定のインデックス\n     * @param vertexIndex 物理点のインデックス\n     * @return 物理点の距離\n     */\n    public getParticleRadius(\n      physicsSettingIndex: number,\n      vertexIndex: number\n    ): number {\n      return this._json\n        .getRoot()\n        .getValueByString(PhysicsSettings)\n        .getValueByIndex(physicsSettingIndex)\n        .getValueByString(Vertices)\n        .getValueByIndex(vertexIndex)\n        .getValueByString(Radius)\n        .toInt();\n    }\n\n    /**\n     * 物理点の位置の取得\n     * @param physicsSettingIndex 物理演算の設定のインデックス\n     * @param vertexInde 物理点のインデックス\n     * @return 物理点の位置\n     */\n    public getParticlePosition(\n      physicsSettingIndex: number,\n      vertexIndex: number\n    ): CubismVector2 {\n      const ret: CubismVector2 = new CubismVector2(0, 0);\n      ret.x = this._json\n        .getRoot()\n        .getValueByString(PhysicsSettings)\n        .getValueByIndex(physicsSettingIndex)\n        .getValueByString(Vertices)\n        .getValueByIndex(vertexIndex)\n        .getValueByString(Position)\n        .getValueByString(X)\n        .toFloat();\n      ret.y = this._json\n        .getRoot()\n        .getValueByString(PhysicsSettings)\n        .getValueByIndex(physicsSettingIndex)\n        .getValueByString(Vertices)\n        .getValueByIndex(vertexIndex)\n        .getValueByString(Position)\n        .getValueByString(Y)\n        .toFloat();\n      return ret;\n    }\n\n    _json: CubismJson; // physics3.jsonデータ\n  }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { Live2DCubismFramework as cubismphysicsinternal } from './cubismphysicsinternal';\nimport { Live2DCubismFramework as cubismmodel } from '../model/cubismmodel';\nimport { Live2DCubismFramework as cubismvector2 } from '../math/cubismvector2';\nimport { Live2DCubismFramework as cubismmath } from '../math/cubismmath';\nimport { Live2DCubismFramework as cubismphysicsjson } from './cubismphysicsjson';\nimport CubismPhysicsJson = cubismphysicsjson.CubismPhysicsJson;\nimport CubismMath = cubismmath.CubismMath;\nimport CubismPhysicsRig = cubismphysicsinternal.CubismPhysicsRig;\nimport CubismPhysicsSubRig = cubismphysicsinternal.CubismPhysicsSubRig;\nimport CubismPhysicsInput = cubismphysicsinternal.CubismPhysicsInput;\nimport CubismPhysicsOutput = cubismphysicsinternal.CubismPhysicsOutput;\nimport CubismPhysicsParticle = cubismphysicsinternal.CubismPhysicsParticle;\nimport CubismPhysicsSource = cubismphysicsinternal.CubismPhysicsSource;\nimport CubismPhysicsTargetType = cubismphysicsinternal.CubismPhysicsTargetType;\nimport CubismPhysicsNormalization = cubismphysicsinternal.CubismPhysicsNormalization;\nimport CubismVector2 = cubismvector2.CubismVector2;\nimport CubismModel = cubismmodel.CubismModel;\n\nexport namespace Live2DCubismFramework {\n  // physics types tags.\n  const PhysicsTypeTagX = 'X';\n  const PhysicsTypeTagY = 'Y';\n  const PhysicsTypeTagAngle = 'Angle';\n\n  // Constant of air resistance.\n  const AirResistance = 5.0;\n\n  // Constant of maximum weight of input and output ratio.\n  const MaximumWeight = 100.0;\n\n  // Constant of threshold of movement.\n  const MovementThreshold = 0.001;\n\n  /**\n   * 物理演算クラス\n   */\n  export class CubismPhysics {\n    /**\n     * インスタンスの作成\n     * @param buffer    physics3.jsonが読み込まれているバッファ\n     * @param size      バッファのサイズ\n     * @return 作成されたインスタンス\n     */\n    public static create(buffer: ArrayBuffer, size: number): CubismPhysics {\n      const ret: CubismPhysics = new CubismPhysics();\n\n      ret.parse(buffer, size);\n      ret._physicsRig.gravity.y = 0;\n\n      return ret;\n    }\n\n    /**\n     * インスタンスを破棄する\n     * @param physics 破棄するインスタンス\n     */\n    public static delete(physics: CubismPhysics): void {\n      if (physics != null) {\n        physics.release();\n        physics = null;\n      }\n    }\n\n    /**\n     * 物理演算の評価\n     * @param model 物理演算の結果を適用するモデル\n     * @param deltaTimeSeconds デルタ時間[秒]\n     */\n    public evaluate(model: CubismModel, deltaTimeSeconds: number): void {\n      let totalAngle: { angle: number };\n      let weight: number;\n      let radAngle: number;\n      let outputValue: number;\n      const totalTranslation: CubismVector2 = new CubismVector2();\n      let currentSetting: CubismPhysicsSubRig;\n      let currentInput: CubismPhysicsInput[];\n      let currentOutput: CubismPhysicsOutput[];\n      let currentParticles: CubismPhysicsParticle[];\n\n      let parameterValue: Float32Array;\n      let parameterMaximumValue: Float32Array;\n      let parameterMinimumValue: Float32Array;\n      let parameterDefaultValue: Float32Array;\n\n      parameterValue = model.getModel().parameters.values;\n      parameterMaximumValue = model.getModel().parameters.maximumValues;\n      parameterMinimumValue = model.getModel().parameters.minimumValues;\n      parameterDefaultValue = model.getModel().parameters.defaultValues;\n\n      for (\n        let settingIndex = 0;\n        settingIndex < this._physicsRig.subRigCount;\n        ++settingIndex\n      ) {\n        totalAngle = { angle: 0.0 };\n        totalTranslation.x = 0.0;\n        totalTranslation.y = 0.0;\n        currentSetting = this._physicsRig.settings.at(settingIndex);\n        currentInput = this._physicsRig.inputs.get(\n          currentSetting.baseInputIndex\n        );\n        currentOutput = this._physicsRig.outputs.get(\n          currentSetting.baseOutputIndex\n        );\n        currentParticles = this._physicsRig.particles.get(\n          currentSetting.baseParticleIndex\n        );\n\n        // Load input parameters\n        for (let i = 0; i < currentSetting.inputCount; ++i) {\n          weight = currentInput[i].weight / MaximumWeight;\n\n          if (currentInput[i].sourceParameterIndex == -1) {\n            currentInput[i].sourceParameterIndex = model.getParameterIndex(\n              currentInput[i].source.id\n            );\n          }\n\n          currentInput[i].getNormalizedParameterValue(\n            totalTranslation,\n            totalAngle,\n            parameterValue[currentInput[i].sourceParameterIndex],\n            parameterMinimumValue[currentInput[i].sourceParameterIndex],\n            parameterMaximumValue[currentInput[i].sourceParameterIndex],\n            parameterDefaultValue[currentInput[i].sourceParameterIndex],\n            currentSetting.normalizationPosition,\n            currentSetting.normalizationAngle,\n            currentInput[0].reflect,\n            weight\n          );\n        }\n\n        radAngle = CubismMath.degreesToRadian(-totalAngle.angle);\n\n        totalTranslation.x =\n          totalTranslation.x * CubismMath.cos(radAngle) -\n          totalTranslation.y * CubismMath.sin(radAngle);\n        totalTranslation.y =\n          totalTranslation.x * CubismMath.sin(radAngle) +\n          totalTranslation.y * CubismMath.cos(radAngle);\n\n        // Calculate particles position.\n        updateParticles(\n          currentParticles,\n          currentSetting.particleCount,\n          totalTranslation,\n          totalAngle.angle,\n          this._options.wind,\n          MovementThreshold * currentSetting.normalizationPosition.maximum,\n          deltaTimeSeconds,\n          AirResistance\n        );\n\n        // Update output parameters.\n        for (let i = 0; i < currentSetting.outputCount; ++i) {\n          const particleIndex = currentOutput[i].vertexIndex;\n\n          if (\n            particleIndex < 1 ||\n            particleIndex >= currentSetting.particleCount\n          ) {\n            break;\n          }\n\n          if (currentOutput[i].destinationParameterIndex == -1) {\n            currentOutput[\n              i\n            ].destinationParameterIndex = model.getParameterIndex(\n              currentOutput[i].destination.id\n            );\n          }\n\n          const translation: CubismVector2 = new CubismVector2();\n          translation.x =\n            currentParticles[particleIndex].position.x -\n            currentParticles[particleIndex - 1].position.x;\n          translation.y =\n            currentParticles[particleIndex].position.y -\n            currentParticles[particleIndex - 1].position.y;\n\n          outputValue = currentOutput[i].getValue(\n            translation,\n            currentParticles,\n            particleIndex,\n            currentOutput[i].reflect,\n            this._options.gravity\n          );\n\n          const destinationParameterIndex: number =\n            currentOutput[i].destinationParameterIndex;\n          const outParameterValue: Float32Array =\n            !Float32Array.prototype.slice &&\n            'subarray' in Float32Array.prototype\n              ? JSON.parse(\n                  JSON.stringify(\n                    parameterValue.subarray(destinationParameterIndex)\n                  )\n                ) // 値渡しするため、JSON.parse, JSON.stringify\n              : parameterValue.slice(destinationParameterIndex);\n\n          updateOutputParameterValue(\n            outParameterValue,\n            parameterMinimumValue[destinationParameterIndex],\n            parameterMaximumValue[destinationParameterIndex],\n            outputValue,\n            currentOutput[i]\n          );\n\n          // 値を反映\n          for (\n            let offset: number = destinationParameterIndex, outParamIndex = 0;\n            offset < parameterValue.length;\n            offset++, outParamIndex++\n          ) {\n            parameterValue[offset] = outParameterValue[outParamIndex];\n          }\n        }\n      }\n    }\n\n    /**\n     * オプションの設定\n     * @param options オプション\n     */\n    public setOptions(options: Options): void {\n      this._options = options;\n    }\n\n    /**\n     * オプションの取得\n     * @return オプション\n     */\n    public getOption(): Options {\n      return this._options;\n    }\n\n    /**\n     * コンストラクタ\n     */\n    public constructor() {\n      this._physicsRig = null;\n\n      // set default options\n      this._options = new Options();\n      this._options.gravity.y = -1.0;\n      this._options.gravity.x = 0;\n      this._options.wind.x = 0;\n      this._options.wind.y = 0;\n    }\n\n    /**\n     * デストラクタ相当の処理\n     */\n    public release(): void {\n      this._physicsRig = void 0;\n      this._physicsRig = null;\n    }\n\n    /**\n     * physics3.jsonをパースする。\n     * @param physicsJson physics3.jsonが読み込まれているバッファ\n     * @param size バッファのサイズ\n     */\n    public parse(physicsJson: ArrayBuffer, size: number): void {\n      this._physicsRig = new CubismPhysicsRig();\n\n      let json: CubismPhysicsJson = new CubismPhysicsJson(physicsJson, size);\n\n      this._physicsRig.gravity = json.getGravity();\n      this._physicsRig.wind = json.getWind();\n      this._physicsRig.subRigCount = json.getSubRigCount();\n\n      this._physicsRig.settings.updateSize(\n        this._physicsRig.subRigCount,\n        CubismPhysicsSubRig,\n        true\n      );\n      this._physicsRig.inputs.updateSize(\n        json.getTotalInputCount(),\n        CubismPhysicsInput,\n        true\n      );\n      this._physicsRig.outputs.updateSize(\n        json.getTotalOutputCount(),\n        CubismPhysicsOutput,\n        true\n      );\n      this._physicsRig.particles.updateSize(\n        json.getVertexCount(),\n        CubismPhysicsParticle,\n        true\n      );\n\n      let inputIndex = 0,\n        outputIndex = 0,\n        particleIndex = 0;\n\n      for (let i = 0; i < this._physicsRig.settings.getSize(); ++i) {\n        this._physicsRig.settings.at(\n          i\n        ).normalizationPosition.minimum = json.getNormalizationPositionMinimumValue(\n          i\n        );\n        this._physicsRig.settings.at(\n          i\n        ).normalizationPosition.maximum = json.getNormalizationPositionMaximumValue(\n          i\n        );\n        this._physicsRig.settings.at(\n          i\n        ).normalizationPosition.defalut = json.getNormalizationPositionDefaultValue(\n          i\n        );\n\n        this._physicsRig.settings.at(\n          i\n        ).normalizationAngle.minimum = json.getNormalizationAngleMinimumValue(\n          i\n        );\n        this._physicsRig.settings.at(\n          i\n        ).normalizationAngle.maximum = json.getNormalizationAngleMaximumValue(\n          i\n        );\n        this._physicsRig.settings.at(\n          i\n        ).normalizationAngle.defalut = json.getNormalizationAngleDefaultValue(\n          i\n        );\n\n        // Input\n        this._physicsRig.settings.at(i).inputCount = json.getInputCount(i);\n        this._physicsRig.settings.at(i).baseInputIndex = inputIndex;\n\n        for (let j = 0; j < this._physicsRig.settings.at(i).inputCount; ++j) {\n          this._physicsRig.inputs.at(inputIndex + j).sourceParameterIndex = -1;\n          this._physicsRig.inputs.at(\n            inputIndex + j\n          ).weight = json.getInputWeight(i, j);\n          this._physicsRig.inputs.at(\n            inputIndex + j\n          ).reflect = json.getInputReflect(i, j);\n\n          if (json.getInputType(i, j) == PhysicsTypeTagX) {\n            this._physicsRig.inputs.at(inputIndex + j).type =\n              CubismPhysicsSource.CubismPhysicsSource_X;\n            this._physicsRig.inputs.at(\n              inputIndex + j\n            ).getNormalizedParameterValue = getInputTranslationXFromNormalizedParameterValue;\n          } else if (json.getInputType(i, j) == PhysicsTypeTagY) {\n            this._physicsRig.inputs.at(inputIndex + j).type =\n              CubismPhysicsSource.CubismPhysicsSource_Y;\n            this._physicsRig.inputs.at(\n              inputIndex + j\n            ).getNormalizedParameterValue = getInputTranslationYFromNormalizedParamterValue;\n          } else if (json.getInputType(i, j) == PhysicsTypeTagAngle) {\n            this._physicsRig.inputs.at(inputIndex + j).type =\n              CubismPhysicsSource.CubismPhysicsSource_Angle;\n            this._physicsRig.inputs.at(\n              inputIndex + j\n            ).getNormalizedParameterValue = getInputAngleFromNormalizedParameterValue;\n          }\n\n          this._physicsRig.inputs.at(inputIndex + j).source.targetType =\n            CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\n          this._physicsRig.inputs.at(\n            inputIndex + j\n          ).source.id = json.getInputSourceId(i, j);\n        }\n        inputIndex += this._physicsRig.settings.at(i).inputCount;\n\n        // Output\n        this._physicsRig.settings.at(i).outputCount = json.getOutputCount(i);\n        this._physicsRig.settings.at(i).baseOutputIndex = outputIndex;\n\n        for (let j = 0; j < this._physicsRig.settings.at(i).outputCount; ++j) {\n          this._physicsRig.outputs.at(\n            outputIndex + j\n          ).destinationParameterIndex = -1;\n          this._physicsRig.outputs.at(\n            outputIndex + j\n          ).vertexIndex = json.getOutputVertexIndex(i, j);\n          this._physicsRig.outputs.at(\n            outputIndex + j\n          ).angleScale = json.getOutputAngleScale(i, j);\n          this._physicsRig.outputs.at(\n            outputIndex + j\n          ).weight = json.getOutputWeight(i, j);\n          this._physicsRig.outputs.at(outputIndex + j).destination.targetType =\n            CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\n\n          this._physicsRig.outputs.at(\n            outputIndex + j\n          ).destination.id = json.getOutputDestinationId(i, j);\n\n          if (json.getOutputType(i, j) == PhysicsTypeTagX) {\n            this._physicsRig.outputs.at(outputIndex + j).type =\n              CubismPhysicsSource.CubismPhysicsSource_X;\n            this._physicsRig.outputs.at(\n              outputIndex + j\n            ).getValue = getOutputTranslationX;\n            this._physicsRig.outputs.at(\n              outputIndex + j\n            ).getScale = getOutputScaleTranslationX;\n          } else if (json.getOutputType(i, j) == PhysicsTypeTagY) {\n            this._physicsRig.outputs.at(outputIndex + j).type =\n              CubismPhysicsSource.CubismPhysicsSource_Y;\n            this._physicsRig.outputs.at(\n              outputIndex + j\n            ).getValue = getOutputTranslationY;\n            this._physicsRig.outputs.at(\n              outputIndex + j\n            ).getScale = getOutputScaleTranslationY;\n          } else if (json.getOutputType(i, j) == PhysicsTypeTagAngle) {\n            this._physicsRig.outputs.at(outputIndex + j).type =\n              CubismPhysicsSource.CubismPhysicsSource_Angle;\n            this._physicsRig.outputs.at(\n              outputIndex + j\n            ).getValue = getOutputAngle;\n            this._physicsRig.outputs.at(\n              outputIndex + j\n            ).getScale = getOutputScaleAngle;\n          }\n\n          this._physicsRig.outputs.at(\n            outputIndex + j\n          ).reflect = json.getOutputReflect(i, j);\n        }\n        outputIndex += this._physicsRig.settings.at(i).outputCount;\n\n        // Particle\n        this._physicsRig.settings.at(i).particleCount = json.getParticleCount(\n          i\n        );\n        this._physicsRig.settings.at(i).baseParticleIndex = particleIndex;\n\n        for (\n          let j = 0;\n          j < this._physicsRig.settings.at(i).particleCount;\n          ++j\n        ) {\n          this._physicsRig.particles.at(\n            particleIndex + j\n          ).mobility = json.getParticleMobility(i, j);\n          this._physicsRig.particles.at(\n            particleIndex + j\n          ).delay = json.getParticleDelay(i, j);\n          this._physicsRig.particles.at(\n            particleIndex + j\n          ).acceleration = json.getParticleAcceleration(i, j);\n          this._physicsRig.particles.at(\n            particleIndex + j\n          ).radius = json.getParticleRadius(i, j);\n          this._physicsRig.particles.at(\n            particleIndex + j\n          ).position = json.getParticlePosition(i, j);\n        }\n\n        particleIndex += this._physicsRig.settings.at(i).particleCount;\n      }\n\n      this.initialize();\n\n      json.release();\n      json = void 0;\n      json = null;\n    }\n\n    /**\n     * 初期化する\n     */\n    public initialize(): void {\n      let strand: CubismPhysicsParticle[];\n      let currentSetting: CubismPhysicsSubRig;\n      let radius: CubismVector2;\n\n      for (\n        let settingIndex = 0;\n        settingIndex < this._physicsRig.subRigCount;\n        ++settingIndex\n      ) {\n        currentSetting = this._physicsRig.settings.at(settingIndex);\n        strand = this._physicsRig.particles.get(\n          currentSetting.baseParticleIndex\n        );\n\n        // Initialize the top of particle.\n        strand[0].initialPosition = new CubismVector2(0.0, 0.0);\n        strand[0].lastPosition = new CubismVector2(\n          strand[0].initialPosition.x,\n          strand[0].initialPosition.y\n        );\n        strand[0].lastGravity = new CubismVector2(0.0, -1.0);\n        strand[0].lastGravity.y *= -1.0;\n        strand[0].velocity = new CubismVector2(0.0, 0.0);\n        strand[0].force = new CubismVector2(0.0, 0.0);\n\n        // Initialize paritcles.\n        for (let i = 1; i < currentSetting.particleCount; ++i) {\n          radius = new CubismVector2(0.0, 0.0);\n          radius.y = strand[i].radius;\n          strand[i].initialPosition = new CubismVector2(\n            strand[i - 1].initialPosition.x + radius.x,\n            strand[i - 1].initialPosition.y + radius.y\n          );\n          strand[i].position = new CubismVector2(\n            strand[i].initialPosition.x,\n            strand[i].initialPosition.y\n          );\n          strand[i].lastPosition = new CubismVector2(\n            strand[i].initialPosition.x,\n            strand[i].initialPosition.y\n          );\n          strand[i].lastGravity = new CubismVector2(0.0, -1.0);\n          strand[i].lastGravity.y *= -1.0;\n          strand[i].velocity = new CubismVector2(0.0, 0.0);\n          strand[i].force = new CubismVector2(0.0, 0.0);\n        }\n      }\n    }\n\n    _physicsRig: CubismPhysicsRig; // 物理演算のデータ\n    _options: Options; // オプション\n  }\n\n  /**\n   * 物理演算のオプション\n   */\n  export class Options {\n    constructor() {\n      this.gravity = new CubismVector2(0, 0);\n      this.wind = new CubismVector2(0, 0);\n    }\n\n    gravity: CubismVector2; // 重力方向\n    wind: CubismVector2; // 風の方向\n  }\n\n  /**\n   * Gets sign.\n   *\n   * @param value Evaluation target value.\n   *\n   * @return Sign of value.\n   */\n  function sign(value: number): number {\n    let ret = 0;\n\n    if (value > 0.0) {\n      ret = 1;\n    } else if (value < 0.0) {\n      ret = -1;\n    }\n\n    return ret;\n  }\n\n  function getInputTranslationXFromNormalizedParameterValue(\n    targetTranslation: CubismVector2,\n    targetAngle: { angle: number },\n    value: number,\n    parameterMinimumValue: number,\n    parameterMaximumValue: number,\n    parameterDefaultValue: number,\n    normalizationPosition: CubismPhysicsNormalization,\n    normalizationAngle: CubismPhysicsNormalization,\n    isInverted: boolean,\n    weight: number\n  ): void {\n    targetTranslation.x +=\n      normalizeParameterValue(\n        value,\n        parameterMinimumValue,\n        parameterMaximumValue,\n        parameterDefaultValue,\n        normalizationPosition.minimum,\n        normalizationPosition.maximum,\n        normalizationPosition.defalut,\n        isInverted\n      ) * weight;\n  }\n\n  function getInputTranslationYFromNormalizedParamterValue(\n    targetTranslation: CubismVector2,\n    targetAngle: { angle: number },\n    value: number,\n    parameterMinimumValue: number,\n    parameterMaximumValue: number,\n    parameterDefaultValue: number,\n    normalizationPosition: CubismPhysicsNormalization,\n    normalizationAngle: CubismPhysicsNormalization,\n    isInverted: boolean,\n    weight: number\n  ): void {\n    targetTranslation.y +=\n      normalizeParameterValue(\n        value,\n        parameterMinimumValue,\n        parameterMaximumValue,\n        parameterDefaultValue,\n        normalizationPosition.minimum,\n        normalizationPosition.maximum,\n        normalizationPosition.defalut,\n        isInverted\n      ) * weight;\n  }\n\n  function getInputAngleFromNormalizedParameterValue(\n    targetTranslation: CubismVector2,\n    targetAngle: { angle: number },\n    value: number,\n    parameterMinimumValue: number,\n    parameterMaximumValue: number,\n    parameterDefaultValue: number,\n    normalizaitionPosition: CubismPhysicsNormalization,\n    normalizationAngle: CubismPhysicsNormalization,\n    isInverted: boolean,\n    weight: number\n  ): void {\n    targetAngle.angle +=\n      normalizeParameterValue(\n        value,\n        parameterMinimumValue,\n        parameterMaximumValue,\n        parameterDefaultValue,\n        normalizationAngle.minimum,\n        normalizationAngle.maximum,\n        normalizationAngle.defalut,\n        isInverted\n      ) * weight;\n  }\n\n  function getOutputTranslationX(\n    translation: CubismVector2,\n    particles: CubismPhysicsParticle[],\n    particleIndex: number,\n    isInverted: boolean,\n    parentGravity: CubismVector2\n  ): number {\n    let outputValue: number = translation.x;\n\n    if (isInverted) {\n      outputValue *= -1.0;\n    }\n\n    return outputValue;\n  }\n\n  function getOutputTranslationY(\n    translation: CubismVector2,\n    particles: CubismPhysicsParticle[],\n    particleIndex: number,\n    isInverted: boolean,\n    parentGravity: CubismVector2\n  ): number {\n    let outputValue: number = translation.y;\n\n    if (isInverted) {\n      outputValue *= -1.0;\n    }\n    return outputValue;\n  }\n\n  function getOutputAngle(\n    translation: CubismVector2,\n    particles: CubismPhysicsParticle[],\n    particleIndex: number,\n    isInverted: boolean,\n    parentGravity: CubismVector2\n  ): number {\n    let outputValue: number;\n\n    if (particleIndex >= 2) {\n      parentGravity = particles[particleIndex - 1].position.substract(\n        particles[particleIndex - 2].position\n      );\n    } else {\n      parentGravity = parentGravity.multiplyByScaler(-1.0);\n    }\n\n    outputValue = CubismMath.directionToRadian(parentGravity, translation);\n\n    if (isInverted) {\n      outputValue *= -1.0;\n    }\n\n    return outputValue;\n  }\n\n  function getRangeValue(min: number, max: number): number {\n    const maxValue: number = CubismMath.max(min, max);\n    const minValue: number = CubismMath.min(min, max);\n\n    return CubismMath.abs(maxValue - minValue);\n  }\n\n  function getDefaultValue(min: number, max: number): number {\n    const minValue: number = CubismMath.min(min, max);\n    return minValue + getRangeValue(min, max) / 2.0;\n  }\n\n  function getOutputScaleTranslationX(\n    translationScale: CubismVector2,\n    angleScale: number\n  ): number {\n    return JSON.parse(JSON.stringify(translationScale.x));\n  }\n\n  function getOutputScaleTranslationY(\n    translationScale: CubismVector2,\n    angleScale: number\n  ): number {\n    return JSON.parse(JSON.stringify(translationScale.y));\n  }\n\n  function getOutputScaleAngle(\n    translationScale: CubismVector2,\n    angleScale: number\n  ): number {\n    return JSON.parse(JSON.stringify(angleScale));\n  }\n\n  /**\n   * Updates particles.\n   *\n   * @param strand                Target array of particle.\n   * @param strandCount           Count of particle.\n   * @param totalTranslation      Total translation value.\n   * @param totalAngle            Total angle.\n   * @param windDirection         Direction of Wind.\n   * @param thresholdValue        Threshold of movement.\n   * @param deltaTimeSeconds      Delta time.\n   * @param airResistance         Air resistance.\n   */\n  function updateParticles(\n    strand: CubismPhysicsParticle[],\n    strandCount: number,\n    totalTranslation: CubismVector2,\n    totalAngle: number,\n    windDirection: CubismVector2,\n    thresholdValue: number,\n    deltaTimeSeconds: number,\n    airResistance: number\n  ) {\n    let totalRadian: number;\n    let delay: number;\n    let radian: number;\n    let currentGravity: CubismVector2;\n    let direction: CubismVector2 = new CubismVector2(0.0, 0.0);\n    let velocity: CubismVector2 = new CubismVector2(0.0, 0.0);\n    let force: CubismVector2 = new CubismVector2(0.0, 0.0);\n    let newDirection: CubismVector2 = new CubismVector2(0.0, 0.0);\n\n    strand[0].position = new CubismVector2(\n      totalTranslation.x,\n      totalTranslation.y\n    );\n\n    totalRadian = CubismMath.degreesToRadian(totalAngle);\n    currentGravity = CubismMath.radianToDirection(totalRadian);\n    currentGravity.normalize();\n\n    for (let i = 1; i < strandCount; ++i) {\n      strand[i].force = currentGravity\n        .multiplyByScaler(strand[i].acceleration)\n        .add(windDirection);\n\n      strand[i].lastPosition = new CubismVector2(\n        strand[i].position.x,\n        strand[i].position.y\n      );\n\n      delay = strand[i].delay * deltaTimeSeconds * 30.0;\n\n      direction = strand[i].position.substract(strand[i - 1].position);\n\n      radian =\n        CubismMath.directionToRadian(strand[i].lastGravity, currentGravity) /\n        airResistance;\n\n      direction.x =\n        CubismMath.cos(radian) * direction.x -\n        direction.y * CubismMath.sin(radian);\n      direction.y =\n        CubismMath.sin(radian) * direction.x +\n        direction.y * CubismMath.cos(radian);\n\n      strand[i].position = strand[i - 1].position.add(direction);\n\n      velocity = strand[i].velocity.multiplyByScaler(delay);\n      force = strand[i].force.multiplyByScaler(delay).multiplyByScaler(delay);\n\n      strand[i].position = strand[i].position.add(velocity).add(force);\n\n      newDirection = strand[i].position.substract(strand[i - 1].position);\n      newDirection.normalize();\n\n      strand[i].position = strand[i - 1].position.add(\n        newDirection.multiplyByScaler(strand[i].radius)\n      );\n\n      if (CubismMath.abs(strand[i].position.x) < thresholdValue) {\n        strand[i].position.x = 0.0;\n      }\n\n      if (delay != 0.0) {\n        strand[i].velocity = strand[i].position.substract(\n          strand[i].lastPosition\n        );\n        strand[i].velocity = strand[i].velocity.divisionByScalar(delay);\n        strand[i].velocity = strand[i].velocity.multiplyByScaler(\n          strand[i].mobility\n        );\n      }\n\n      strand[i].force = new CubismVector2(0.0, 0.0);\n      strand[i].lastGravity = new CubismVector2(\n        currentGravity.x,\n        currentGravity.y\n      );\n    }\n  }\n\n  /**\n   * Updates output parameter value.\n   * @param parameterValue            Target parameter value.\n   * @param parameterValueMinimum     Minimum of parameter value.\n   * @param parameterValueMaximum     Maximum of parameter value.\n   * @param translation               Translation value.\n   */\n  function updateOutputParameterValue(\n    parameterValue: Float32Array,\n    parameterValueMinimum: number,\n    parameterValueMaximum: number,\n    translation: number,\n    output: CubismPhysicsOutput\n  ): void {\n    let outputScale: number;\n    let value: number;\n    let weight: number;\n\n    outputScale = output.getScale(output.translationScale, output.angleScale);\n\n    value = translation * outputScale;\n\n    if (value < parameterValueMinimum) {\n      if (value < output.valueBelowMinimum) {\n        output.valueBelowMinimum = value;\n      }\n\n      value = parameterValueMinimum;\n    } else if (value > parameterValueMaximum) {\n      if (value > output.valueExceededMaximum) {\n        output.valueExceededMaximum = value;\n      }\n\n      value = parameterValueMaximum;\n    }\n\n    weight = output.weight / MaximumWeight;\n\n    if (weight >= 1.0) {\n      parameterValue[0] = value;\n    } else {\n      value = parameterValue[0] * (1.0 - weight) + value * weight;\n      parameterValue[0] = value;\n    }\n  }\n\n  function normalizeParameterValue(\n    value: number,\n    parameterMinimum: number,\n    parameterMaximum: number,\n    parameterDefault: number,\n    normalizedMinimum: number,\n    normalizedMaximum: number,\n    normalizedDefault: number,\n    isInverted: boolean\n  ) {\n    let result = 0.0;\n\n    const maxValue: number = CubismMath.max(parameterMaximum, parameterMinimum);\n\n    if (maxValue < value) {\n      value = maxValue;\n    }\n\n    const minValue: number = CubismMath.min(parameterMaximum, parameterMinimum);\n\n    if (minValue > value) {\n      value = minValue;\n    }\n\n    const minNormValue: number = CubismMath.min(\n      normalizedMinimum,\n      normalizedMaximum\n    );\n    const maxNormValue: number = CubismMath.max(\n      normalizedMinimum,\n      normalizedMaximum\n    );\n    const middleNormValue: number = normalizedDefault;\n\n    const middleValue: number = getDefaultValue(minValue, maxValue);\n    const paramValue: number = value - middleValue;\n\n    switch (sign(paramValue)) {\n      case 1: {\n        const nLength: number = maxNormValue - middleNormValue;\n        const pLength: number = maxValue - middleValue;\n\n        if (pLength != 0.0) {\n          result = paramValue * (nLength / pLength);\n          result += middleNormValue;\n        }\n\n        break;\n      }\n      case -1: {\n        const nLength: number = minNormValue - middleNormValue;\n        const pLength: number = minValue - middleValue;\n\n        if (pLength != 0.0) {\n          result = paramValue * (nLength / pLength);\n          result += middleNormValue;\n        }\n\n        break;\n      }\n      case 0: {\n        result = middleNormValue;\n\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n\n    return isInverted ? result : result * -1.0;\n  }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { Live2DCubismFramework as cubismid } from '../id/cubismid';\nimport { Live2DCubismFramework as csmvector } from '../type/csmvector';\nimport { Live2DCubismFramework as cubismmodel } from '../model/cubismmodel';\nimport { Live2DCubismFramework as cubismframework } from '../live2dcubismframework';\nimport { Live2DCubismFramework as cubismjson } from '../utils/cubismjson';\nimport CubismIdHandle = cubismid.CubismIdHandle;\nimport csmVector = csmvector.csmVector;\nimport iterator = csmvector.iterator;\nimport CubismModel = cubismmodel.CubismModel;\nimport CubismFramework = cubismframework.CubismFramework;\nimport CubismJson = cubismjson.CubismJson;\nimport Value = cubismjson.Value;\n\nexport namespace Live2DCubismFramework {\n  const Epsilon = 0.001;\n  const DefaultFadeInSeconds = 0.5;\n\n  // Pose.jsonのタグ\n  const FadeIn = 'FadeInTime';\n  const Link = 'Link';\n  const Groups = 'Groups';\n  const Id = 'Id';\n\n  /**\n   * パーツの不透明度の設定\n   *\n   * パーツの不透明度の管理と設定を行う。\n   */\n  export class CubismPose {\n    /**\n     * インスタンスの作成\n     * @param pose3json pose3.jsonのデータ\n     * @param size pose3.jsonのデータのサイズ[byte]\n     * @return 作成されたインスタンス\n     */\n    public static create(pose3json: ArrayBuffer, size: number): CubismPose {\n      const ret: CubismPose = new CubismPose();\n      const json: CubismJson = CubismJson.create(pose3json, size);\n      const root: Value = json.getRoot();\n\n      // フェード時間の指定\n      if (!root.getValueByString(FadeIn).isNull()) {\n        ret._fadeTimeSeconds = root\n          .getValueByString(FadeIn)\n          .toFloat(DefaultFadeInSeconds);\n\n        if (ret._fadeTimeSeconds <= 0.0) {\n          ret._fadeTimeSeconds = DefaultFadeInSeconds;\n        }\n      }\n\n      // パーツグループ\n      const poseListInfo: Value = root.getValueByString(Groups);\n      const poseCount: number = poseListInfo.getSize();\n\n      for (let poseIndex = 0; poseIndex < poseCount; ++poseIndex) {\n        const idListInfo: Value = poseListInfo.getValueByIndex(poseIndex);\n        const idCount: number = idListInfo.getSize();\n        let groupCount = 0;\n\n        for (let groupIndex = 0; groupIndex < idCount; ++groupIndex) {\n          const partInfo: Value = idListInfo.getValueByIndex(groupIndex);\n          const partData: PartData = new PartData();\n          const parameterId: CubismIdHandle = CubismFramework.getIdManager().getId(\n            partInfo.getValueByString(Id).getRawString()\n          );\n\n          partData.partId = parameterId;\n\n          // リンクするパーツの設定\n          if (!partInfo.getValueByString(Link).isNull()) {\n            const linkListInfo: Value = partInfo.getValueByString(Link);\n            const linkCount: number = linkListInfo.getSize();\n\n            for (let linkIndex = 0; linkIndex < linkCount; ++linkIndex) {\n              const linkPart: PartData = new PartData();\n              const linkId: CubismIdHandle = CubismFramework.getIdManager().getId(\n                linkListInfo.getValueByIndex(linkIndex).getString()\n              );\n\n              linkPart.partId = linkId;\n\n              partData.link.pushBack(linkPart);\n            }\n          }\n\n          ret._partGroups.pushBack(partData.clone());\n\n          ++groupCount;\n        }\n\n        ret._partGroupCounts.pushBack(groupCount);\n      }\n\n      CubismJson.delete(json);\n\n      return ret;\n    }\n\n    /**\n     * インスタンスを破棄する\n     * @param pose 対象のCubismPose\n     */\n    public static delete(pose: CubismPose): void {\n      if (pose != null) {\n        pose = null;\n      }\n    }\n\n    /**\n     * モデルのパラメータの更新\n     * @param model 対象のモデル\n     * @param deltaTimeSeconds デルタ時間[秒]\n     */\n    public updateParameters(\n      model: CubismModel,\n      deltaTimeSeconds: number\n    ): void {\n      // 前回のモデルと同じでない場合は初期化が必要\n      if (model != this._lastModel) {\n        // パラメータインデックスの初期化\n        this.reset(model);\n      }\n\n      this._lastModel = model;\n\n      // 設定から時間を変更すると、経過時間がマイナスになる事があるので、経過時間0として対応\n      if (deltaTimeSeconds < 0.0) {\n        deltaTimeSeconds = 0.0;\n      }\n\n      let beginIndex = 0;\n\n      for (let i = 0; i < this._partGroupCounts.getSize(); i++) {\n        const partGroupCount: number = this._partGroupCounts.at(i);\n\n        this.doFade(model, deltaTimeSeconds, beginIndex, partGroupCount);\n\n        beginIndex += partGroupCount;\n      }\n\n      this.copyPartOpacities(model);\n    }\n\n    /**\n     * 表示を初期化\n     * @param model 対象のモデル\n     * @note 不透明度の初期値が0でないパラメータは、不透明度を１に設定する\n     */\n    public reset(model: CubismModel): void {\n      let beginIndex = 0;\n\n      for (let i = 0; i < this._partGroupCounts.getSize(); ++i) {\n        const groupCount: number = this._partGroupCounts.at(i);\n\n        for (let j: number = beginIndex; j < beginIndex + groupCount; ++j) {\n          this._partGroups.at(j).initialize(model);\n\n          const partsIndex: number = this._partGroups.at(j).partIndex;\n          const paramIndex: number = this._partGroups.at(j).parameterIndex;\n\n          if (partsIndex < 0) {\n            continue;\n          }\n\n          model.setPartOpacityByIndex(partsIndex, j == beginIndex ? 1.0 : 0.0);\n          model.setParameterValueByIndex(\n            paramIndex,\n            j == beginIndex ? 1.0 : 0.0\n          );\n\n          for (let k = 0; k < this._partGroups.at(j).link.getSize(); ++k) {\n            this._partGroups\n              .at(j)\n              .link.at(k)\n              .initialize(model);\n          }\n        }\n\n        beginIndex += groupCount;\n      }\n    }\n\n    /**\n     * パーツの不透明度をコピー\n     *\n     * @param model 対象のモデル\n     */\n    public copyPartOpacities(model: CubismModel): void {\n      for (\n        let groupIndex = 0;\n        groupIndex < this._partGroups.getSize();\n        ++groupIndex\n      ) {\n        const partData: PartData = this._partGroups.at(groupIndex);\n\n        if (partData.link.getSize() == 0) {\n          continue; // 連動するパラメータはない\n        }\n\n        const partIndex: number = this._partGroups.at(groupIndex).partIndex;\n        const opacity: number = model.getPartOpacityByIndex(partIndex);\n\n        for (\n          let linkIndex = 0;\n          linkIndex < partData.link.getSize();\n          ++linkIndex\n        ) {\n          const linkPart: PartData = partData.link.at(linkIndex);\n          const linkPartIndex: number = linkPart.partIndex;\n\n          if (linkPartIndex < 0) {\n            continue;\n          }\n\n          model.setPartOpacityByIndex(linkPartIndex, opacity);\n        }\n      }\n    }\n\n    /**\n     * パーツのフェード操作を行う。\n     * @param model 対象のモデル\n     * @param deltaTimeSeconds デルタ時間[秒]\n     * @param beginIndex フェード操作を行うパーツグループの先頭インデックス\n     * @param partGroupCount フェード操作を行うパーツグループの個数\n     */\n    public doFade(\n      model: CubismModel,\n      deltaTimeSeconds: number,\n      beginIndex: number,\n      partGroupCount: number\n    ): void {\n      let visiblePartIndex = -1;\n      let newOpacity = 1.0;\n\n      const phi = 0.5;\n      const backOpacityThreshold = 0.15;\n\n      // 現在、表示状態になっているパーツを取得\n      for (let i: number = beginIndex; i < beginIndex + partGroupCount; ++i) {\n        const partIndex: number = this._partGroups.at(i).partIndex;\n        const paramIndex: number = this._partGroups.at(i).parameterIndex;\n\n        if (model.getParameterValueByIndex(paramIndex) > Epsilon) {\n          if (visiblePartIndex >= 0) {\n            break;\n          }\n\n          visiblePartIndex = i;\n          newOpacity = model.getPartOpacityByIndex(partIndex);\n\n          // 新しい不透明度を計算\n          newOpacity += deltaTimeSeconds / this._fadeTimeSeconds;\n\n          if (newOpacity > 1.0) {\n            newOpacity = 1.0;\n          }\n        }\n      }\n\n      if (visiblePartIndex < 0) {\n        visiblePartIndex = 0;\n        newOpacity = 1.0;\n      }\n\n      // 表示パーツ、非表示パーツの不透明度を設定する\n      for (let i: number = beginIndex; i < beginIndex + partGroupCount; ++i) {\n        const partsIndex: number = this._partGroups.at(i).partIndex;\n\n        // 表示パーツの設定\n        if (visiblePartIndex == i) {\n          model.setPartOpacityByIndex(partsIndex, newOpacity); // 先に設定\n        }\n        // 非表示パーツの設定\n        else {\n          let opacity: number = model.getPartOpacityByIndex(partsIndex);\n          let a1: number; // 計算によって求められる不透明度\n\n          if (newOpacity < phi) {\n            a1 = (newOpacity * (phi - 1)) / phi + 1.0; // (0,1),(phi,phi)を通る直線式\n          } else {\n            a1 = ((1 - newOpacity) * phi) / (1.0 - phi); // (1,0),(phi,phi)を通る直線式\n          }\n\n          // 背景の見える割合を制限する場合\n          const backOpacity: number = (1.0 - a1) * (1.0 - newOpacity);\n\n          if (backOpacity > backOpacityThreshold) {\n            a1 = 1.0 - backOpacityThreshold / (1.0 - newOpacity);\n          }\n\n          if (opacity > a1) {\n            opacity = a1; // 計算の不透明度よりも大きければ（濃ければ）不透明度を上げる\n          }\n\n          model.setPartOpacityByIndex(partsIndex, opacity);\n        }\n      }\n    }\n\n    /**\n     * コンストラクタ\n     */\n    public constructor() {\n      this._fadeTimeSeconds = DefaultFadeInSeconds;\n      this._lastModel = null;\n      this._partGroups = new csmVector<PartData>();\n      this._partGroupCounts = new csmVector<number>();\n    }\n\n    _partGroups: csmVector<PartData>; // パーツグループ\n    _partGroupCounts: csmVector<number>; // それぞれのパーツグループの個数\n    _fadeTimeSeconds: number; // フェード時間[秒]\n    _lastModel: CubismModel; // 前回操作したモデル\n  }\n\n  /**\n   * パーツにまつわるデータを管理\n   */\n  export class PartData {\n    /**\n     * コンストラクタ\n     */\n    constructor(v?: PartData) {\n      this.parameterIndex = 0;\n      this.partIndex = 0;\n      this.link = new csmVector<PartData>();\n\n      if (v != undefined) {\n        this.partId = v.partId;\n\n        for (\n          const ite: iterator<PartData> = v.link.begin();\n          ite.notEqual(v.link.end());\n          ite.preIncrement()\n        ) {\n          this.link.pushBack(ite.ptr().clone());\n        }\n      }\n    }\n\n    /**\n     * =演算子のオーバーロード\n     */\n    public assignment(v: PartData): PartData {\n      this.partId = v.partId;\n\n      for (\n        const ite: iterator<PartData> = v.link.begin();\n        ite.notEqual(v.link.end());\n        ite.preIncrement()\n      ) {\n        this.link.pushBack(ite.ptr().clone());\n      }\n\n      return this;\n    }\n\n    /**\n     * 初期化\n     * @param model 初期化に使用するモデル\n     */\n    public initialize(model: CubismModel): void {\n      this.parameterIndex = model.getParameterIndex(this.partId);\n      this.partIndex = model.getPartIndex(this.partId);\n\n      model.setParameterValueByIndex(this.parameterIndex, 1);\n    }\n\n    /**\n     * オブジェクトのコピーを生成する\n     */\n    public clone(): PartData {\n      const clonePartData: PartData = new PartData();\n\n      clonePartData.partId = this.partId;\n      clonePartData.parameterIndex = this.parameterIndex;\n      clonePartData.partIndex = this.partIndex;\n      clonePartData.link = new csmVector<PartData>();\n\n      for (\n        let ite: iterator<PartData> = this.link.begin();\n        ite.notEqual(this.link.end());\n        ite.increment()\n      ) {\n        clonePartData.link.pushBack(ite.ptr().clone());\n      }\n\n      return clonePartData;\n    }\n\n    partId: CubismIdHandle; // パーツID\n    parameterIndex: number; // パラメータのインデックス\n    partIndex: number; // パーツのインデックス\n    link: csmVector<PartData>; // 連動するパラメータ\n  }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { Live2DCubismFramework as csmvector } from '../type/csmvector';\nimport { Live2DCubismFramework as cubismmodel } from '../model/cubismmodel';\nimport { Live2DCubismFramework as cubismid } from '../id/cubismid';\nimport CubismIdHandle = cubismid.CubismIdHandle;\nimport CubismModel = cubismmodel.CubismModel;\nimport csmVector = csmvector.csmVector;\n\nexport namespace Live2DCubismFramework {\n  /**\n   * 呼吸機能\n   *\n   * 呼吸機能を提供する。\n   */\n  export class CubismBreath {\n    /**\n     * インスタンスの作成\n     */\n    public static create(): CubismBreath {\n      return new CubismBreath();\n    }\n\n    /**\n     * インスタンスの破棄\n     * @param instance 対象のCubismBreath\n     */\n    public static delete(instance: CubismBreath): void {\n      if (instance != null) {\n        instance = null;\n      }\n    }\n\n    /**\n     * 呼吸のパラメータの紐づけ\n     * @param breathParameters 呼吸を紐づけたいパラメータのリスト\n     */\n    public setParameters(\n      breathParameters: csmVector<BreathParameterData>\n    ): void {\n      this._breathParameters = breathParameters;\n    }\n\n    /**\n     * 呼吸に紐づいているパラメータの取得\n     * @return 呼吸に紐づいているパラメータのリスト\n     */\n    public getParameters(): csmVector<BreathParameterData> {\n      return this._breathParameters;\n    }\n\n    /**\n     * モデルのパラメータの更新\n     * @param model 対象のモデル\n     * @param deltaTimeSeconds デルタ時間[秒]\n     */\n    public updateParameters(\n      model: CubismModel,\n      deltaTimeSeconds: number\n    ): void {\n      this._currentTime += deltaTimeSeconds;\n\n      const t: number = this._currentTime * 2.0 * 3.14159;\n\n      for (let i = 0; i < this._breathParameters.getSize(); ++i) {\n        const data: BreathParameterData = this._breathParameters.at(i);\n\n        model.addParameterValueById(\n          data.parameterId,\n          data.offset + data.peak * Math.sin(t / data.cycle),\n          data.weight\n        );\n      }\n    }\n\n    /**\n     * コンストラクタ\n     */\n    public constructor() {\n      this._currentTime = 0.0;\n    }\n\n    _breathParameters: csmVector<BreathParameterData>; // 呼吸にひもづいているパラメータのリスト\n    _currentTime: number; // 積算時間[秒]\n  }\n\n  /**\n   * 呼吸のパラメータ情報\n   */\n  export class BreathParameterData {\n    /**\n     * コンストラクタ\n     * @param parameterId   呼吸をひもづけるパラメータID\n     * @param offset        呼吸を正弦波としたときの、波のオフセット\n     * @param peak          呼吸を正弦波としたときの、波の高さ\n     * @param cycle         呼吸を正弦波としたときの、波の周期\n     * @param weight        パラメータへの重み\n     */\n    constructor(\n      parameterId?: CubismIdHandle,\n      offset?: number,\n      peak?: number,\n      cycle?: number,\n      weight?: number\n    ) {\n      this.parameterId = parameterId == undefined ? null : parameterId;\n      this.offset = offset == undefined ? 0.0 : offset;\n      this.peak = peak == undefined ? 0.0 : peak;\n      this.cycle = cycle == undefined ? 0.0 : cycle;\n      this.weight = weight == undefined ? 0.0 : weight;\n    }\n\n    parameterId: CubismIdHandle; // 呼吸をひもづけるパラメータID\\\n    offset: number; // 呼吸を正弦波としたときの、波のオフセット\n    peak: number; // 呼吸を正弦波としたときの、波の高さ\n    cycle: number; // 呼吸を正弦波としたときの、波の周期\n    weight: number; // パラメータへの重み\n  }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { Live2DCubismFramework as csmvector } from '../type/csmvector';\nimport { Live2DCubismFramework as icubismmodelsetting } from '../icubismmodelsetting';\nimport { Live2DCubismFramework as cubismid } from '../id/cubismid';\nimport { Live2DCubismFramework as cubismmodel } from '../model/cubismmodel';\nimport CubismModel = cubismmodel.CubismModel;\nimport CubismIdHandle = cubismid.CubismIdHandle;\nimport ICubismModelSetting = icubismmodelsetting.ICubismModelSetting;\nimport csmVector = csmvector.csmVector;\n\nexport namespace Live2DCubismFramework {\n  /**\n   * 自動まばたき機能\n   *\n   * 自動まばたき機能を提供する。\n   */\n  export class CubismEyeBlink {\n    /**\n     * インスタンスを作成する\n     * @param modelSetting モデルの設定情報\n     * @return 作成されたインスタンス\n     * @note 引数がNULLの場合、パラメータIDが設定されていない空のインスタンスを作成する。\n     */\n    public static create(\n      modelSetting: ICubismModelSetting = null\n    ): CubismEyeBlink {\n      return new CubismEyeBlink(modelSetting);\n    }\n\n    /**\n     * インスタンスの破棄\n     * @param eyeBlink 対象のCubismEyeBlink\n     */\n    public static delete(eyeBlink: CubismEyeBlink): void {\n      if (eyeBlink != null) {\n        eyeBlink = null;\n      }\n    }\n\n    /**\n     * まばたきの間隔の設定\n     * @param blinkingInterval まばたきの間隔の時間[秒]\n     */\n    public setBlinkingInterval(blinkingInterval: number): void {\n      this._blinkingIntervalSeconds = blinkingInterval;\n    }\n\n    /**\n     * まばたきのモーションの詳細設定\n     * @param closing   まぶたを閉じる動作の所要時間[秒]\n     * @param closed    まぶたを閉じている動作の所要時間[秒]\n     * @param opening   まぶたを開く動作の所要時間[秒]\n     */\n    public setBlinkingSetting(\n      closing: number,\n      closed: number,\n      opening: number\n    ): void {\n      this._closingSeconds = closing;\n      this._closedSeconds = closed;\n      this._openingSeconds = opening;\n    }\n\n    /**\n     * まばたきさせるパラメータIDのリストの設定\n     * @param parameterIds パラメータのIDのリスト\n     */\n    public setParameterIds(parameterIds: csmVector<CubismIdHandle>): void {\n      this._parameterIds = parameterIds;\n    }\n\n    /**\n     * まばたきさせるパラメータIDのリストの取得\n     * @return パラメータIDのリスト\n     */\n    public getParameterIds(): csmVector<CubismIdHandle> {\n      return this._parameterIds;\n    }\n\n    /**\n     * モデルのパラメータの更新\n     * @param model 対象のモデル\n     * @param deltaTimeSeconds デルタ時間[秒]\n     */\n    public updateParameters(\n      model: CubismModel,\n      deltaTimeSeconds: number\n    ): void {\n      this._userTimeSeconds += deltaTimeSeconds;\n      let parameterValue: number;\n      let t = 0.0;\n\n      switch (this._blinkingState) {\n        case EyeState.EyeState_Closing:\n          t =\n            (this._userTimeSeconds - this._stateStartTimeSeconds) /\n            this._closingSeconds;\n\n          if (t >= 1.0) {\n            t = 1.0;\n            this._blinkingState = EyeState.EyeState_Closed;\n            this._stateStartTimeSeconds = this._userTimeSeconds;\n          }\n\n          parameterValue = 1.0 - t;\n\n          break;\n        case EyeState.EyeState_Closed:\n          t =\n            (this._userTimeSeconds - this._stateStartTimeSeconds) /\n            this._closedSeconds;\n\n          if (t >= 1.0) {\n            this._blinkingState = EyeState.EyeState_Opening;\n            this._stateStartTimeSeconds = this._userTimeSeconds;\n          }\n\n          parameterValue = 0.0;\n\n          break;\n        case EyeState.EyeState_Opening:\n          t =\n            (this._userTimeSeconds - this._stateStartTimeSeconds) /\n            this._openingSeconds;\n\n          if (t >= 1.0) {\n            t = 1.0;\n            this._blinkingState = EyeState.EyeState_Interval;\n            this._nextBlinkingTime = this.determinNextBlinkingTiming();\n          }\n\n          parameterValue = t;\n\n          break;\n        case EyeState.EyeState_Interval:\n          if (this._nextBlinkingTime < this._userTimeSeconds) {\n            this._blinkingState = EyeState.EyeState_Closing;\n            this._stateStartTimeSeconds = this._userTimeSeconds;\n          }\n\n          parameterValue = 1.0;\n\n          break;\n        case EyeState.EyeState_First:\n        default:\n          this._blinkingState = EyeState.EyeState_Interval;\n          this._nextBlinkingTime = this.determinNextBlinkingTiming();\n\n          parameterValue = 1.0;\n          break;\n      }\n\n      if (!CubismEyeBlink.CloseIfZero) {\n        parameterValue = -parameterValue;\n      }\n\n      for (let i = 0; i < this._parameterIds.getSize(); ++i) {\n        model.setParameterValueById(this._parameterIds.at(i), parameterValue);\n      }\n    }\n\n    /**\n     * コンストラクタ\n     * @param modelSetting モデルの設定情報\n     */\n    public constructor(modelSetting: ICubismModelSetting) {\n      this._blinkingState = EyeState.EyeState_First;\n      this._nextBlinkingTime = 0.0;\n      this._stateStartTimeSeconds = 0.0;\n      this._blinkingIntervalSeconds = 4.0;\n      this._closingSeconds = 0.1;\n      this._closedSeconds = 0.05;\n      this._openingSeconds = 0.15;\n      this._userTimeSeconds = 0.0;\n      this._parameterIds = new csmVector<CubismIdHandle>();\n\n      if (modelSetting == null) {\n        return;\n      }\n\n      for (let i = 0; i < modelSetting.getEyeBlinkParameterCount(); ++i) {\n        this._parameterIds.pushBack(modelSetting.getEyeBlinkParameterId(i));\n      }\n    }\n\n    /**\n     * 次の瞬きのタイミングの決定\n     *\n     * @return 次のまばたきを行う時刻[秒]\n     */\n    public determinNextBlinkingTiming(): number {\n      const r: number = Math.random();\n      return (\n        this._userTimeSeconds + r * (2.0 * this._blinkingIntervalSeconds - 1.0)\n      );\n    }\n\n    _blinkingState: number; // 現在の状態\n    _parameterIds: csmVector<CubismIdHandle>; // 操作対象のパラメータのIDのリスト\n    _nextBlinkingTime: number; // 次のまばたきの時刻[秒]\n    _stateStartTimeSeconds: number; // 現在の状態が開始した時刻[秒]\n    _blinkingIntervalSeconds: number; // まばたきの間隔[秒]\n    _closingSeconds: number; // まぶたを閉じる動作の所要時間[秒]\n    _closedSeconds: number; // まぶたを閉じている動作の所要時間[秒]\n    _openingSeconds: number; // まぶたを開く動作の所要時間[秒]\n    _userTimeSeconds: number; // デルタ時間の積算値[秒]\n\n    /**\n     * IDで指定された目のパラメータが、0のときに閉じるなら true 、1の時に閉じるなら false 。\n     */\n    static readonly CloseIfZero: boolean = true;\n  }\n\n  /**\n   * まばたきの状態\n   *\n   * まばたきの状態を表す列挙型\n   */\n  export enum EyeState {\n    EyeState_First = 0, // 初期状態\n    EyeState_Interval, // まばたきしていない状態\n    EyeState_Closing, // まぶたが閉じていく途中の状態\n    EyeState_Closed, // まぶたが閉じている状態\n    EyeState_Opening // まぶたが開いていく途中の状態\n  }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\n/**\n * @brief パラメータIDのデフォルト値を保持する定数<br>\n *         デフォルト値の仕様は以下のマニュアルに基づく<br>\n *         https://docs.live2d.com/cubism-editor-manual/standard-parametor-list/\n */\nexport namespace Live2DCubismFramework {\n  // パーツID\n  export const HitAreaPrefix = 'HitArea';\n  export const HitAreaHead = 'Head';\n  export const HitAreaBody = 'Body';\n  export const PartsIdCore = 'Parts01Core';\n  export const PartsArmPrefix = 'Parts01Arm_';\n  export const PartsArmLPrefix = 'Parts01ArmL_';\n  export const PartsArmRPrefix = 'Parts01ArmR_';\n\n  // パラメータID\n  export const ParamAngleX = 'ParamAngleX';\n  export const ParamAngleY = 'ParamAngleY';\n  export const ParamAngleZ = 'ParamAngleZ';\n  export const ParamEyeLOpen = 'ParamEyeLOpen';\n  export const ParamEyeLSmile = 'ParamEyeLSmile';\n  export const ParamEyeROpen = 'ParamEyeROpen';\n  export const ParamEyeRSmile = 'ParamEyeRSmile';\n  export const ParamEyeBallX = 'ParamEyeBallX';\n  export const ParamEyeBallY = 'ParamEyeBallY';\n  export const ParamEyeBallForm = 'ParamEyeBallForm';\n  export const ParamBrowLY = 'ParamBrowLY';\n  export const ParamBrowRY = 'ParamBrowRY';\n  export const ParamBrowLX = 'ParamBrowLX';\n  export const ParamBrowRX = 'ParamBrowRX';\n  export const ParamBrowLAngle = 'ParamBrowLAngle';\n  export const ParamBrowRAngle = 'ParamBrowRAngle';\n  export const ParamBrowLForm = 'ParamBrowLForm';\n  export const ParamBrowRForm = 'ParamBrowRForm';\n  export const ParamMouthForm = 'ParamMouthForm';\n  export const ParamMouthOpenY = 'ParamMouthOpenY';\n  export const ParamCheek = 'ParamCheek';\n  export const ParamBodyAngleX = 'ParamBodyAngleX';\n  export const ParamBodyAngleY = 'ParamBodyAngleY';\n  export const ParamBodyAngleZ = 'ParamBodyAngleZ';\n  export const ParamBreath = 'ParamBreath';\n  export const ParamArmLA = 'ParamArmLA';\n  export const ParamArmRA = 'ParamArmRA';\n  export const ParamArmLB = 'ParamArmLB';\n  export const ParamArmRB = 'ParamArmRB';\n  export const ParamHandL = 'ParamHandL';\n  export const ParamHandR = 'ParamHandR';\n  export const ParamHairFront = 'ParamHairFront';\n  export const ParamHairSide = 'ParamHairSide';\n  export const ParamHairBack = 'ParamHairBack';\n  export const ParamHairFluffy = 'ParamHairFluffy';\n  export const ParamShoulderY = 'ParamShoulderY';\n  export const ParamBustX = 'ParamBustX';\n  export const ParamBustY = 'ParamBustY';\n  export const ParamBaseX = 'ParamBaseX';\n  export const ParamBaseY = 'ParamBaseY';\n  export const ParamNONE = 'NONE:';\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { Live2DCubismFramework as cubismjson } from '../utils/cubismjson';\nimport { Live2DCubismFramework as cubismid } from '../id/cubismid';\nimport { Live2DCubismFramework as cubismframework } from '../live2dcubismframework';\nimport CubismFramework = cubismframework.CubismFramework;\nimport CubismIdHandle = cubismid.CubismIdHandle;\nimport CubismJson = cubismjson.CubismJson;\n\nexport namespace Live2DCubismFramework {\n  const Meta = 'Meta';\n  const UserDataCount = 'UserDataCount';\n  const TotalUserDataSize = 'TotalUserDataSize';\n  const UserData = 'UserData';\n  const Target = 'Target';\n  const Id = 'Id';\n  const Value = 'Value';\n\n  export class CubismModelUserDataJson {\n    /**\n     * コンストラクタ\n     * @param buffer    userdata3.jsonが読み込まれているバッファ\n     * @param size      バッファのサイズ\n     */\n    public constructor(buffer: ArrayBuffer, size: number) {\n      this._json = CubismJson.create(buffer, size);\n    }\n\n    /**\n     * デストラクタ相当の処理\n     */\n    public release(): void {\n      CubismJson.delete(this._json);\n    }\n\n    /**\n     * ユーザーデータ個数の取得\n     * @return ユーザーデータの個数\n     */\n    public getUserDataCount(): number {\n      return this._json\n        .getRoot()\n        .getValueByString(Meta)\n        .getValueByString(UserDataCount)\n        .toInt();\n    }\n\n    /**\n     * ユーザーデータ総文字列数の取得\n     *\n     * @return ユーザーデータ総文字列数\n     */\n    public getTotalUserDataSize(): number {\n      return this._json\n        .getRoot()\n        .getValueByString(Meta)\n        .getValueByString(TotalUserDataSize)\n        .toInt();\n    }\n\n    /**\n     * ユーザーデータのタイプの取得\n     *\n     * @return ユーザーデータのタイプ\n     */\n    public getUserDataTargetType(i: number): string {\n      return this._json\n        .getRoot()\n        .getValueByString(UserData)\n        .getValueByIndex(i)\n        .getValueByString(Target)\n        .getRawString();\n    }\n\n    /**\n     * ユーザーデータのターゲットIDの取得\n     *\n     * @param i インデックス\n     * @return ユーザーデータターゲットID\n     */\n    public getUserDataId(i: number): CubismIdHandle {\n      return CubismFramework.getIdManager().getId(\n        this._json\n          .getRoot()\n          .getValueByString(UserData)\n          .getValueByIndex(i)\n          .getValueByString(Id)\n          .getRawString()\n      );\n    }\n\n    /**\n     * ユーザーデータの文字列の取得\n     *\n     * @param i インデックス\n     * @return ユーザーデータ\n     */\n    public getUserDataValue(i: number): string {\n      return this._json\n        .getRoot()\n        .getValueByString(UserData)\n        .getValueByIndex(i)\n        .getValueByString(Value)\n        .getRawString();\n    }\n\n    private _json: CubismJson;\n  }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { Live2DCubismFramework as cubismmodeluserdatajson } from './cubismmodeluserdatajson';\nimport { Live2DCubismFramework as cubismid } from '../id/cubismid';\nimport { Live2DCubismFramework as csmstring } from '../type/csmstring';\nimport { Live2DCubismFramework as csmvector } from '../type/csmvector';\nimport { Live2DCubismFramework as cubismframework } from '../live2dcubismframework';\nimport CubismFramework = cubismframework.CubismFramework;\nimport csmVector = csmvector.csmVector;\nimport csmString = csmstring.csmString;\nimport CubismIdHandle = cubismid.CubismIdHandle;\nimport CubismModelUserDataJson = cubismmodeluserdatajson.CubismModelUserDataJson;\n\nexport namespace Live2DCubismFramework {\n  const ArtMesh = 'ArtMesh';\n\n  /**\n   * ユーザーデータインターフェース\n   *\n   * Jsonから読み込んだユーザーデータを記録しておくための構造体\n   */\n  export class CubismModelUserDataNode {\n    targetType: CubismIdHandle; // ユーザーデータターゲットタイプ\n    targetId: CubismIdHandle; // ユーザーデータターゲットのID\n    value: csmString; // ユーザーデータ\n  }\n\n  /**\n   * ユーザデータの管理クラス\n   *\n   * ユーザデータをロード、管理、検索インターフェイス、解放までを行う。\n   */\n  export class CubismModelUserData {\n    /**\n     * インスタンスの作成\n     *\n     * @param buffer    userdata3.jsonが読み込まれているバッファ\n     * @param size      バッファのサイズ\n     * @return 作成されたインスタンス\n     */\n    public static create(\n      buffer: ArrayBuffer,\n      size: number\n    ): CubismModelUserData {\n      const ret: CubismModelUserData = new CubismModelUserData();\n\n      ret.parseUserData(buffer, size);\n\n      return ret;\n    }\n\n    /**\n     * インスタンスを破棄する\n     *\n     * @param modelUserData 破棄するインスタンス\n     */\n    public static delete(modelUserData: CubismModelUserData): void {\n      if (modelUserData != null) {\n        modelUserData.release();\n        modelUserData = null;\n      }\n    }\n\n    /**\n     * ArtMeshのユーザーデータのリストの取得\n     *\n     * @return ユーザーデータリスト\n     */\n    public getArtMeshUserDatas(): csmVector<CubismModelUserDataNode> {\n      return this._artMeshUserDataNode;\n    }\n\n    /**\n     * userdata3.jsonのパース\n     *\n     * @param buffer    userdata3.jsonが読み込まれているバッファ\n     * @param size      バッファのサイズ\n     */\n    public parseUserData(buffer: ArrayBuffer, size: number): void {\n      let json: CubismModelUserDataJson = new CubismModelUserDataJson(\n        buffer,\n        size\n      );\n\n      const typeOfArtMesh = CubismFramework.getIdManager().getId(ArtMesh);\n      const nodeCount: number = json.getUserDataCount();\n\n      for (let i = 0; i < nodeCount; i++) {\n        const addNode: CubismModelUserDataNode = new CubismModelUserDataNode();\n\n        addNode.targetId = json.getUserDataId(i);\n        addNode.targetType = CubismFramework.getIdManager().getId(\n          json.getUserDataTargetType(i)\n        );\n        addNode.value = new csmString(json.getUserDataValue(i));\n        this._userDataNodes.pushBack(addNode);\n\n        if (addNode.targetType == typeOfArtMesh) {\n          this._artMeshUserDataNode.pushBack(addNode);\n        }\n      }\n\n      json.release();\n      json = void 0;\n    }\n\n    /**\n     * コンストラクタ\n     */\n    public constructor() {\n      this._userDataNodes = new csmVector<CubismModelUserDataNode>();\n      this._artMeshUserDataNode = new csmVector<CubismModelUserDataNode>();\n    }\n\n    /**\n     * デストラクタ相当の処理\n     *\n     * ユーザーデータ構造体配列を解放する\n     */\n    public release(): void {\n      for (let i = 0; i < this._userDataNodes.getSize(); ++i) {\n        this._userDataNodes.set(i, null);\n      }\n\n      this._userDataNodes = null;\n    }\n\n    private _userDataNodes: csmVector<CubismModelUserDataNode>; // ユーザーデータ構造体配列\n    private _artMeshUserDataNode: csmVector<CubismModelUserDataNode>; // 閲覧リストの保持\n  }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { Live2DCubismFramework as cubismmath } from './cubismmath';\nimport CubismMath = cubismmath.CubismMath;\n\nexport namespace Live2DCubismFramework {\n  const FrameRate = 30;\n  const Epsilon = 0.01;\n\n  /**\n   * 顔の向きの制御機能\n   *\n   * 顔の向きの制御機能を提供するクラス。\n   */\n  export class CubismTargetPoint {\n    /**\n     * コンストラクタ\n     */\n    public constructor() {\n      this._faceTargetX = 0.0;\n      this._faceTargetY = 0.0;\n      this._faceX = 0.0;\n      this._faceY = 0.0;\n      this._faceVX = 0.0;\n      this._faceVY = 0.0;\n      this._lastTimeSeconds = 0.0;\n      this._userTimeSeconds = 0.0;\n    }\n\n    /**\n     * 更新処理\n     */\n    public update(deltaTimeSeconds: number): void {\n      // デルタ時間を加算する\n      this._userTimeSeconds += deltaTimeSeconds;\n\n      // 首を中央から左右に振るときの平均的な速さは 秒速度。加速・減速を考慮して、その２倍を最高速度とする\n      // 顔の振り具合を、中央（0.0）から、左右は（+-1.0）とする\n      const faceParamMaxV: number = 40.0 / 10.0; // 7.5秒間に40分移動(5.3/sc)\n      const maxV: number = (faceParamMaxV * 1.0) / FrameRate; // 1frameあたりに変化できる速度の上限\n\n      if (this._lastTimeSeconds == 0.0) {\n        this._lastTimeSeconds = this._userTimeSeconds;\n        return;\n      }\n\n      const deltaTimeWeight: number =\n        (this._userTimeSeconds - this._lastTimeSeconds) * FrameRate;\n      this._lastTimeSeconds = this._userTimeSeconds;\n\n      // 最高速度になるまでの時間を\n      const timeToMaxSpeed = 0.15;\n      const frameToMaxSpeed: number = timeToMaxSpeed * FrameRate; // sec * frame/sec\n      const maxA: number = (deltaTimeWeight * maxV) / frameToMaxSpeed; // 1frameあたりの加速度\n\n      // 目指す向きは、（dx, dy）方向のベクトルとなる\n      const dx: number = this._faceTargetX - this._faceX;\n      const dy: number = this._faceTargetY - this._faceY;\n\n      if (CubismMath.abs(dx) <= Epsilon && CubismMath.abs(dy) <= Epsilon) {\n        return; // 変化なし\n      }\n\n      // 速度の最大よりも大きい場合は、速度を落とす\n      const d: number = CubismMath.sqrt(dx * dx + dy * dy);\n\n      // 進行方向の最大速度ベクトル\n      const vx: number = (maxV * dx) / d;\n      const vy: number = (maxV * dy) / d;\n\n      // 現在の速度から、新規速度への変化（加速度）を求める\n      let ax: number = vx - this._faceVX;\n      let ay: number = vy - this._faceVY;\n\n      const a: number = CubismMath.sqrt(ax * ax + ay * ay);\n\n      // 加速のとき\n      if (a < -maxA || a > maxA) {\n        ax *= maxA / a;\n        ay *= maxA / a;\n      }\n\n      // 加速度を元の速度に足して、新速度とする\n      this._faceVX += ax;\n      this._faceVY += ay;\n\n      // 目的の方向に近づいたとき、滑らかに減速するための処理\n      // 設定された加速度で止まる事の出来る距離と速度の関係から\n      // 現在とりうる最高速度を計算し、それ以上の時は速度を落とす\n      // ※本来、人間は筋力で力（加速度）を調整できるため、より自由度が高いが、簡単な処理で済ませている\n      {\n        // 加速度、速度、距離の関係式。\n        //            2  6           2               3\n        //      sqrt(a  t  + 16 a h t  - 8 a h) - a t\n        // v = --------------------------------------\n        //                    2\n        //                 4 t  - 2\n        // (t=1)\n        // \t時刻tは、あらかじめ加速度、速度を1/60(フレームレート、単位なし)で\n        // \t考えているので、t＝１として消してよい（※未検証）\n\n        const maxV: number =\n          0.5 *\n          (CubismMath.sqrt(maxA * maxA + 16.0 * maxA * d - 8.0 * maxA * d) -\n            maxA);\n        const curV: number = CubismMath.sqrt(\n          this._faceVX * this._faceVX + this._faceVY * this._faceVY\n        );\n\n        if (curV > maxV) {\n          // 現在の速度 > 最高速度のとき、最高速度まで減速\n          this._faceVX *= maxV / curV;\n          this._faceVY *= maxV / curV;\n        }\n      }\n\n      this._faceX += this._faceVX;\n      this._faceY += this._faceVY;\n    }\n\n    /**\n     * X軸の顔の向きの値を取得\n     *\n     * @return X軸の顔の向きの値（-1.0 ~ 1.0）\n     */\n    public getX(): number {\n      return this._faceX;\n    }\n\n    /**\n     * Y軸の顔の向きの値を取得\n     *\n     * @return Y軸の顔の向きの値（-1.0 ~ 1.0）\n     */\n    public getY(): number {\n      return this._faceY;\n    }\n\n    /**\n     * 顔の向きの目標値を設定\n     *\n     * @param x X軸の顔の向きの値（-1.0 ~ 1.0）\n     * @param y Y軸の顔の向きの値（-1.0 ~ 1.0）\n     */\n    public set(x: number, y: number): void {\n      this._faceTargetX = x;\n      this._faceTargetY = y;\n    }\n\n    private _faceTargetX: number; // 顔の向きのX目標値（この値に近づいていく）\n    private _faceTargetY: number; // 顔の向きのY目標値（この値に近づいていく）\n    private _faceX: number; // 顔の向きX（-1.0 ~ 1.0）\n    private _faceY: number; // 顔の向きY（-1.0 ~ 1.0）\n    private _faceVX: number; // 顔の向きの変化速度X\n    private _faceVY: number; // 顔の向きの変化速度Y\n    private _lastTimeSeconds: number; // 最後の実行時間[秒]\n    private _userTimeSeconds: number; // デルタ時間の積算値[秒]\n  }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nexport namespace Live2DCubismFramework {\n  /**\n   * 矩形形状（座標・長さはfloat値）を定義するクラス\n   */\n  export class csmRect {\n    /**\n     * コンストラクタ\n     * @param x 左端X座標\n     * @param y 上端Y座標\n     * @param w 幅\n     * @param h 高さ\n     */\n    public constructor(x?: number, y?: number, w?: number, h?: number) {\n      this.x = x;\n      this.y = y;\n      this.width = w;\n      this.height = h;\n    }\n\n    /**\n     * 矩形中央のX座標を取得する\n     */\n    public getCenterX(): number {\n      return this.x + 0.5 * this.width;\n    }\n\n    /**\n     * 矩形中央のY座標を取得する\n     */\n    public getCenterY(): number {\n      return this.y + 0.5 * this.height;\n    }\n\n    /**\n     * 右側のX座標を取得する\n     */\n    public getRight(): number {\n      return this.x + this.width;\n    }\n\n    /**\n     * 下端のY座標を取得する\n     */\n    public getBottom(): number {\n      return this.y + this.height;\n    }\n\n    /**\n     * 矩形に値をセットする\n     * @param r 矩形のインスタンス\n     */\n    public setRect(r: csmRect): void {\n      this.x = r.x;\n      this.y = r.y;\n      this.width = r.width;\n      this.height = r.height;\n    }\n\n    /**\n     * 矩形中央を軸にして縦横を拡縮する\n     * @param w 幅方向に拡縮する量\n     * @param h 高さ方向に拡縮する量\n     */\n    public expand(w: number, h: number) {\n      this.x -= w;\n      this.y -= h;\n      this.width += w * 2.0;\n      this.height += h * 2.0;\n    }\n\n    public x: number; // 左端X座標\n    public y: number; // 上端Y座標\n    public width: number; // 幅\n    public height: number; // 高さ\n  }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\n/**\n * プラットフォーム依存機能を抽象化する Cubism Platform Abstraction Layer.\n *\n * ファイル読み込みや時刻取得等のプラットフォームに依存する関数をまとめる。\n * \n * 时间驱动\n */\nexport class Live2DTime {\n    \n    /**\n     * デルタ時間（前回フレームとの差分）を取得する\n     * @return デルタ時間[ms]\n     */\n    public static getDeltaTime(): number {\n      return this.s_deltaTime;\n    }\n  \n    public static updateTime(): void {\n      this.s_currentFrame = Date.now();\n      this.s_deltaTime = (this.s_currentFrame - this.s_lastFrame) / 1000;\n      this.s_lastFrame = this.s_currentFrame;\n    }\n  \n    static s_currentFrame = 0.0;\n    static s_lastFrame = 0.0;\n    static s_deltaTime = 0.0;\n  }\n  ","import { Live2DModel } from \"../model/Live2DModel\";\nimport { Live2DTime } from \"../core/Live2DTime\";\nimport { ISubmit } from \"laya/webgl/submit/ISubmit\";\nimport { Laya } from \"Laya\";\nimport { Pool } from \"laya/utils/Pool\";\nimport { WebGLContext } from \"laya/webgl/WebGLContext\";\n\nexport class Live2DSubmit implements ISubmit{\n    static TYPE_LIVE2D:number = 11000;\n    private _model:Live2DModel;\n    _key:any = {};\n    private saveParameter:any;\n    private static _gl:WebGLRenderingContext;\n    private static isMark:boolean = true;\n    private static _curAB:WebGLBuffer;\n    private static _curEAB:WebGLBuffer;\n    public static __init__(gl:WebGLRenderingContext){\n        Live2DSubmit._gl =gl;\n        var _originBindBuffer = gl.bindBuffer;\n        function bindBuffer (target: GLenum, buffer: WebGLBuffer | null):void{\n            if(Live2DSubmit.isMark){\n                if(target == Live2DSubmit._gl.ARRAY_BUFFER){\n                    Live2DSubmit._curAB = buffer;\n                }else if(target == Live2DSubmit._gl.ELEMENT_ARRAY_BUFFER){\n                    Live2DSubmit._curEAB = buffer;\n                }\n            }\n            _originBindBuffer.call(Live2DSubmit._gl,target,buffer);\n        }\n        gl.bindBuffer = bindBuffer;\n    }\n    constructor(){\n    }\n    public init(model){\n        this._model = model;\n        this.saveParameter = {};\n        this.saveParameter.vertexs = [];\n    }\n    renderSubmit():number{\n        Live2DTime.updateTime();\n        Live2DSubmit.isMark = false;\n        this.start()\n        this._model.update(Live2DTime.getDeltaTime());\n        this.end();\n        Live2DSubmit.isMark = true;\n        return 1;\n    }\n\n    getRenderType(): number{\n        return Live2DSubmit.TYPE_LIVE2D;\n    }\n\n    releaseRender(): void{\n        this._model = null;\n        this.saveParameter = null;\n        Pool.recover(\"Live2DSubmit_Pool\",this);\n    }\n    /**\n     * 保存会被修改的状态\n     */\n    start():void{\n        let gl:WebGLRenderingContext = (WebGLContext as any).mainContext\n        // debugger\n        this.saveParameter.BLEND = gl.getParameter(gl.BLEND);\n        this.saveParameter.CULL_FACE = gl.getParameter(gl.CULL_FACE);\n        this.saveParameter.SCISSOR_TEST = gl.getParameter(gl.SCISSOR_TEST);\n        this.saveParameter.STENCIL_TEST = gl.getParameter(gl.STENCIL_TEST);\n        this.saveParameter.DEPTH_TEST = gl.getParameter(gl.DEPTH_TEST);\n        //记录bindtexture\n        this.saveParameter.bindTexture = gl.getParameter(gl.TEXTURE_BINDING_2D);\n        //记录bindprogram\n        this.saveParameter.program = gl.getParameter(gl.CURRENT_PROGRAM);\n\n        this.saveParameter.frontFace = gl.getParameter(gl.FRONT_FACE);\n        //记录bindbuffer\n        this.saveParameter.ARRAY_BUFFER_BINDING = gl.getParameter(gl.ARRAY_BUFFER_BINDING);\n        this.saveParameter.ELEMENT_ARRAY_BUFFER_BINDING = gl.getParameter(gl.ELEMENT_ARRAY_BUFFER_BINDING);\n        //记录混合方式\n        this.saveParameter.BLEND_DST_ALPHA = gl.getParameter(gl.BLEND_DST_ALPHA);\n        this.saveParameter.BLEND_DST_RGB = gl.getParameter(gl.BLEND_DST_RGB);\n        this.saveParameter.BLEND_SRC_ALPHA = gl.getParameter(gl.BLEND_SRC_ALPHA);\n        this.saveParameter.BLEND_SRC_RGB = gl.getParameter(gl.BLEND_SRC_RGB);\n        //记录bindframebuffer\n        this.saveParameter.FRAMEBUFFER_BINDING = gl.getParameter(gl.FRAMEBUFFER_BINDING);\n        //记录vertexAttribPointer\n\n        let enable:GLboolean,data:any;\n        let vertexs = this.saveParameter.vertexs\n        vertexs.length = 0;\n        let max = gl.getParameter(gl.MAX_VERTEX_ATTRIBS)\n        for (let index = 0; index < max; index++) {\n            enable = gl.getVertexAttrib(index,gl.VERTEX_ATTRIB_ARRAY_ENABLED);\n            if(enable){\n                data = vertexs[index] = {};\n                data.index = index;\n                data.buffer = gl.getVertexAttrib(index,gl.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING);\n                data.size = gl.getVertexAttrib(index,gl.VERTEX_ATTRIB_ARRAY_SIZE);\n                data.type = gl.getVertexAttrib(index,gl.VERTEX_ATTRIB_ARRAY_TYPE);\n                data.normalized = gl.getVertexAttrib(index,gl.VERTEX_ATTRIB_ARRAY_NORMALIZED);\n                data.stride = gl.getVertexAttrib(index,gl.VERTEX_ATTRIB_ARRAY_STRIDE);\n                data.offset = gl.getVertexAttribOffset(index,gl.VERTEX_ATTRIB_ARRAY_POINTER);\n            }else\n            {\n                // console.log(`${index},is disable`);\n                break;\n            }\n        }\n    }\n    /**\n     * 还原状态\n     */\n    end():void{\n        let _webglContext:any = WebGLContext;\n        let gl:WebGLRenderingContext = _webglContext.mainContext\n        if(this.saveParameter.BLEND){\n            gl.enable(gl.BLEND);\n        }else\n            gl.disable(gl.BLEND);\n\n        if(this.saveParameter.CULL_FACE){\n            gl.enable(gl.CULL_FACE);\n        }else\n            gl.disable(gl.CULL_FACE);\n\n        if(this.saveParameter.SCISSOR_TEST){\n            gl.enable(gl.SCISSOR_TEST);\n        }\n\n        if(this.saveParameter.STENCIL_TEST)\n        {\n            gl.enable(gl.STENCIL_TEST);\n        }\n\n        if(this.saveParameter.DEPTH_TEST){\n            gl.enable(gl.DEPTH_TEST);\n        }\n        \n        if(this.saveParameter.bindTexture){\n            gl.bindTexture(gl.TEXTURE_2D,this.saveParameter.bindTexture);\n        }else{\n            gl.bindTexture(gl.TEXTURE_2D, _webglContext._activeTextures[_webglContext._activedTextureID - gl.TEXTURE0])\n        }\n        \n        gl.blendFuncSeparate(this.saveParameter.BLEND_SRC_RGB,this.saveParameter.BLEND_DST_RGB,this.saveParameter.BLEND_SRC_ALPHA,this.saveParameter.BLEND_DST_ALPHA);\n        gl.frontFace(this.saveParameter.frontFace);\n\n        // if(this.saveParameter.program){\n        //     gl.useProgram(this.saveParameter.program);\n        // }else{\n            gl.useProgram(_webglContext._useProgram);\n        // }\n\n        if(this.saveParameter.ARRAY_BUFFER_BINDING){\n            gl.bindBuffer(gl.ARRAY_BUFFER,this.saveParameter.ARRAY_BUFFER_BINDING);\n        }else{\n            gl.bindBuffer(gl.ARRAY_BUFFER,Live2DSubmit._curAB);\n        }\n        \n        let vertexs = this.saveParameter.vertexs;\n        for (let index = 0; index < vertexs.length; index++) {\n            const element = vertexs[index];\n            // gl.bindBuffer(gl.ARRAY_BUFFER,element.buffer);\n            if(element.buffer == this.saveParameter.ARRAY_BUFFER_BINDING||!this.saveParameter.ARRAY_BUFFER_BINDING){\n                gl.enableVertexAttribArray(element.index);\n                gl.vertexAttribPointer(element.index,element.size,element.type,element.normalized,element.stride,element.offset);\n            }\n        }\n        \n        if(this.saveParameter.ELEMENT_ARRAY_BUFFER_BINDING){\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,this.saveParameter.ELEMENT_ARRAY_BUFFER_BINDING);\n        }else{\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,Live2DSubmit._curEAB);\n        }\n    }\n\n    static create(model:Live2DModel):Live2DSubmit{\n        let o:Live2DSubmit = Pool.getItemByClass(\"Live2DSubmit_Pool\",Live2DSubmit);\n        o.init(model);\n        return o;\n    }\n}","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\n /**\n  * 修改记录：\n  * 1.删除了输出类的引用\n  * (2.gl改为了封装的LayaGL)已经废除方案\n  * 2.简单实现了save，restore封装在submit中\n  */\nimport { Live2DCubismFramework as cubismframework } from '../../framework/live2dcubismframework';\nimport { Live2DCubismFramework as csmrect } from '../../framework/type/csmrectf';\nimport { Live2DCubismFramework as cubismrenderer } from '../../framework/rendering/cubismrenderer';\nimport { Live2DCubismFramework as cubismmodel } from '../../framework/model/cubismmodel';\nimport { Live2DCubismFramework as cubsimmatrix44 } from '../../framework/math/cubismmatrix44';\nimport { Live2DCubismFramework as csmmap } from '../../framework/type/csmmap';\nimport { Live2DCubismFramework as csmvector } from '../../framework/type/csmvector';\nimport Constant = cubismframework.Constant;\nimport CubismMatrix44 = cubsimmatrix44.CubismMatrix44;\nimport csmRect = csmrect.csmRect;\nimport csmMap = csmmap.csmMap;\nimport csmVector = csmvector.csmVector;\nimport CubismModel = cubismmodel.CubismModel;\nimport CubismRenderer = cubismrenderer.CubismRenderer;\nimport CubismBlendMode = cubismrenderer.CubismBlendMode;\nimport CubismTextureColor = cubismrenderer.CubismTextureColor;\nimport { Live2DModel } from '../model/Live2DModel';\nimport { Live2DSubmit } from './Live2DSubmit';\nimport { Laya } from 'Laya';\nimport { Stat } from 'laya/utils/Stat';\nimport { Browser } from 'laya/utils/Browser';\n//@ts-ignore\nimport { LayaGL } from 'laya/layagl/LayaGL';\n\nexport namespace Live2DCubismFramework {\n  const ColorChannelCount = 4; // 実験時に1チャンネルの場合は1、RGBだけの場合は3、アルファも含める場合は4\n\n  const shaderCount = 10; // シェーダーの数 = マスク生成用 + (通常用 + 加算 + 乗算) * (マスク無の乗算済アルファ対応版 + マスク有の乗算済アルファ対応版 + マスク有反転の乗算済アルファ対応版)\n  let s_instance: CubismShader_Laya;\n  // let s_viewport: number[];\n  let s_fbo: WebGLFramebuffer;\n\n  /**\n   * クリッピングマスクの処理を実行するクラス\n   */\n  export class CubismClippingManager_WebGL {\n    /**\n     * カラーチャンネル（RGBA）のフラグを取得する\n     * @param channelNo カラーチャンネル（RGBA）の番号（0:R, 1:G, 2:B, 3:A）\n     */\n    public getChannelFlagAsColor(channelNo: number): CubismTextureColor {\n      return this._channelColors.at(channelNo);\n    }\n\n    /**\n     * テンポラリのレンダーテクスチャのアドレスを取得する\n     * FrameBufferObjectが存在しない場合、新しく生成する\n     *\n     * @return レンダーテクスチャのアドレス\n     */\n    public getMaskRenderTexture(): WebGLFramebuffer {\n      let ret: WebGLFramebuffer = null;\n\n      // テンポラリのRenderTextureを取得する\n      if (this._maskTexture && this._maskTexture.texture ) {\n        // 前回使ったものを返す\n        this._maskTexture.frameNo = this._currentFrameNo;\n        ret = this._maskTexture.texture;\n      }\n\n      if (!ret) {\n        // FrameBufferObjectが存在しない場合、新しく生成する\n\n        // クリッピングバッファサイズを取得\n        const size: number = this._clippingMaskBufferSize;\n\n        this._colorBuffer = this.gl.createTexture();\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this._colorBuffer);\n        this.gl.texImage2D(\n          this.gl.TEXTURE_2D,\n          0,\n          this.gl.RGBA,\n          size,\n          size,\n          0,\n          this.gl.RGBA,\n          this.gl.UNSIGNED_BYTE,\n          null\n        );\n        this.gl.texParameteri(\n          this.gl.TEXTURE_2D,\n          this.gl.TEXTURE_WRAP_S,\n          this.gl.CLAMP_TO_EDGE\n        );\n        this.gl.texParameteri(\n          this.gl.TEXTURE_2D,\n          this.gl.TEXTURE_WRAP_T,\n          this.gl.CLAMP_TO_EDGE\n        );\n        this.gl.texParameteri(\n          this.gl.TEXTURE_2D,\n          this.gl.TEXTURE_MIN_FILTER,\n          this.gl.LINEAR\n        );\n        this.gl.texParameteri(\n          this.gl.TEXTURE_2D,\n          this.gl.TEXTURE_MAG_FILTER,\n          this.gl.LINEAR\n        );\n        this.gl.bindTexture(this.gl.TEXTURE_2D, null);\n\n        ret = this.gl.createFramebuffer();\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, ret);\n        this.gl.framebufferTexture2D(\n          this.gl.FRAMEBUFFER,\n          this.gl.COLOR_ATTACHMENT0,\n          this.gl.TEXTURE_2D,\n          this._colorBuffer,\n          0\n        );\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\n\n        this._maskTexture = new CubismRenderTextureResource(\n          this._currentFrameNo,\n          ret\n        );\n      }\n\n      return ret;\n    }\n\n    /**\n     * WebGLレンダリングコンテキストを設定する\n     * @param gl WebGLレンダリングコンテキスト\n     */\n    // public setGL(gl: WebGLRenderingContext): void {\n    //   this.gl = gl;\n    // }\n\n    /**\n     * マスクされる描画オブジェクト群全体を囲む矩形（モデル座標系）を計算する\n     * @param model モデルのインスタンス\n     * @param clippingContext クリッピングマスクのコンテキスト\n     */\n    public calcClippedDrawTotalBounds(\n      model: CubismModel,\n      clippingContext: CubismClippingContext\n    ): void {\n      // 被クリッピングマスク（マスクされる描画オブジェクト）の全体の矩形\n      let clippedDrawTotalMinX: number = Number.MAX_VALUE;\n      let clippedDrawTotalMinY: number = Number.MAX_VALUE;\n      let clippedDrawTotalMaxX: number = Number.MIN_VALUE;\n      let clippedDrawTotalMaxY: number = Number.MIN_VALUE;\n\n      // このマスクが実際に必要か判定する\n      // このクリッピングを利用する「描画オブジェクト」がひとつでも使用可能であればマスクを生成する必要がある\n      const clippedDrawCount: number =\n        clippingContext._clippedDrawableIndexList.length;\n\n      for (\n        let clippedDrawableIndex = 0;\n        clippedDrawableIndex < clippedDrawCount;\n        clippedDrawableIndex++\n      ) {\n        // マスクを使用する描画オブジェクトの描画される矩形を求める\n        const drawableIndex: number =\n          clippingContext._clippedDrawableIndexList[clippedDrawableIndex];\n\n        const drawableVertexCount: number = model.getDrawableVertexCount(\n          drawableIndex\n        );\n        const drawableVertexes: Float32Array = model.getDrawableVertices(\n          drawableIndex\n        );\n\n        let minX: number = Number.MAX_VALUE;\n        let minY: number = Number.MAX_VALUE;\n        let maxX: number = Number.MIN_VALUE;\n        let maxY: number = Number.MIN_VALUE;\n\n        const loop: number = drawableVertexCount * Constant.vertexStep;\n        for (\n          let pi: number = Constant.vertexOffset;\n          pi < loop;\n          pi += Constant.vertexStep\n        ) {\n          const x: number = drawableVertexes[pi];\n          const y: number = drawableVertexes[pi + 1];\n\n          if (x < minX) {\n            minX = x;\n          }\n          if (x > maxX) {\n            maxX = x;\n          }\n          if (y < minY) {\n            minY = y;\n          }\n          if (y > maxY) {\n            maxY = y;\n          }\n        }\n\n        // 有効な点が一つも取れなかったのでスキップ\n        if (minX == Number.MAX_VALUE) {\n          continue;\n        }\n\n        // 全体の矩形に反映\n        if (minX < clippedDrawTotalMinX) {\n          clippedDrawTotalMinX = minX;\n        }\n        if (minY < clippedDrawTotalMinY) {\n          clippedDrawTotalMinY = minY;\n        }\n        if (maxX > clippedDrawTotalMaxX) {\n          clippedDrawTotalMaxX = maxX;\n        }\n        if (maxY > clippedDrawTotalMaxY) {\n          clippedDrawTotalMaxY = maxY;\n        }\n\n        if (clippedDrawTotalMinX == Number.MAX_VALUE) {\n          clippingContext._allClippedDrawRect.x = 0.0;\n          clippingContext._allClippedDrawRect.y = 0.0;\n          clippingContext._allClippedDrawRect.width = 0.0;\n          clippingContext._allClippedDrawRect.height = 0.0;\n          clippingContext._isUsing = false;\n        } else {\n          clippingContext._isUsing = true;\n          const w: number = clippedDrawTotalMaxX - clippedDrawTotalMinX;\n          const h: number = clippedDrawTotalMaxY - clippedDrawTotalMinY;\n          clippingContext._allClippedDrawRect.x = clippedDrawTotalMinX;\n          clippingContext._allClippedDrawRect.y = clippedDrawTotalMinY;\n          clippingContext._allClippedDrawRect.width = w;\n          clippingContext._allClippedDrawRect.height = h;\n        }\n      }\n    }\n\n    /**\n     * コンストラクタ\n     */\n    public constructor() {\n      this._maskRenderTexture = null;\n      this._colorBuffer = null;\n      this._currentFrameNo = 0;\n      this._clippingMaskBufferSize = 256;\n      this._clippingContextListForMask = new csmVector<CubismClippingContext>();\n      this._clippingContextListForDraw = new csmVector<CubismClippingContext>();\n      this._channelColors = new csmVector<CubismTextureColor>();\n      this._tmpBoundsOnModel = new csmRect();\n      this._tmpMatrix = new CubismMatrix44();\n      this._tmpMatrixForMask = new CubismMatrix44();\n      this._tmpMatrixForDraw = new CubismMatrix44();\n      this._maskTexture = null;\n\n      let tmp: CubismTextureColor = new CubismTextureColor();\n      tmp.R = 1.0;\n      tmp.G = 0.0;\n      tmp.B = 0.0;\n      tmp.A = 0.0;\n      this._channelColors.pushBack(tmp);\n\n      tmp = new CubismTextureColor();\n      tmp.R = 0.0;\n      tmp.G = 1.0;\n      tmp.B = 0.0;\n      tmp.A = 0.0;\n      this._channelColors.pushBack(tmp);\n\n      tmp = new CubismTextureColor();\n      tmp.R = 0.0;\n      tmp.G = 0.0;\n      tmp.B = 1.0;\n      tmp.A = 0.0;\n      this._channelColors.pushBack(tmp);\n\n      tmp = new CubismTextureColor();\n      tmp.R = 0.0;\n      tmp.G = 0.0;\n      tmp.B = 0.0;\n      tmp.A = 1.0;\n      this._channelColors.pushBack(tmp);\n    }\n\n    /**\n     * デストラクタ相当の処理\n     */\n    public release(): void {\n      for (let i = 0; i < this._clippingContextListForMask.getSize(); i++) {\n        if (this._clippingContextListForMask.at(i)) {\n          this._clippingContextListForMask.at(i).release();\n          this._clippingContextListForMask.set(i, void 0);\n        }\n        this._clippingContextListForMask.set(i, null);\n      }\n      this._clippingContextListForMask = null;\n\n      // _clippingContextListForDrawは_clippingContextListForMaskにあるインスタンスを指している。上記の処理により要素ごとのDELETEは不要。\n      for (let i = 0; i < this._clippingContextListForDraw.getSize(); i++) {\n        this._clippingContextListForDraw.set(i, null);\n      }\n      this._clippingContextListForDraw = null;\n\n      if (this._maskTexture) {\n        this.gl.deleteFramebuffer(this._maskTexture.texture);\n        this._maskTexture = null;\n      }\n\n      for (let i = 0; i < this._channelColors.getSize(); i++) {\n        this._channelColors.set(i, null);\n      }\n\n      this._channelColors = null;\n\n      // テクスチャ解放\n      this.gl.deleteTexture(this._colorBuffer);\n      this._colorBuffer = null;\n    }\n\n    /**\n     * マネージャの初期化処理\n     * クリッピングマスクを使う描画オブジェクトの登録を行う\n     * @param model モデルのインスタンス\n     * @param drawableCount 描画オブジェクトの数\n     * @param drawableMasks 描画オブジェクトをマスクする描画オブジェクトのインデックスのリスト\n     * @param drawableCounts 描画オブジェクトをマスクする描画オブジェクトの数\n     */\n    public initialize(\n      model: CubismModel,\n      drawableCount: number,\n      drawableMasks: Int32Array[],\n      drawableMaskCounts: Int32Array\n    ): void {\n      // クリッピングマスクを使う描画オブジェクトをすべて登録する\n      // クリッピングマスクは、通常数個程度に限定して使うものとする\n      for (let i = 0; i < drawableCount; i++) {\n        if (drawableMaskCounts[i] <= 0) {\n          // クリッピングマスクが使用されていないアートメッシュ（多くの場合使用しない）\n          this._clippingContextListForDraw.pushBack(null);\n          continue;\n        }\n\n        // 既にあるClipContextと同じかチェックする\n        let clippingContext: CubismClippingContext = this.findSameClip(\n          drawableMasks[i],\n          drawableMaskCounts[i]\n        );\n        if (clippingContext == null) {\n          // 同一のマスクが存在していない場合は生成する\n          clippingContext = new CubismClippingContext(\n            this,\n            drawableMasks[i],\n            drawableMaskCounts[i]\n          );\n          this._clippingContextListForMask.pushBack(clippingContext);\n        }\n\n        clippingContext.addClippedDrawable(i);\n\n        this._clippingContextListForDraw.pushBack(clippingContext);\n      }\n    }\n\n    /**\n     * クリッピングコンテキストを作成する。モデル描画時に実行する。\n     * @param model モデルのインスタンス\n     * @param renderer レンダラのインスタンス\n     */\n    public setupClippingContext(\n      model: CubismModel,\n      renderer: CubismRenderer_WebGL\n    ): void {\n      this._currentFrameNo++;\n\n      // 全てのクリッピングを用意する\n      // 同じクリップ（複数の場合はまとめて一つのクリップ）を使う場合は1度だけ設定する\n      let usingClipCount = 0;\n      for (\n        let clipIndex = 0;\n        clipIndex < this._clippingContextListForMask.getSize();\n        clipIndex++\n      ) {\n        // 1つのクリッピングマスクに関して\n        const cc: CubismClippingContext = this._clippingContextListForMask.at(\n          clipIndex\n        );\n\n        // このクリップを利用する描画オブジェクト群全体を囲む矩形を計算\n        this.calcClippedDrawTotalBounds(model, cc);\n\n        if (cc._isUsing) {\n          usingClipCount++; // 使用中としてカウント\n        }\n      }\n\n      // マスク作成処理\n      if (usingClipCount > 0) {\n        // 生成したFrameBufferと同じサイズでビューポートを設定\n        this.gl.viewport(\n          0,\n          0,\n          this._clippingMaskBufferSize,\n          this._clippingMaskBufferSize\n        );\n\n        // マスクをactiveにする\n        this._maskRenderTexture = this.getMaskRenderTexture();\n\n        // モデル描画時にDrawMeshNowに渡される変換(モデルtoワールド座標変換)\n        const modelToWorldF: CubismMatrix44 = renderer.getMvpMatrix();\n\n        renderer.preDraw(); // バッファをクリアする\n\n        // 各マスクのレイアウトを決定していく\n        this.setupLayoutBounds(usingClipCount);\n\n        // ---------- マスク描画処理 ----------\n        // マスク用RenderTextureをactiveにセット\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this._maskRenderTexture);\n\n        // マスクをクリアする\n        // (仮仕様) 1が無効（描かれない）領域、0が有効（描かれる）領域。（シェーダーCd*Csで0に近い値をかけてマスクを作る。1をかけると何も起こらない）\n        this.gl.clearColor(1.0, 1.0, 1.0, 1.0);\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n\n        // 実際にマスクを生成する\n        // 全てのマスクをどのようにレイアウトして描くかを決定し、ClipContext, ClippedDrawContextに記憶する\n        for (\n          let clipIndex = 0;\n          clipIndex < this._clippingContextListForMask.getSize();\n          clipIndex++\n        ) {\n          // --- 実際に1つのマスクを描く ---\n          const clipContext: CubismClippingContext = this._clippingContextListForMask.at(\n            clipIndex\n          );\n          const allClipedDrawRect: csmRect = clipContext._allClippedDrawRect; // このマスクを使う、すべての描画オブジェクトの論理座標上の囲み矩形\n          const layoutBoundsOnTex01: csmRect = clipContext._layoutBounds; // この中にマスクを収める\n\n          // モデル座標上の矩形を、適宜マージンを付けて使う\n          const MARGIN = 0.05;\n          this._tmpBoundsOnModel.setRect(allClipedDrawRect);\n          this._tmpBoundsOnModel.expand(\n            allClipedDrawRect.width * MARGIN,\n            allClipedDrawRect.height * MARGIN\n          );\n          //########## 本来は割り当てられた領域の全体を使わず必要最低限のサイズがよい\n\n          // シェーダ用の計算式を求める。回転を考慮しない場合は以下のとおり\n          // movePeriod' = movePeriod * scaleX + offX\t\t  [[ movePeriod' = (movePeriod - tmpBoundsOnModel.movePeriod)*scale + layoutBoundsOnTex01.movePeriod ]]\n          const scaleX: number =\n            layoutBoundsOnTex01.width / this._tmpBoundsOnModel.width;\n          const scaleY: number =\n            layoutBoundsOnTex01.height / this._tmpBoundsOnModel.height;\n\n          // マスク生成時に使う行列を求める\n          {\n            // シェーダに渡す行列を求める <<<<<<<<<<<<<<<<<<<<<<<< 要最適化（逆順に計算すればシンプルにできる）\n            this._tmpMatrix.loadIdentity();\n            {\n              // layout0..1 を -1..1に変換\n              this._tmpMatrix.translateRelative(-1.0, -1.0);\n              this._tmpMatrix.scaleRelative(2.0, 2.0);\n            }\n            {\n              // view to layout0..1\n              this._tmpMatrix.translateRelative(\n                layoutBoundsOnTex01.x,\n                layoutBoundsOnTex01.y\n              );\n              this._tmpMatrix.scaleRelative(scaleX, scaleY); // new = [translate][scale]\n              this._tmpMatrix.translateRelative(\n                -this._tmpBoundsOnModel.x,\n                -this._tmpBoundsOnModel.y\n              );\n              // new = [translate][scale][translate]\n            }\n            // tmpMatrixForMaskが計算結果\n            this._tmpMatrixForMask.setMatrix(this._tmpMatrix.getArray());\n          }\n\n          //--------- draw時の mask 参照用行列を計算\n          {\n            // シェーダに渡す行列を求める <<<<<<<<<<<<<<<<<<<<<<<< 要最適化（逆順に計算すればシンプルにできる）\n            this._tmpMatrix.loadIdentity();\n            {\n              this._tmpMatrix.translateRelative(\n                layoutBoundsOnTex01.x,\n                layoutBoundsOnTex01.y\n              );\n              this._tmpMatrix.scaleRelative(scaleX, scaleY); // new = [translate][scale]\n              this._tmpMatrix.translateRelative(\n                -this._tmpBoundsOnModel.x,\n                -this._tmpBoundsOnModel.y\n              );\n              // new = [translate][scale][translate]\n            }\n            this._tmpMatrixForDraw.setMatrix(this._tmpMatrix.getArray());\n          }\n          clipContext._matrixForMask.setMatrix(\n            this._tmpMatrixForMask.getArray()\n          );\n          clipContext._matrixForDraw.setMatrix(\n            this._tmpMatrixForDraw.getArray()\n          );\n\n          const clipDrawCount: number = clipContext._clippingIdCount;\n          for (let i = 0; i < clipDrawCount; i++) {\n            const clipDrawIndex: number = clipContext._clippingIdList[i];\n\n            // 頂点情報が更新されておらず、信頼性がない場合は描画をパスする\n            if (\n              !model.getDrawableDynamicFlagVertexPositionsDidChange(\n                clipDrawIndex\n              )\n            ) {\n              continue;\n            }\n\n            renderer.setIsCulling(\n              model.getDrawableCulling(clipDrawIndex) != false\n            );\n\n            // 今回専用の変換を適用して描く\n            // チャンネルも切り替える必要がある(A,R,G,B)\n            renderer.setClippingContextBufferForMask(clipContext);\n            renderer.drawMesh(\n              model.getDrawableTextureIndices(clipDrawIndex),\n              model.getDrawableVertexIndexCount(clipDrawIndex),\n              model.getDrawableVertexCount(clipDrawIndex),\n              model.getDrawableVertexIndices(clipDrawIndex),\n              model.getDrawableVertices(clipDrawIndex),\n              model.getDrawableVertexUvs(clipDrawIndex),\n              model.getDrawableOpacity(clipDrawIndex),\n              CubismBlendMode.CubismBlendMode_Normal, // クリッピングは通常描画を強制\n              false // マスク生成時はクリッピングの反転使用は全く関係がない\n            );\n          }\n        }\n\n        // --- 後処理 ---\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo); // 描画対象を戻す\n        renderer.setClippingContextBufferForMask(null);\n\n        this.gl.viewport(\n          0,0,Browser.mainCanvas.width,Browser.mainCanvas.height\n        );\n      }\n    }\n\n    /**\n     * 既にマスクを作っているかを確認\n     * 作っている様であれば該当するクリッピングマスクのインスタンスを返す\n     * 作っていなければNULLを返す\n     * @param drawableMasks 描画オブジェクトをマスクする描画オブジェクトのリスト\n     * @param drawableMaskCounts 描画オブジェクトをマスクする描画オブジェクトの数\n     * @return 該当するクリッピングマスクが存在すればインスタンスを返し、なければNULLを返す\n     */\n    public findSameClip(\n      drawableMasks: Int32Array,\n      drawableMaskCounts: number\n    ): CubismClippingContext {\n      // 作成済みClippingContextと一致するか確認\n      for (let i = 0; i < this._clippingContextListForMask.getSize(); i++) {\n        const clippingContext: CubismClippingContext = this._clippingContextListForMask.at(\n          i\n        );\n        const count: number = clippingContext._clippingIdCount;\n\n        // 個数が違う場合は別物\n        if (count != drawableMaskCounts) {\n          continue;\n        }\n\n        let sameCount = 0;\n\n        // 同じIDを持つか確認。配列の数が同じなので、一致した個数が同じなら同じ物を持つとする\n        for (let j = 0; j < count; j++) {\n          const clipId: number = clippingContext._clippingIdList[j];\n\n          for (let k = 0; k < count; k++) {\n            if (drawableMasks[k] == clipId) {\n              sameCount++;\n              break;\n            }\n          }\n        }\n\n        if (sameCount == count) {\n          return clippingContext;\n        }\n      }\n\n      return null; // 見つからなかった\n    }\n\n    /**\n     * クリッピングコンテキストを配置するレイアウト\n     * 一つのレンダーテクスチャを極力いっぱいに使ってマスクをレイアウトする\n     * マスクグループの数が4以下ならRGBA各チャンネルに一つずつマスクを配置し、5以上6以下ならRGBAを2,2,1,1と配置する。\n     *\n     * @param usingClipCount 配置するクリッピングコンテキストの数\n     */\n    public setupLayoutBounds(usingClipCount: number): void {\n      // ひとつのRenderTextureを極力いっぱいに使ってマスクをレイアウトする\n      // マスクグループの数が4以下ならRGBA各チャンネルに1つずつマスクを配置し、5以上6以下ならRGBAを2,2,1,1と配置する\n\n      // RGBAを順番に使っていく\n      let div: number = usingClipCount / ColorChannelCount; // 1チャンネルに配置する基本のマスク\n      let mod: number = usingClipCount % ColorChannelCount; // 余り、この番号のチャンネルまでに一つずつ配分する\n\n      // 小数点は切り捨てる\n      div = ~~div;\n      mod = ~~mod;\n\n      // RGBAそれぞれのチャンネルを用意していく（0:R, 1:G, 2:B, 3:A）\n      let curClipIndex = 0; // 順番に設定していく\n\n      for (let channelNo = 0; channelNo < ColorChannelCount; channelNo++) {\n        // このチャンネルにレイアウトする数\n        const layoutCount: number = div + (channelNo < mod ? 1 : 0);\n\n        // 分割方法を決定する\n        if (layoutCount == 0) {\n          // 何もしない\n        } else if (layoutCount == 1) {\n          // 全てをそのまま使う\n          const clipContext: CubismClippingContext = this._clippingContextListForMask.at(\n            curClipIndex++\n          );\n          clipContext._layoutChannelNo = channelNo;\n          clipContext._layoutBounds.x = 0.0;\n          clipContext._layoutBounds.y = 0.0;\n          clipContext._layoutBounds.width = 1.0;\n          clipContext._layoutBounds.height = 1.0;\n        } else if (layoutCount == 2) {\n          for (let i = 0; i < layoutCount; i++) {\n            let xpos: number = i % 2;\n\n            // 小数点は切り捨てる\n            xpos = ~~xpos;\n\n            const cc: CubismClippingContext = this._clippingContextListForMask.at(\n              curClipIndex++\n            );\n            cc._layoutChannelNo = channelNo;\n\n            cc._layoutBounds.x = xpos * 0.5;\n            cc._layoutBounds.y = 0.0;\n            cc._layoutBounds.width = 0.5;\n            cc._layoutBounds.height = 1.0;\n            // UVを2つに分解して使う\n          }\n        } else if (layoutCount <= 4) {\n          // 4分割して使う\n          for (let i = 0; i < layoutCount; i++) {\n            let xpos: number = i % 2;\n            let ypos: number = i / 2;\n\n            // 小数点は切り捨てる\n            xpos = ~~xpos;\n            ypos = ~~ypos;\n\n            const cc = this._clippingContextListForMask.at(curClipIndex++);\n            cc._layoutChannelNo = channelNo;\n\n            cc._layoutBounds.x = xpos * 0.5;\n            cc._layoutBounds.y = ypos * 0.5;\n            cc._layoutBounds.width = 0.5;\n            cc._layoutBounds.height = 0.5;\n          }\n        } else if (layoutCount <= 9) {\n          // 9分割して使う\n          for (let i = 0; i < layoutCount; i++) {\n            let xpos = i % 3;\n            let ypos = i / 3;\n\n            // 小数点は切り捨てる\n            xpos = ~~xpos;\n            ypos = ~~ypos;\n\n            const cc: CubismClippingContext = this._clippingContextListForMask.at(\n              curClipIndex++\n            );\n            cc._layoutChannelNo = channelNo;\n\n            cc._layoutBounds.x = xpos / 3.0;\n            cc._layoutBounds.y = ypos / 3.0;\n            cc._layoutBounds.width = 1.0 / 3.0;\n            cc._layoutBounds.height = 1.0 / 3.0;\n          }\n        } else {\n          console.error('not supported mask count : {0}', layoutCount);\n        }\n      }\n    }\n\n    /**\n     * カラーバッファを取得する\n     * @return カラーバッファ\n     */\n    public getColorBuffer(): WebGLTexture {\n      return this._colorBuffer;\n    }\n\n    /**\n     * 画面描画に使用するクリッピングマスクのリストを取得する\n     * @return 画面描画に使用するクリッピングマスクのリスト\n     */\n    public getClippingContextListForDraw(): csmVector<CubismClippingContext> {\n      return this._clippingContextListForDraw;\n    }\n\n    /**\n     * クリッピングマスクバッファのサイズを設定する\n     * @param size クリッピングマスクバッファのサイズ\n     */\n    public setClippingMaskBufferSize(size: number): void {\n      this._clippingMaskBufferSize = size;\n    }\n\n    /**\n     * クリッピングマスクバッファのサイズを取得する\n     * @return クリッピングマスクバッファのサイズ\n     */\n    public getClippingMaskBufferSize(): number {\n      return this._clippingMaskBufferSize;\n    }\n\n    public _maskRenderTexture: WebGLFramebuffer; // マスク用レンダーテクスチャのアドレス\n    public _colorBuffer: WebGLTexture; // マスク用カラーバッファーのアドレス\n    public _currentFrameNo: number; // マスクテクスチャに与えるフレーム番号\n\n    public _channelColors: csmVector<CubismTextureColor>;\n    public _maskTexture: CubismRenderTextureResource; // マスク用のテクスチャリソースのリスト\n    public _clippingContextListForMask: csmVector<CubismClippingContext>; // マスク用クリッピングコンテキストのリスト\n    public _clippingContextListForDraw: csmVector<CubismClippingContext>; // 描画用クリッピングコンテキストのリスト\n    public _clippingMaskBufferSize: number; // クリッピングマスクのバッファサイズ（初期値:256）\n\n    private _tmpMatrix: CubismMatrix44; // マスク計算用の行列\n    private _tmpMatrixForMask: CubismMatrix44; // マスク計算用の行列\n    private _tmpMatrixForDraw: CubismMatrix44; // マスク計算用の行列\n    private _tmpBoundsOnModel: csmRect; // マスク配置計算用の矩形\n\n    // 封装的gl\n    public get gl(): WebGLRenderingContext{\n        return CubismShader_Laya.gl;\n    } \n  }\n\n  /**\n   * レンダーテクスチャのリソースを定義する構造体\n   * クリッピングマスクで使用する\n   */\n  export class CubismRenderTextureResource {\n    /**\n     * 引数付きコンストラクタ\n     * @param frameNo レンダラーのフレーム番号\n     * @param texture テクスチャのアドレス\n     */\n    public constructor(frameNo: number, texture: WebGLFramebuffer) {\n      this.frameNo = frameNo;\n      this.texture = texture;\n    }\n\n    public frameNo: number; // レンダラのフレーム番号\n    public texture: WebGLFramebuffer; // テクスチャのアドレス\n  }\n\n  /**\n   * クリッピングマスクのコンテキスト\n   */\n  export class CubismClippingContext {\n    /**\n     * 引数付きコンストラクタ\n     */\n    public constructor(\n      manager: CubismClippingManager_WebGL,\n      clippingDrawableIndices: Int32Array,\n      clipCount: number\n    ) {\n      this._owner = manager;\n\n      // クリップしている（＝マスク用の）Drawableのインデックスリスト\n      this._clippingIdList = clippingDrawableIndices;\n\n      // マスクの数\n      this._clippingIdCount = clipCount;\n\n      this._allClippedDrawRect = new csmRect();\n      this._layoutBounds = new csmRect();\n\n      this._clippedDrawableIndexList = [];\n\n      this._matrixForMask = new CubismMatrix44();\n      this._matrixForDraw = new CubismMatrix44();\n    }\n\n    /**\n     * デストラクタ相当の処理\n     */\n    public release(): void {\n      if (this._layoutBounds != null) {\n        this._layoutBounds = null;\n      }\n\n      if (this._allClippedDrawRect != null) {\n        this._allClippedDrawRect = null;\n      }\n\n      if (this._clippedDrawableIndexList != null) {\n        this._clippedDrawableIndexList = null;\n      }\n    }\n\n    /**\n     * このマスクにクリップされる描画オブジェクトを追加する\n     *\n     * @param drawableIndex クリッピング対象に追加する描画オブジェクトのインデックス\n     */\n    public addClippedDrawable(drawableIndex: number) {\n      this._clippedDrawableIndexList.push(drawableIndex);\n    }\n\n    /**\n     * このマスクを管理するマネージャのインスタンスを取得する\n     * @return クリッピングマネージャのインスタンス\n     */\n    public getClippingManager(): CubismClippingManager_WebGL {\n      return this._owner;\n    }\n\n    // public setGl(gl: WebGLRenderingContext): void {\n    //   this._owner.setGL(gl);\n    // }\n\n    public _isUsing: boolean; // 現在の描画状態でマスクの準備が必要ならtrue\n    public readonly _clippingIdList: Int32Array; // クリッピングマスクのIDリスト\n    public _clippingIdCount: number; // クリッピングマスクの数\n    public _layoutChannelNo: number; // RGBAのいずれのチャンネルにこのクリップを配置するか（0:R, 1:G, 2:B, 3:A）\n    public _layoutBounds: csmRect; // マスク用チャンネルのどの領域にマスクを入れるか（View座標-1~1, UVは0~1に直す）\n    public _allClippedDrawRect: csmRect; // このクリッピングで、クリッピングされるすべての描画オブジェクトの囲み矩形（毎回更新）\n    public _matrixForMask: CubismMatrix44; // マスクの位置計算結果を保持する行列\n    public _matrixForDraw: CubismMatrix44; // 描画オブジェクトの位置計算結果を保持する行列\n    public _clippedDrawableIndexList: number[]; // このマスクにクリップされる描画オブジェクトのリスト\n\n    private _owner: CubismClippingManager_WebGL; // このマスクを管理しているマネージャのインスタンス\n  }\n\n  /**\n   * WebGL用のシェーダープログラムを生成・破棄するクラス\n   * シングルトンなクラスであり、CubismShader_WebGL.getInstanceからアクセスする。\n   */\n  export class CubismShader_Laya {\n    public static __init__():void{\n      CubismShader_Laya.getInstance();\n        //@ts-ignore\n        CubismShader_Laya.gl = LayaGL.instance;\n        s_fbo = CubismShader_Laya.gl.getParameter(CubismShader_Laya.gl.FRAMEBUFFER_BINDING);\n        Live2DSubmit.__init__(CubismShader_Laya.gl);\n    }\n    /**\n     * インスタンスを取得する（シングルトン）\n     * @return インスタンス\n     */\n    public static getInstance(): CubismShader_Laya {\n      if (s_instance == null) {\n        s_instance = new CubismShader_Laya();\n\n        return s_instance;\n      }\n      return s_instance;\n    }\n\n    /**\n     * インスタンスを開放する（シングルトン）\n     */\n    public static deleteInstance(): void {\n      if (s_instance) {\n        s_instance.release();\n        s_instance = null;\n      }\n    }\n\n    /**\n     * privateなコンストラクタ\n     */\n    private constructor() {\n      this._shaderSets = new csmVector<CubismShaderSet>();\n    }\n\n    /**\n     * デストラクタ相当の処理\n     */\n    public release(): void {\n      this.releaseShaderProgram();\n    }\n\n    /**\n     * シェーダープログラムの一連のセットアップを実行する\n     * @param renderer レンダラのインスタンス\n     * @param textureId GPUのテクスチャID\n     * @param vertexCount ポリゴンメッシュの頂点数\n     * @param vertexArray ポリゴンメッシュの頂点配列\n     * @param indexArray インデックスバッファの頂点配列\n     * @param uvArray uv配列\n     * @param opacity 不透明度\n     * @param colorBlendMode カラーブレンディングのタイプ\n     * @param baseColor ベースカラー\n     * @param isPremultipliedAlpha 乗算済みアルファかどうか\n     * @param matrix4x4 Model-View-Projection行列\n     * @param invertedMask マスクを反転して使用するフラグ\n     */\n    public setupShaderProgram(\n      renderer: CubismRenderer_WebGL,\n      textureId: WebGLTexture,\n      vertexCount: number,\n      vertexArray: Float32Array,\n      indexArray: Uint16Array,\n      uvArray: Float32Array,\n      bufferData: {\n        vertex: WebGLBuffer;\n        uv: WebGLBuffer;\n        index: WebGLBuffer;\n      },\n      opacity: number,\n      colorBlendMode: CubismBlendMode,\n      baseColor: CubismTextureColor,\n      isPremultipliedAlpha: boolean,\n      matrix4x4: CubismMatrix44,\n      invertedMask: boolean,\n      cutArr:Array<number>\n    ): void {\n      if (!isPremultipliedAlpha) {\n        console.error('NoPremultipliedAlpha is not allowed');\n      }\n\n      if (this._shaderSets.getSize() == 0) {\n        this.generateShaders();\n      }\n\n      // Blending\n      let SRC_COLOR: number;\n      let DST_COLOR: number;\n      let SRC_ALPHA: number;\n      let DST_ALPHA: number;\n\n      if (renderer.getClippingContextBufferForMask() != null) {\n        // マスク生成時\n        const shaderSet: CubismShaderSet = this._shaderSets.at(\n          ShaderNames.ShaderNames_SetupMask\n        );\n        this.gl.useProgram(shaderSet.shaderProgram);\n\n        // テクスチャ設定\n        this.gl.activeTexture(this.gl.TEXTURE0);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\n        this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\n\n        // 頂点配列の設定(VBO)\n        if (bufferData.vertex == null) {\n          bufferData.vertex = this.gl.createBuffer();\n        }\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.vertex);\n        this.gl.bufferData(\n          this.gl.ARRAY_BUFFER,\n          vertexArray,\n          this.gl.DYNAMIC_DRAW\n        );\n        this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\n        this.gl.vertexAttribPointer(\n          shaderSet.attributePositionLocation,\n          2,\n          this.gl.FLOAT,\n          false,\n          0,\n          0\n        );\n\n        // テクスチャ頂点の設定\n        if (bufferData.uv == null) {\n          bufferData.uv = this.gl.createBuffer();\n        }\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.uv);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\n        this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\n        this.gl.vertexAttribPointer(\n          shaderSet.attributeTexCoordLocation,\n          2,\n          this.gl.FLOAT,\n          false,\n          0,\n          0\n        );\n\n        // チャンネル\n        const channelNo: number = renderer.getClippingContextBufferForMask()\n          ._layoutChannelNo;\n        const colorChannel: CubismTextureColor = renderer\n          .getClippingContextBufferForMask()\n          .getClippingManager()\n          .getChannelFlagAsColor(channelNo);\n        this.gl.uniform4f(\n          shaderSet.uniformChannelFlagLocation,\n          colorChannel.R,\n          colorChannel.G,\n          colorChannel.B,\n          colorChannel.A\n        );\n\n        this.gl.uniformMatrix4fv(\n          shaderSet.uniformClipMatrixLocation,\n          false,\n          renderer.getClippingContextBufferForMask()._matrixForMask.getArray()\n        );\n\n        const rect: csmRect = renderer.getClippingContextBufferForMask()\n          ._layoutBounds;\n\n        this.gl.uniform4f(\n          shaderSet.uniformBaseColorLocation,\n          rect.x * 2.0 - 1.0,\n          rect.y * 2.0 - 1.0,\n          rect.getRight() * 2.0 - 1.0,\n          rect.getBottom() * 2.0 - 1.0\n        );\n\n        SRC_COLOR = this.gl.ZERO;\n        DST_COLOR = this.gl.ONE_MINUS_SRC_COLOR;\n        SRC_ALPHA = this.gl.ZERO;\n        DST_ALPHA = this.gl.ONE_MINUS_SRC_ALPHA;\n      } // マスク生成以外の場合\n      else {\n        const masked: boolean =\n          renderer.getClippingContextBufferForDraw() != null; // この描画オブジェクトはマスク対象か\n        const offset: number = masked ? (invertedMask ? 2 : 1) : 0;\n\n        let shaderSet: CubismShaderSet;// = new CubismShaderSet();\n\n        switch (colorBlendMode) {\n          case CubismBlendMode.CubismBlendMode_Normal:\n          default:\n            shaderSet = this._shaderSets.at(\n              ShaderNames.ShaderNames_NormalPremultipliedAlpha + offset\n            );\n            SRC_COLOR = this.gl.ONE;\n            DST_COLOR = this.gl.ONE_MINUS_SRC_ALPHA;\n            SRC_ALPHA = this.gl.ONE;\n            DST_ALPHA = this.gl.ONE_MINUS_SRC_ALPHA;\n            break;\n\n          case CubismBlendMode.CubismBlendMode_Additive:\n            shaderSet = this._shaderSets.at(\n              ShaderNames.ShaderNames_AddPremultipliedAlpha + offset\n            );\n            SRC_COLOR = this.gl.ONE;\n            DST_COLOR = this.gl.ONE;\n            SRC_ALPHA = this.gl.ZERO;\n            DST_ALPHA = this.gl.ONE;\n            break;\n\n          case CubismBlendMode.CubismBlendMode_Multiplicative:\n            shaderSet = this._shaderSets.at(\n              ShaderNames.ShaderNames_MultPremultipliedAlpha + offset\n            );\n            SRC_COLOR = this.gl.DST_COLOR;\n            DST_COLOR = this.gl.ONE_MINUS_SRC_ALPHA;\n            SRC_ALPHA = this.gl.ZERO;\n            DST_ALPHA = this.gl.ONE;\n            break;\n        }\n\n        this.gl.useProgram(shaderSet.shaderProgram);\n\n        // 頂点配列の設定\n        if (bufferData.vertex == null) {\n          bufferData.vertex = this.gl.createBuffer();\n        }\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.vertex);\n        this.gl.bufferData(\n          this.gl.ARRAY_BUFFER,\n          vertexArray,\n          this.gl.DYNAMIC_DRAW\n        );\n        this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\n        this.gl.vertexAttribPointer(\n          shaderSet.attributePositionLocation,\n          2,\n          this.gl.FLOAT,\n          false,\n          0,\n          0\n        );\n\n        // テクスチャ頂点の設定\n        if (bufferData.uv == null) {\n          bufferData.uv = this.gl.createBuffer();\n        }\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.uv);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\n        this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\n        this.gl.vertexAttribPointer(\n          shaderSet.attributeTexCoordLocation,\n          2,\n          this.gl.FLOAT,\n          false,\n          0,\n          0\n        );\n\n        if (masked) {\n          this.gl.activeTexture(this.gl.TEXTURE1);\n          const tex: WebGLTexture = renderer\n            .getClippingContextBufferForDraw()\n            .getClippingManager()\n            .getColorBuffer();\n          this.gl.bindTexture(this.gl.TEXTURE_2D, tex);\n          this.gl.uniform1i(shaderSet.samplerTexture1Location, 1);\n\n          // view座標をClippingContextの座標に変換するための行列を設定\n          this.gl.uniformMatrix4fv(\n            shaderSet.uniformClipMatrixLocation,\n            false,\n            renderer.getClippingContextBufferForDraw()._matrixForDraw.getArray()\n          );\n\n          // 使用するカラーチャンネルを設定\n          const channelNo: number = renderer.getClippingContextBufferForDraw()\n            ._layoutChannelNo;\n          const colorChannel: CubismTextureColor = renderer\n            .getClippingContextBufferForDraw()\n            .getClippingManager()\n            .getChannelFlagAsColor(channelNo);\n          this.gl.uniform4f(\n            shaderSet.uniformChannelFlagLocation,\n            colorChannel.R,\n            colorChannel.G,\n            colorChannel.B,\n            colorChannel.A\n          );\n        }\n\n        // テクスチャ設定\n        this.gl.activeTexture(this.gl.TEXTURE0);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\n        this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\n\n        // 座標変換\n        this.gl.uniformMatrix4fv(\n          shaderSet.uniformMatrixLocation,\n          false,\n          matrix4x4.getArray()\n        );\n\n        this.gl.uniform4f(\n          shaderSet.uniformBaseColorLocation,\n          baseColor.R,\n          baseColor.G,\n          baseColor.B,\n          baseColor.A\n        );\n\n        this.gl.uniform4f(\n          shaderSet.uniformCutRectLocation,\n          cutArr[0],\n          cutArr[1],\n          cutArr[2],\n          cutArr[3],\n        )\n      }\n\n      // IBOを作成し、データを転送\n      if (bufferData.index == null) {\n        bufferData.index = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, bufferData.index);\n      this.gl.bufferData(\n        this.gl.ELEMENT_ARRAY_BUFFER,\n        indexArray,\n        this.gl.DYNAMIC_DRAW\n      );\n      this.gl.blendFuncSeparate(SRC_COLOR, DST_COLOR, SRC_ALPHA, DST_ALPHA);\n    }\n\n    /**\n     * シェーダープログラムを解放する\n     */\n    public releaseShaderProgram(): void {\n      for (let i = 0; i < this._shaderSets.getSize(); i++) {\n        this.gl.deleteProgram(this._shaderSets.at(i).shaderProgram);\n        this._shaderSets.at(i).shaderProgram = null;\n        this._shaderSets.set(i, void 0);\n        this._shaderSets.set(i, null);\n      }\n    }\n\n    /**\n     * シェーダープログラムを初期化する\n     * @param vertShaderSrc 頂点シェーダのソース\n     * @param fragShaderSrc フラグメントシェーダのソース\n     */\n    public generateShaders(): void {\n      for (let i = 0; i < shaderCount; i++) {\n        this._shaderSets.pushBack(new CubismShaderSet());\n      }\n\n      this._shaderSets.at(0).shaderProgram = this.loadShaderProgram(\n        vertexShaderSrcSetupMask,\n        fragmentShaderSrcsetupMask\n      );\n\n      this._shaderSets.at(1).shaderProgram = this.loadShaderProgram(\n        vertexShaderSrc,\n        fragmentShaderSrcPremultipliedAlpha\n      );\n      this._shaderSets.at(2).shaderProgram = this.loadShaderProgram(\n        vertexShaderSrcMasked,\n        fragmentShaderSrcMaskPremultipliedAlpha\n      );\n      this._shaderSets.at(3).shaderProgram = this.loadShaderProgram(\n        vertexShaderSrcMasked,\n        fragmentShaderSrcMaskInvertedPremultipliedAlpha\n      );\n\n      // 加算も通常と同じシェーダーを利用する\n      this._shaderSets.at(4).shaderProgram = this._shaderSets.at(\n        1\n      ).shaderProgram;\n      this._shaderSets.at(5).shaderProgram = this._shaderSets.at(\n        2\n      ).shaderProgram;\n      this._shaderSets.at(6).shaderProgram = this._shaderSets.at(\n        3\n      ).shaderProgram;\n\n      // 乗算も通常と同じシェーダーを利用する\n      this._shaderSets.at(7).shaderProgram = this._shaderSets.at(\n        1\n      ).shaderProgram;\n      this._shaderSets.at(8).shaderProgram = this._shaderSets.at(\n        2\n      ).shaderProgram;\n      this._shaderSets.at(9).shaderProgram = this._shaderSets.at(\n        3\n      ).shaderProgram;\n\n      // SetupMask\n      this._shaderSets.at(\n        0\n      ).attributePositionLocation = this.gl.getAttribLocation(\n        this._shaderSets.at(0).shaderProgram,\n        'a_position'\n      );\n      this._shaderSets.at(\n        0\n      ).attributeTexCoordLocation = this.gl.getAttribLocation(\n        this._shaderSets.at(0).shaderProgram,\n        'a_texCoord'\n      );\n      this._shaderSets.at(\n        0\n      ).samplerTexture0Location = this.gl.getUniformLocation(\n        this._shaderSets.at(0).shaderProgram,\n        's_texture0'\n      );\n      this._shaderSets.at(\n        0\n      ).uniformClipMatrixLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(0).shaderProgram,\n        'u_clipMatrix'\n      );\n      this._shaderSets.at(\n        0\n      ).uniformChannelFlagLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(0).shaderProgram,\n        'u_channelFlag'\n      );\n      this._shaderSets.at(\n        0\n      ).uniformBaseColorLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(0).shaderProgram,\n        'u_baseColor'\n      );\n      //Laya Add cut\n      this._shaderSets.at(\n        0\n      ).uniformCutRectLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(0).shaderProgram,\n        'u_cutRect'\n      );\n\n      // 通常（PremultipliedAlpha）\n      this._shaderSets.at(\n        1\n      ).attributePositionLocation = this.gl.getAttribLocation(\n        this._shaderSets.at(1).shaderProgram,\n        'a_position'\n      );\n      this._shaderSets.at(\n        1\n      ).attributeTexCoordLocation = this.gl.getAttribLocation(\n        this._shaderSets.at(1).shaderProgram,\n        'a_texCoord'\n      );\n      this._shaderSets.at(\n        1\n      ).samplerTexture0Location = this.gl.getUniformLocation(\n        this._shaderSets.at(1).shaderProgram,\n        's_texture0'\n      );\n      this._shaderSets.at(1).uniformMatrixLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(1).shaderProgram,\n        'u_matrix'\n      );\n      this._shaderSets.at(\n        1\n      ).uniformBaseColorLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(1).shaderProgram,\n        'u_baseColor'\n      );\n      //Laya Add cut\n      this._shaderSets.at(\n        1\n      ).uniformCutRectLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(1).shaderProgram,\n        'u_cutRect'\n      );\n\n      // 通常（クリッピング、PremultipliedAlpha）\n      this._shaderSets.at(\n        2\n      ).attributePositionLocation = this.gl.getAttribLocation(\n        this._shaderSets.at(2).shaderProgram,\n        'a_position'\n      );\n      this._shaderSets.at(\n        2\n      ).attributeTexCoordLocation = this.gl.getAttribLocation(\n        this._shaderSets.at(2).shaderProgram,\n        'a_texCoord'\n      );\n      this._shaderSets.at(\n        2\n      ).samplerTexture0Location = this.gl.getUniformLocation(\n        this._shaderSets.at(2).shaderProgram,\n        's_texture0'\n      );\n      this._shaderSets.at(\n        2\n      ).samplerTexture1Location = this.gl.getUniformLocation(\n        this._shaderSets.at(2).shaderProgram,\n        's_texture1'\n      );\n      this._shaderSets.at(2).uniformMatrixLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(2).shaderProgram,\n        'u_matrix'\n      );\n      this._shaderSets.at(\n        2\n      ).uniformClipMatrixLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(2).shaderProgram,\n        'u_clipMatrix'\n      );\n      this._shaderSets.at(\n        2\n      ).uniformChannelFlagLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(2).shaderProgram,\n        'u_channelFlag'\n      );\n      this._shaderSets.at(\n        2\n      ).uniformBaseColorLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(2).shaderProgram,\n        'u_baseColor'\n      );\n      //Laya Add cut\n      this._shaderSets.at(\n        2\n      ).uniformCutRectLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(2).shaderProgram,\n        'u_cutRect'\n      );\n\n      // 通常（クリッピング・反転, PremultipliedAlpha）\n      this._shaderSets.at(\n        3\n      ).attributePositionLocation = this.gl.getAttribLocation(\n        this._shaderSets.at(3).shaderProgram,\n        'a_position'\n      );\n      this._shaderSets.at(\n        3\n      ).attributeTexCoordLocation = this.gl.getAttribLocation(\n        this._shaderSets.at(3).shaderProgram,\n        'a_texCoord'\n      );\n      this._shaderSets.at(\n        3\n      ).samplerTexture0Location = this.gl.getUniformLocation(\n        this._shaderSets.at(3).shaderProgram,\n        's_texture0'\n      );\n      this._shaderSets.at(\n        3\n      ).samplerTexture1Location = this.gl.getUniformLocation(\n        this._shaderSets.at(3).shaderProgram,\n        's_texture1'\n      );\n      this._shaderSets.at(3).uniformMatrixLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(3).shaderProgram,\n        'u_matrix'\n      );\n      this._shaderSets.at(\n        3\n      ).uniformClipMatrixLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(3).shaderProgram,\n        'u_clipMatrix'\n      );\n      this._shaderSets.at(\n        3\n      ).uniformChannelFlagLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(3).shaderProgram,\n        'u_channelFlag'\n      );\n      this._shaderSets.at(\n        3\n      ).uniformBaseColorLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(3).shaderProgram,\n        'u_baseColor'\n      );\n      //Laya Add cut\n      this._shaderSets.at(\n        3\n      ).uniformCutRectLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(3).shaderProgram,\n        'u_cutRect'\n      );\n\n      // 加算（PremultipliedAlpha）\n      this._shaderSets.at(\n        4\n      ).attributePositionLocation = this.gl.getAttribLocation(\n        this._shaderSets.at(4).shaderProgram,\n        'a_position'\n      );\n      this._shaderSets.at(\n        4\n      ).attributeTexCoordLocation = this.gl.getAttribLocation(\n        this._shaderSets.at(4).shaderProgram,\n        'a_texCoord'\n      );\n      this._shaderSets.at(\n        4\n      ).samplerTexture0Location = this.gl.getUniformLocation(\n        this._shaderSets.at(4).shaderProgram,\n        's_texture0'\n      );\n      this._shaderSets.at(4).uniformMatrixLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(4).shaderProgram,\n        'u_matrix'\n      );\n      this._shaderSets.at(\n        4\n      ).uniformBaseColorLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(4).shaderProgram,\n        'u_baseColor'\n      );\n      //Laya Add cut\n      this._shaderSets.at(\n        4\n      ).uniformCutRectLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(4).shaderProgram,\n        'u_cutRect'\n      );\n\n      // 加算（クリッピング、PremultipliedAlpha）\n      this._shaderSets.at(\n        5\n      ).attributePositionLocation = this.gl.getAttribLocation(\n        this._shaderSets.at(5).shaderProgram,\n        'a_position'\n      );\n      this._shaderSets.at(\n        5\n      ).attributeTexCoordLocation = this.gl.getAttribLocation(\n        this._shaderSets.at(5).shaderProgram,\n        'a_texCoord'\n      );\n      this._shaderSets.at(\n        5\n      ).samplerTexture0Location = this.gl.getUniformLocation(\n        this._shaderSets.at(5).shaderProgram,\n        's_texture0'\n      );\n      this._shaderSets.at(\n        5\n      ).samplerTexture1Location = this.gl.getUniformLocation(\n        this._shaderSets.at(5).shaderProgram,\n        's_texture1'\n      );\n      this._shaderSets.at(5).uniformMatrixLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(5).shaderProgram,\n        'u_matrix'\n      );\n      this._shaderSets.at(\n        5\n      ).uniformClipMatrixLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(5).shaderProgram,\n        'u_clipMatrix'\n      );\n      this._shaderSets.at(\n        5\n      ).uniformChannelFlagLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(5).shaderProgram,\n        'u_channelFlag'\n      );\n      this._shaderSets.at(\n        5\n      ).uniformBaseColorLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(5).shaderProgram,\n        'u_baseColor'\n      );\n      //Laya Add cut\n      this._shaderSets.at(\n        5\n      ).uniformCutRectLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(5).shaderProgram,\n        'u_cutRect'\n      );\n\n      // 加算（クリッピング・反転、PremultipliedAlpha）\n      this._shaderSets.at(\n        6\n      ).attributePositionLocation = this.gl.getAttribLocation(\n        this._shaderSets.at(6).shaderProgram,\n        'a_position'\n      );\n      this._shaderSets.at(\n        6\n      ).attributeTexCoordLocation = this.gl.getAttribLocation(\n        this._shaderSets.at(6).shaderProgram,\n        'a_texCoord'\n      );\n      this._shaderSets.at(\n        6\n      ).samplerTexture0Location = this.gl.getUniformLocation(\n        this._shaderSets.at(6).shaderProgram,\n        's_texture0'\n      );\n      this._shaderSets.at(\n        6\n      ).samplerTexture1Location = this.gl.getUniformLocation(\n        this._shaderSets.at(6).shaderProgram,\n        's_texture1'\n      );\n      this._shaderSets.at(6).uniformMatrixLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(6).shaderProgram,\n        'u_matrix'\n      );\n      this._shaderSets.at(\n        6\n      ).uniformClipMatrixLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(6).shaderProgram,\n        'u_clipMatrix'\n      );\n      this._shaderSets.at(\n        6\n      ).uniformChannelFlagLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(6).shaderProgram,\n        'u_channelFlag'\n      );\n      this._shaderSets.at(\n        6\n      ).uniformBaseColorLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(6).shaderProgram,\n        'u_baseColor'\n      );\n      //Laya Add cut\n      this._shaderSets.at(\n        6\n      ).uniformCutRectLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(6).shaderProgram,\n        'u_cutRect'\n      );\n\n      // 乗算（PremultipliedAlpha）\n      this._shaderSets.at(\n        7\n      ).attributePositionLocation = this.gl.getAttribLocation(\n        this._shaderSets.at(7).shaderProgram,\n        'a_position'\n      );\n      this._shaderSets.at(\n        7\n      ).attributeTexCoordLocation = this.gl.getAttribLocation(\n        this._shaderSets.at(7).shaderProgram,\n        'a_texCoord'\n      );\n      this._shaderSets.at(\n        7\n      ).samplerTexture0Location = this.gl.getUniformLocation(\n        this._shaderSets.at(7).shaderProgram,\n        's_texture0'\n      );\n      this._shaderSets.at(7).uniformMatrixLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(7).shaderProgram,\n        'u_matrix'\n      );\n      this._shaderSets.at(\n        7\n      ).uniformBaseColorLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(7).shaderProgram,\n        'u_baseColor'\n      );\n      //Laya Add cut\n      this._shaderSets.at(\n        7\n      ).uniformCutRectLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(7).shaderProgram,\n        'u_cutRect'\n      );\n      \n      // 乗算（クリッピング、PremultipliedAlpha）\n      this._shaderSets.at(\n        8\n      ).attributePositionLocation = this.gl.getAttribLocation(\n        this._shaderSets.at(8).shaderProgram,\n        'a_position'\n      );\n      this._shaderSets.at(\n        8\n      ).attributeTexCoordLocation = this.gl.getAttribLocation(\n        this._shaderSets.at(8).shaderProgram,\n        'a_texCoord'\n      );\n      this._shaderSets.at(\n        8\n      ).samplerTexture0Location = this.gl.getUniformLocation(\n        this._shaderSets.at(8).shaderProgram,\n        's_texture0'\n      );\n      this._shaderSets.at(\n        8\n      ).samplerTexture1Location = this.gl.getUniformLocation(\n        this._shaderSets.at(8).shaderProgram,\n        's_texture1'\n      );\n      this._shaderSets.at(8).uniformMatrixLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(8).shaderProgram,\n        'u_matrix'\n      );\n      this._shaderSets.at(\n        8\n      ).uniformClipMatrixLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(8).shaderProgram,\n        'u_clipMatrix'\n      );\n      this._shaderSets.at(\n        8\n      ).uniformChannelFlagLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(8).shaderProgram,\n        'u_channelFlag'\n      );\n      this._shaderSets.at(\n        8\n      ).uniformBaseColorLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(8).shaderProgram,\n        'u_baseColor'\n      );\n      //Laya Add cut\n      this._shaderSets.at(\n        8\n      ).uniformCutRectLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(8).shaderProgram,\n        'u_cutRect'\n      );\n\n      // 乗算（クリッピング・反転、PremultipliedAlpha）\n      this._shaderSets.at(\n        9\n      ).attributePositionLocation = this.gl.getAttribLocation(\n        this._shaderSets.at(9).shaderProgram,\n        'a_position'\n      );\n      this._shaderSets.at(\n        9\n      ).attributeTexCoordLocation = this.gl.getAttribLocation(\n        this._shaderSets.at(9).shaderProgram,\n        'a_texCoord'\n      );\n      this._shaderSets.at(\n        9\n      ).samplerTexture0Location = this.gl.getUniformLocation(\n        this._shaderSets.at(9).shaderProgram,\n        's_texture0'\n      );\n      this._shaderSets.at(\n        9\n      ).samplerTexture1Location = this.gl.getUniformLocation(\n        this._shaderSets.at(9).shaderProgram,\n        's_texture1'\n      );\n      this._shaderSets.at(9).uniformMatrixLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(9).shaderProgram,\n        'u_matrix'\n      );\n      this._shaderSets.at(\n        9\n      ).uniformClipMatrixLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(9).shaderProgram,\n        'u_clipMatrix'\n      );\n      this._shaderSets.at(\n        9\n      ).uniformChannelFlagLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(9).shaderProgram,\n        'u_channelFlag'\n      );\n      this._shaderSets.at(\n        9\n      ).uniformBaseColorLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(9).shaderProgram,\n        'u_baseColor'\n      );\n      //Laya Add cut\n      this._shaderSets.at(\n        9\n      ).uniformCutRectLocation = this.gl.getUniformLocation(\n        this._shaderSets.at(9).shaderProgram,\n        'u_cutRect'\n      );\n    }\n\n    /**\n     * シェーダプログラムをロードしてアドレスを返す\n     * @param vertexShaderSource    頂点シェーダのソース\n     * @param fragmentShaderSource  フラグメントシェーダのソース\n     * @return シェーダプログラムのアドレス\n     */\n    public loadShaderProgram(\n      vertexShaderSource: string,\n      fragmentShaderSource: string\n    ): WebGLProgram {\n      // Create Shader Program\n      let shaderProgram: WebGLProgram = this.gl.createProgram();\n\n      let vertShader = this.compileShaderSource(\n        this.gl.VERTEX_SHADER,\n        vertexShaderSource\n      );\n\n      if (!vertShader) {\n        console.error('Vertex shader compile error!',vertShader);\n        return null;\n      }\n\n      let fragShader = this.compileShaderSource(\n        this.gl.FRAGMENT_SHADER,\n        fragmentShaderSource\n      );\n      if (!fragShader) {\n        console.error('Vertex shader compile error!',fragShader);\n        return null;\n      }\n\n      // Attach vertex shader to program\n      this.gl.attachShader(shaderProgram, vertShader);\n\n      // Attach fragment shader to program\n      this.gl.attachShader(shaderProgram, fragShader);\n\n      // link program\n      this.gl.linkProgram(shaderProgram);\n      const linkStatus = this.gl.getProgramParameter(\n        shaderProgram,\n        this.gl.LINK_STATUS\n      );\n\n      // リンクに失敗したらシェーダーを削除\n      if (!linkStatus) {\n        console.error('Failed to link program: {0}', shaderProgram);\n\n        this.gl.deleteShader(vertShader);\n        vertShader = null;\n\n        this.gl.deleteShader(fragShader);\n        fragShader = null;\n\n        if (shaderProgram) {\n          this.gl.deleteProgram(shaderProgram);\n          shaderProgram = null;\n        }\n\n        return null;\n      }\n\n      // Release vertex and fragment shaders.\n      this.gl.deleteShader(vertShader);\n      this.gl.deleteShader(fragShader);\n\n      return shaderProgram;\n    }\n\n    /**\n     * シェーダープログラムをコンパイルする\n     * @param shaderType シェーダタイプ(Vertex/Fragment)\n     * @param shaderSource シェーダソースコード\n     *\n     * @return コンパイルされたシェーダープログラム\n     */\n    public compileShaderSource(\n      shaderType: GLenum,\n      shaderSource: string\n    ): WebGLShader {\n      const source: string = shaderSource;\n\n      const shader = this.gl.createShader(shaderType);\n      this.gl.shaderSource(shader, source);\n      this.gl.compileShader(shader);\n\n      if (!shader) {\n        const log: string = this.gl.getShaderInfoLog(shader);\n        console.error('Shader compile log: {0} ', log);\n      }\n\n      const status: any = this.gl.getShaderParameter(\n        shader,\n        this.gl.COMPILE_STATUS\n      );\n      if (!status) {\n        this.gl.deleteShader(shader);\n        return null;\n      }\n\n      return shader;\n    }\n\n    public get gl():WebGLRenderingContext{\n        return CubismShader_Laya.gl\n    }\n\n    _shaderSets: csmVector<CubismShaderSet>; // ロードしたシェーダープログラムを保持する変数\n    static gl: WebGLRenderingContext; // webglコンテキスト\n  }\n\n  /**\n   * CubismShader_WebGLのインナークラス\n   */\n  export class CubismShaderSet {\n    shaderProgram: WebGLProgram; // シェーダープログラムのアドレス\n    attributePositionLocation: GLuint; // シェーダープログラムに渡す変数のアドレス（Position）\n    attributeTexCoordLocation: GLuint; // シェーダープログラムに渡す変数のアドレス（TexCoord）\n    uniformMatrixLocation: WebGLUniformLocation; // シェーダープログラムに渡す変数のアドレス（Matrix）\n    uniformClipMatrixLocation: WebGLUniformLocation; // シェーダープログラムに渡す変数のアドレス（ClipMatrix）\n    samplerTexture0Location: WebGLUniformLocation; // シェーダープログラムに渡す変数のアドレス（Texture0）\n    samplerTexture1Location: WebGLUniformLocation; // シェーダープログラムに渡す変数のアドレス（Texture1）\n    uniformBaseColorLocation: WebGLUniformLocation; // シェーダープログラムに渡す変数のアドレス（BaseColor）\n    uniformChannelFlagLocation: WebGLUniformLocation; // シェーダープログラムに渡す変数のアドレス（ChannelFlag）\n    uniformCutRectLocation:WebGLUniformLocation;//裁剪用vect4\n  }\n\n  export enum ShaderNames {\n    // SetupMask\n    ShaderNames_SetupMask,\n\n    // Normal\n    ShaderNames_NormalPremultipliedAlpha,\n    ShaderNames_NormalMaskedPremultipliedAlpha,\n    ShaderNames_NomralMaskedInvertedPremultipliedAlpha,\n\n    // Add\n    ShaderNames_AddPremultipliedAlpha,\n    ShaderNames_AddMaskedPremultipliedAlpha,\n    ShaderNames_AddMaskedPremultipliedAlphaInverted,\n\n    // Mult\n    ShaderNames_MultPremultipliedAlpha,\n    ShaderNames_MultMaskedPremultipliedAlpha,\n    ShaderNames_MultMaskedPremultipliedAlphaInverted\n  }\n\n  export const vertexShaderSrcSetupMask =\n    'attribute vec4     a_position;' +\n    'attribute vec2     a_texCoord;' +\n    'varying vec2       v_texCoord;' +\n    'varying vec4       v_myPos;' +\n    'uniform mat4       u_clipMatrix;' +\n    'void main()' +\n    '{' +\n    '   gl_Position = u_clipMatrix * a_position;' +\n    '   v_myPos = u_clipMatrix * a_position;' +\n    '   v_texCoord = a_texCoord;' +\n    '   v_texCoord.y = 1.0 - v_texCoord.y;' +\n    '}';\n  export const fragmentShaderSrcsetupMask =\n    'precision mediump float;' +\n    'varying vec2       v_texCoord;' +\n    'varying vec4       v_myPos;' +\n    'uniform vec4       u_baseColor;' +\n    'uniform vec4       u_channelFlag;' +\n    'uniform sampler2D  s_texture0;' +\n    'void main()' +\n    '{' +\n    '   float isInside = ' +\n    '       step(u_baseColor.x, v_myPos.x/v_myPos.w)' +\n    '       * step(u_baseColor.y, v_myPos.y/v_myPos.w)' +\n    '       * step(v_myPos.x/v_myPos.w, u_baseColor.z)' +\n    '       * step(v_myPos.y/v_myPos.w, u_baseColor.w);' +\n    '   gl_FragColor = u_channelFlag * texture2D(s_texture0, v_texCoord).a * isInside;' +\n    '}';\n\n  //----- 顶点着色器程序 -----\n  // Normal & Add & Mult 共通\n  export const vertexShaderSrc =\n    'attribute vec4     a_position;' + //v.vertex\n    'attribute vec2     a_texCoord;' + //v.texcoord\n    'varying vec2       v_texCoord;' + //v2f.texcoord\n    'uniform mat4       u_matrix;' +\n    'void main()' +\n    '{' +\n    '   gl_Position = u_matrix * a_position;' +\n    '   v_texCoord = a_texCoord;' +\n    '   v_texCoord.y = 1.0 - v_texCoord.y;' +\n    '}';\n\n  // Normal & Add & Mult 共通（用于绘制剪裁的一个）\n  export const vertexShaderSrcMasked =\n    'attribute vec4     a_position;' +\n    'attribute vec2     a_texCoord;' +\n    'varying vec2       v_texCoord;' +\n    'varying vec4       v_clipPos;' +\n    'uniform mat4       u_matrix;' +\n    'uniform mat4       u_clipMatrix;' +\n    'void main()' +\n    '{' +\n    '   gl_Position = u_matrix * a_position;' +\n    '   v_clipPos = u_clipMatrix * a_position;' +\n    '   v_texCoord = a_texCoord;' +\n    '   v_texCoord.y = 1.0 - v_texCoord.y;' +\n    '}';\n\n  //----- 片段着色器程序 -----\n  // Normal & Add & Mult 共通 （PremultipliedAlpha）\n  //u_cutRect minx,miny,maxx,maxy\n  export const fragmentShaderSrcPremultipliedAlpha =\n   `precision mediump float;\n    varying vec2       v_texCoord; \n    uniform vec4       u_baseColor;\n    uniform sampler2D  s_texture0;\n    uniform vec4       u_cutRect;\n    void main()\n    {\n      if(gl_FragCoord.x<u_cutRect.x)discard;\n      if(gl_FragCoord.y<u_cutRect.y)discard;\n      if(gl_FragCoord.x>u_cutRect.z)discard;\n      if(gl_FragCoord.y>u_cutRect.w)discard;\n      gl_FragColor = texture2D(s_texture0 , v_texCoord) * u_baseColor;\n    }`;\n\n  // Normal （用于绘图剪裁、PremultipliedAlpha兼用）\n  export const fragmentShaderSrcMaskPremultipliedAlpha =\n    'precision mediump float;' +\n    'varying vec2       v_texCoord;' +\n    'varying vec4       v_clipPos;' +\n    'uniform vec4       u_baseColor;' +\n    'uniform vec4       u_channelFlag;' +\n    'uniform sampler2D  s_texture0;' +\n    'uniform sampler2D  s_texture1;' +\n    'uniform vec4       u_cutRect;' +\n    'void main()' +\n    '{' +\n    'if(gl_FragCoord.x<u_cutRect.x)discard;'+\n    'if(gl_FragCoord.y<u_cutRect.y)discard;'+\n    'if(gl_FragCoord.x>u_cutRect.z)discard;'+\n    'if(gl_FragCoord.y>u_cutRect.w)discard;'+\n    '   vec4 col_formask = texture2D(s_texture0 , v_texCoord) * u_baseColor;' +\n    '   vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;' +\n    '   float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;' +\n    '   col_formask = col_formask * maskVal;' +\n    '   gl_FragColor = col_formask;' +\n    '}';\n\n  // Normal & Add & Mult 共通（剪切和倒转以供绘图使用、PremultipliedAlphaの場合）\n  export const fragmentShaderSrcMaskInvertedPremultipliedAlpha =\n    'precision mediump float;' +\n    'varying vec2 v_texCoord;' +\n    'varying vec4 v_clipPos;' +\n    'uniform sampler2D s_texture0;' +\n    'uniform sampler2D s_texture1;' +\n    'uniform vec4 u_channelFlag;' +\n    'uniform vec4 u_baseColor;' +\n    'uniform vec4 u_cutRect;'+\n    'void main()' +\n    '{' +\n    'if(gl_FragCoord.x<u_cutRect.x)discard;'+\n    'if(gl_FragCoord.y<u_cutRect.y)discard;'+\n    'if(gl_FragCoord.x>u_cutRect.z)discard;'+\n    'if(gl_FragCoord.y>u_cutRect.w)discard;'+\n    'vec4 col_formask = texture2D(s_texture0, v_texCoord) * u_baseColor;' +\n    'vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;' +\n    'float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;' +\n    'col_formask = col_formask * (1.0 - maskVal);' +\n    'gl_FragColor = col_formask;' +\n    '}';\n\n  /**\n   * WebGL用の描画命令を実装したクラス\n   */\n  export class CubismRenderer_WebGL extends CubismRenderer {\n    public owner:Live2DModel;\n    private _cutRect = [0,0,0,0];\n    /**\n     * 获取基于stage的裁剪区域\n     * [minX,minY,maxX,maxY]\n     */\n    public getCilpRect():Array<number>{\n      return this._cutRect;\n    }\n    /**\n     * 设置基于stage的裁剪区域\n     * @param minx \n     * @param miny \n     * @param maxx \n     * @param maxy \n     */\n    public setClipRect(minx:number,miny:number,maxx:number,maxy:number):void{\n      this._cutRect[0] = minx * Laya.stage.clientScaleX;\n      this._cutRect[3] = Browser.mainCanvas.height - miny * Laya.stage.clientScaleY;\n      this._cutRect[2] = maxx * Laya.stage.clientScaleX;\n      this._cutRect[1] = Browser.mainCanvas.height - maxy * Laya.stage.clientScaleY;\n    }\n    /**\n     * レンダラの初期化処理を実行する\n     * 引数に渡したモデルからレンダラの初期化処理に必要な情報を取り出すことができる\n     *\n     * @param model モデルのインスタンス\n     */\n    public initialize(model: CubismModel): void {\n      if (model.isUsingMasking()) {\n        this._clippingManager = new CubismClippingManager_WebGL(); // クリッピングマスク・バッファ前処理方式を初期化\n        this._clippingManager.initialize(\n          model,\n          model.getDrawableCount(),\n          model.getDrawableMasks(),\n          model.getDrawableMaskCounts()\n        );\n      }\n\n      this._sortedDrawableIndexList.resize(model.getDrawableCount(), 0);\n\n      super.initialize(model); // 親クラスの処理を呼ぶ\n    }\n\n    /**\n     * WebGLテクスチャのバインド処理\n     * CubismRendererにテクスチャを設定し、CubismRenderer内でその画像を参照するためのIndex値を戻り値とする\n     * @param modelTextureNo セットするモデルテクスチャの番号\n     * @param glTextureNo WebGLテクスチャの番号\n     */\n    public bindTexture(modelTextureNo: number, glTexture: WebGLTexture): void {\n      this._textures.setValue(modelTextureNo, glTexture);\n    }\n\n    /**\n     * WebGLにバインドされたテクスチャのリストを取得する\n     * @return テクスチャのリスト\n     */\n    public getBindedTextures(): csmMap<number, WebGLTexture> {\n      return this._textures;\n    }\n\n    /**\n     * クリッピングマスクバッファのサイズを設定する\n     * マスク用のFrameBufferを破棄、再作成する為処理コストは高い\n     * @param size クリッピングマスクバッファのサイズ\n     */\n    public setClippingMaskBufferSize(size: number) {\n      // FrameBufferのサイズを変更するためにインスタンスを破棄・再作成する\n      this._clippingManager.release();\n      this._clippingManager = void 0;\n      this._clippingManager = null;\n\n      this._clippingManager = new CubismClippingManager_WebGL();\n\n      this._clippingManager.setClippingMaskBufferSize(size);\n\n      this._clippingManager.initialize(\n        this.getModel(),\n        this.getModel().getDrawableCount(),\n        this.getModel().getDrawableMasks(),\n        this.getModel().getDrawableMaskCounts()\n      );\n    }\n\n    /**\n     * クリッピングマスクバッファのサイズを取得する\n     * @return クリッピングマスクバッファのサイズ\n     */\n    public getClippingMaskBufferSize(): number {\n      return this._clippingManager.getClippingMaskBufferSize();\n    }\n\n    /**\n     * コンストラクタ\n     */\n    public constructor() {\n      super();\n      this._isPremultipliedAlpha = true;\n      this._clippingContextBufferForMask = null;\n      this._clippingContextBufferForDraw = null;\n      this._clippingManager = new CubismClippingManager_WebGL();\n      this.firstDraw = true;\n      this._textures = new csmMap<number, WebGLTexture>();\n      this._sortedDrawableIndexList = new csmVector<number>();\n      this._bufferData = {\n        vertex: null,\n        uv: null,\n        index: null\n      };\n\n      // テクスチャ対応マップの容量を確保しておく\n      this._textures.prepareCapacity(32, true);\n    }\n\n    /**\n     * デストラクタ相当の処理\n     */\n    public release(): void {\n      this.owner = null;\n      this._clippingManager.release();\n      this._clippingManager = void 0;\n      this._clippingManager = null;\n\n      this.gl.deleteBuffer(this._bufferData.vertex);\n      this._bufferData.vertex = null;\n      this.gl.deleteBuffer(this._bufferData.uv);\n      this._bufferData.uv = null;\n      this.gl.deleteBuffer(this._bufferData.index);\n      this._bufferData.index = null;\n      this._bufferData = null;\n\n      this._textures = null;\n    }\n\n    /**\n     * モデルを描画する実際の処理\n     */\n    public doDrawModel(): void {\n      //------------ クリッピングマスク・バッファ前処理方式の場合 ------------\n      if (this._clippingManager != null) {\n        this.preDraw();\n        this._clippingManager.setupClippingContext(this.getModel(), this);\n      }\n\n      // 上記クリッピング処理内でも一度PreDrawを呼ぶので注意!!\n      this.preDraw();\n\n      const drawableCount: number = this.getModel().getDrawableCount();\n      const renderOrder: Int32Array = this.getModel().getDrawableRenderOrders();\n\n      // インデックスを描画順でソート\n      for (let i = 0; i < drawableCount; ++i) {\n        const order: number = renderOrder[i];\n        this._sortedDrawableIndexList.set(order, i);\n      }\n\n      // 描画\n      for (let i = 0; i < drawableCount; ++i) {\n        const drawableIndex: number = this._sortedDrawableIndexList.at(i);\n\n        // Drawableが表示状態でなければ処理をパスする\n        if (!this.getModel().getDrawableDynamicFlagIsVisible(drawableIndex)) {\n          continue;\n        }\n\n        // クリッピングマスクをセットする\n        this.setClippingContextBufferForDraw(\n          this._clippingManager != null\n            ? this._clippingManager\n                .getClippingContextListForDraw()\n                .at(drawableIndex)\n            : null\n        );\n\n        this.setIsCulling(this.getModel().getDrawableCulling(drawableIndex));\n\n        this.drawMesh(\n          this.getModel().getDrawableTextureIndices(drawableIndex),\n          this.getModel().getDrawableVertexIndexCount(drawableIndex),\n          this.getModel().getDrawableVertexCount(drawableIndex),\n          this.getModel().getDrawableVertexIndices(drawableIndex),\n          this.getModel().getDrawableVertices(drawableIndex),\n          this.getModel().getDrawableVertexUvs(drawableIndex),\n          this.getModel().getDrawableOpacity(drawableIndex),\n          this.getModel().getDrawableBlendMode(drawableIndex),\n          this.getModel().getDrawableInvertedMaskBit(drawableIndex)\n        );\n      }\n    }\n\n    /**\n     * [オーバーライド]\n     * 描画オブジェクト（アートメッシュ）を描画する。\n     * ポリゴンメッシュとテクスチャ番号をセットで渡す。\n     * @param textureNo 描画するテクスチャ番号\n     * @param indexCount 描画オブジェクトのインデックス値\n     * @param vertexCount ポリゴンメッシュの頂点数\n     * @param indexArray ポリゴンメッシュのインデックス配列\n     * @param vertexArray ポリゴンメッシュの頂点配列\n     * @param uvArray uv配列\n     * @param opacity 不透明度\n     * @param colorBlendMode カラー合成タイプ\n     * @param invertedMask マスク使用時のマスクの反転使用\n     */\n    public drawMesh(\n      textureNo: number,\n      indexCount: number,\n      vertexCount: number,\n      indexArray: Uint16Array,\n      vertexArray: Float32Array,\n      uvArray: Float32Array,\n      opacity: number,\n      colorBlendMode: CubismBlendMode,\n      invertedMask: boolean\n    ): void {\n      // 裏面描画の有効・無効\n      if (this.isCulling()) {\n        this.gl.enable(this.gl.CULL_FACE);\n      } else {\n        this.gl.disable(this.gl.CULL_FACE);\n      }\n\n      this.gl.frontFace(this.gl.CCW); // Cubism SDK OpenGLはマスク・アートメッシュ共にCCWが表面\n\n      const modelColorRGBA: CubismTextureColor = this.getModelColor();\n\n      if (this.getClippingContextBufferForMask() == null) {\n        // マスク生成時以外\n        modelColorRGBA.A *= opacity;\n        if (this.isPremultipliedAlpha()) {\n          modelColorRGBA.R *= modelColorRGBA.A;\n          modelColorRGBA.G *= modelColorRGBA.A;\n          modelColorRGBA.B *= modelColorRGBA.A;\n        }\n      }\n\n      // シェーダに渡すテクスチャ\n      let drawtexture: WebGLTexture = this._textures.getValue(textureNo);\n\n      // テクスチャマップからバインド済みテクスチャＩＤを取得\n      // バインドされていなければダミーのテクスチャIDをセットする\n      if (!drawtexture) {\n        console.log(\"webglTexture lost!!\",\"color:red\");\n        drawtexture = null;\n      }\n\n      CubismShader_Laya.getInstance().setupShaderProgram(\n        this,\n        drawtexture,\n        vertexCount,\n        vertexArray,\n        indexArray,\n        uvArray,\n        this._bufferData,\n        opacity,\n        colorBlendMode,\n        modelColorRGBA,\n        this.isPremultipliedAlpha(),\n        this.getMvpMatrix(),\n        invertedMask,\n        this._cutRect\n      );\n\n      // ポリゴンメッシュを描画する\n      this.gl.drawElements(\n        this.gl.TRIANGLES,\n        indexCount,\n        this.gl.UNSIGNED_SHORT,\n        0\n      );\n      Stat.renderBatches ++;\n      // 後処理\n      this.gl.useProgram(null);\n      this.setClippingContextBufferForDraw(null);\n      this.setClippingContextBufferForMask(null);\n    }\n\n    /**\n     * レンダラが保持する静的なリソースを解放する\n     * WebGLの静的なシェーダープログラムを解放する\n     */\n    public static doStaticRelease(): void {\n      CubismShader_Laya.deleteInstance();\n    }\n\n    /**\n     * 设置渲染状态\n     * @param viewport ビューポート\n     */\n    // public setRenderState(viewport: number[]): void {\n    //   s_viewport = viewport;\n    // }\n\n    /**\n     * 描画開始時の追加処理\n     * モデルを描画する前にクリッピングマスクに必要な処理を実装している\n     */\n    public preDraw(): void {\n      if (this.firstDraw) {\n        this.firstDraw = false;\n\n        // 拡張機能を有効にする\n        this._anisortopy =\n          this.gl.getExtension('EXT_texture_filter_anisotropic') ||\n          this.gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic') ||\n          this.gl.getExtension('MOZ_EXT_texture_filter_anisotropic');\n      }\n\n      this.gl.disable(this.gl.SCISSOR_TEST);\n      this.gl.disable(this.gl.STENCIL_TEST);\n      this.gl.disable(this.gl.DEPTH_TEST);\n\n      // カリング（1.0beta3）\n      this.gl.frontFace(this.gl.CW);\n\n      this.gl.enable(this.gl.BLEND);\n      this.gl.colorMask(true, true, true, true);\n\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null); // 前にバッファがバインドされていたら破棄する必要がある\n      this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, null);\n    }\n\n    /**\n     * マスクテクスチャに描画するクリッピングコンテキストをセットする\n     */\n    public setClippingContextBufferForMask(clip: CubismClippingContext) {\n      this._clippingContextBufferForMask = clip;\n    }\n\n    /**\n     * マスクテクスチャに描画するクリッピングコンテキストを取得する\n     * @return マスクテクスチャに描画するクリッピングコンテキスト\n     */\n    public getClippingContextBufferForMask(): CubismClippingContext {\n      return this._clippingContextBufferForMask;\n    }\n\n    /**\n     * 画面上に描画するクリッピングコンテキストをセットする\n     */\n    public setClippingContextBufferForDraw(clip: CubismClippingContext): void {\n      this._clippingContextBufferForDraw = clip;\n    }\n\n    /**\n     * 画面上に描画するクリッピングコンテキストを取得する\n     * @return 画面上に描画するクリッピングコンテキスト\n     */\n    public getClippingContextBufferForDraw(): CubismClippingContext {\n      return this._clippingContextBufferForDraw;\n    }\n\n    /**\n     * glの設定\n     */\n    // public startUp(gl: WebGLRenderingContext): void {\n    //   this.gl = gl;\n    //   this._clippingManager.setGL(gl);\n    //   CubismShader_WebGL.getInstance().setGl(gl);\n    // }\n\n    _textures: csmMap<number, WebGLTexture>; // モデルが参照するテクスチャとレンダラでバインドしているテクスチャとのマップ\n    _sortedDrawableIndexList: csmVector<number>; // 描画オブジェクトのインデックスを描画順に並べたリスト\n    _clippingManager: CubismClippingManager_WebGL; // クリッピングマスク管理オブジェクト\n    _clippingContextBufferForMask: CubismClippingContext; // マスクテクスチャに描画するためのクリッピングコンテキスト\n    _clippingContextBufferForDraw: CubismClippingContext; // 画面上描画するためのクリッピングコンテキスト\n    firstDraw: boolean;\n    _bufferData: {\n      vertex: WebGLBuffer;\n      uv: WebGLBuffer;\n      index: WebGLBuffer;\n    }; // 頂点バッファデータ\n    // webglコンテキスト\n    public get gl(): WebGLRenderingContext{\n        return CubismShader_Laya.gl;\n    }\n  }\n\n  /**\n   * レンダラが保持する静的なリソースを開放する\n   */\n  CubismRenderer.staticRelease = (): void => {\n    CubismRenderer_WebGL.doStaticRelease();\n  };\n}\n","export class Live2DConfig {\n    constructor() {\n        \n    }\n    /**是否为debug模式 */\n    public static debugMode:Boolean = false;\n}","\nimport { Live2DCubismFramework as live2dcubismframework } from '../../framework/live2dcubismframework';\nimport { Live2DCubismFramework as cubismmotionmanager } from '../../framework/motion/cubismmotionmanager';\nimport { Live2DCubismFramework as cubismmodel } from '../../framework/model/cubismmodel';\nimport { Live2DCubismFramework as cubismid } from '../../framework/id/cubismid';\nimport { Live2DCubismFramework as cubismmodelmatrix } from '../../framework/math/cubismmodelmatrix';\nimport { Live2DCubismFramework as cubismmotion } from '../../framework/motion/cubismmotion';\nimport { Live2DCubismFramework as cubismexpressionmotion } from '../../framework/motion/cubismexpressionmotion';\nimport { Live2DCubismFramework as acubismmotion } from '../../framework/motion/acubismmotion';\nimport { Live2DCubismFramework as cubismmodelsettingjson } from '../../framework/cubismmodelsettingjson';\nimport { Live2DCubismFramework as cubismmoc } from '../../framework/model/cubismmoc';\nimport { Live2DCubismFramework as csmmap } from '../../framework/type/csmmap';\nimport { Live2DCubismFramework as cubismphysics } from '../../framework/physics/cubismphysics';\nimport { Live2DCubismFramework as cubismpose } from '../../framework/effect/cubismpose';\nimport { Live2DCubismFramework as cubismbreath } from '../../framework/effect/cubismbreath';\nimport { Live2DCubismFramework as cubismeyeblink } from '../../framework/effect/cubismeyeblink';\nimport { Live2DCubismFramework as csmvector } from '../../framework/type/csmvector';\nimport { Live2DCubismFramework as cubismdefaultparameterid } from '../../framework/cubismdefaultparameterid';\nimport { Live2DCubismFramework as cubismmodeluserdata } from '../../framework/model/cubismmodeluserdata';\nimport { Live2DCubismFramework as cubismmotionqueuemanager } from '../../framework/motion/cubismmotionqueuemanager';\nimport { Live2DCubismFramework as csmstring } from '../../framework/type/csmstring';\nimport { Live2DCubismFramework as cubismtargetpoint } from '../../framework/math/cubismtargetpoint';\nimport { Live2DCubismFramework as cubismrenderer_webgl } from '../render/Live2Drenderer';\nimport { Live2DCubismFramework as cubismmatrix44 } from '../../framework/math/cubismmatrix44';\n\nimport CubismRenderer_WebGL = cubismrenderer_webgl.CubismRenderer_WebGL;\nimport FinishedMotionCallback = acubismmotion.FinishedMotionCallback;\nimport CubismModelUserData = cubismmodeluserdata.CubismModelUserData;\nimport CubismIdHandle = cubismid.CubismIdHandle;\nimport Constant = live2dcubismframework.Constant;\nimport CubismMatrix44 = cubismmatrix44.CubismMatrix44;\nimport CubismPose = cubismpose.CubismPose;\nimport CubismMoc = cubismmoc.CubismMoc;\nimport CubismBreath = cubismbreath.CubismBreath;\nimport CubismMotionQueueManager = cubismmotionqueuemanager.CubismMotionQueueManager;\nimport CubismEyeBlink = cubismeyeblink.CubismEyeBlink;\nimport BreathParameterData = cubismbreath.BreathParameterData;\nimport CubismModelSettingJson = cubismmodelsettingjson.CubismModelSettingJson;\nimport ACubismMotion = acubismmotion.ACubismMotion;\nimport CubismModel = cubismmodel.CubismModel;\nimport csmVector = csmvector.csmVector;\nimport CubismMotion = cubismmotion.CubismMotion;\nimport CubismPhysics = cubismphysics.CubismPhysics;\nimport CubismExpressionMotion = cubismexpressionmotion.CubismExpressionMotion;\nimport CubismModelMatrix = cubismmodelmatrix.CubismModelMatrix;\nimport CubismFramework = live2dcubismframework.CubismFramework;\nimport csmMap = csmmap.csmMap;\nimport CubismDefaultParameterId = cubismdefaultparameterid;\nimport CubismMotionManager = cubismmotionmanager.CubismMotionManager;\nimport csmString = csmstring.csmString;\nimport CubismTargetPoint = cubismtargetpoint.CubismTargetPoint;\n\nimport { Live2DConfig } from '../core/Live2DConfig';\nimport { Live2DSubmit } from '../render/Live2DSubmit';\nimport { Sprite } from 'laya/display/Sprite';\nimport { Texture2D } from 'laya/resource/Texture2D';\nimport { Matrix } from 'laya/maths/Matrix';\nimport { Browser } from 'laya/utils/Browser';\nimport { Laya } from 'Laya';\nimport { WarpMode } from 'laya/resource/WrapMode';\nimport { TextureFormat } from 'laya/resource/TextureFormat';\nimport { Context } from 'laya/resource/Context';\nimport { Loader } from 'laya/net/Loader';\nimport { Event } from 'laya/events/Event';\nimport { Point } from 'laya/maths/Point';\n\n/**\n * 继承自framework model，Laya封装加载\n */\nexport class Live2DModel extends Sprite{\n  /** 计算用临时点 */\n    static TEMPPOINT:Point = new Point();\n    /**模型实例 */\n    private _model:CubismModel;\n    /**型号设定信息 */\n    public setting:CubismModelSettingJson;\n    /**Moc数据 */\n    private _moc:CubismMoc;\n    /**模型矩阵 */\n    private _modelMatrix:CubismModelMatrix;\n    /**加载的面部表情列表 */\n    public _expressions = new csmMap<string, ACubismMotion>();\n    public _expressionUrls:Array<string>;\n    public _expressionNames:Array<string>;\n    /**自动眨眼 */\n    private _eyeBlink: CubismEyeBlink; \n    /**呼吸 */ \n    private _breath: CubismBreath; \n    /**加载动作列表 */\n    public _motions = new csmMap<string, ACubismMotion>();\n    /**需要加载的动作文件列表 */\n    public _motionUrls:Array<{url:string,index:number,key:string,name:string,type:string}>;\n    /**需要加载的动作分组列表 */\n    public _motionGroups:Array<string>;\n    /**物理相关 */\n    private _physics:CubismPhysics;\n    /**姿势管理 */\n    private _pose: CubismPose;\n    /**用户数据 */\n    private _modelUserData: CubismModelUserData;\n    /**文件夹路径 */\n    public _modelHomeDir:string;\n    /**  参数ID: ParamAngleX*/\n    private _idParamAngleX: CubismIdHandle; \n    /**  参数ID: ParamAngleY*/\n    private _idParamAngleY: CubismIdHandle; \n    /**  参数ID: ParamAngleZ*/\n    private _idParamAngleZ: CubismIdHandle; \n    /**  参数ID: ParamEyeBallX*/\n    private _idParamEyeBallX: CubismIdHandle; \n    /** 参数ID: ParamEyeBAllY*/\n    private _idParamEyeBallY: CubismIdHandle; \n    /** 参数ID: ParamBodyAngleX*/\n    private _idParamBodyAngleX: CubismIdHandle; \n    /**在模型中设置的眨眼功能的参数ID */\n    private _eyeBlinkIds: csmVector<CubismIdHandle>\n    /** 模型中设置的口型同步功能的参数ID */\n    private _lipSyncIds: csmVector<CubismIdHandle>\n    // 动作管理\n    private _motionManager: CubismMotionManager; \n    // 表情管理\n    private _expressionManager:CubismMotionManager;\n    // 动作总数\n    private _allMotionCount: number; \n\n    private _initialized = true;\n    /**贴图urls */\n    public _textureUrls:Array<any>;\n    /**贴图池子 */\n    public _texturePool:Array<Texture2D>;\n    //鼠标拖动\n    private _dragManager:CubismTargetPoint;\n    // 增量时间积分值[秒]\n    private _userTimeSeconds: number; \n    // 鼠标拖动的X位置\n    private _dragX: number; \n    // 鼠标拖动的Y位置\n    private _dragY: number; \n    // 是否嘴唇同步\n    private _lipsync: boolean;\n    // 渲染器\n    private _renderer: CubismRenderer_WebGL; \n    /**还原矩阵*/\n    private projection:CubismMatrix44;\n    /**模型宽 */\n    public modelWidth:number;\n    /**模型高 */\n    public modelHeight:number;\n    /**模型x中心点 */\n    public modelOriginX:number;\n    /**模型y中心点 */\n    public modelOriginY:number;\n    /**缩放与平移矩阵 */\n    private scaleAndTran: CubismMatrix44\n    /**mvp矩阵 */\n    private mvpMatrix:CubismMatrix44;\n    /**记录矩阵 */\n    private _lastMat:Matrix;\n    /**默认的动画播放group 默认是获取到的第一个 */\n    private _defaultGroup:string;\n    /** 文件名映射列表 */\n    private _fileMap:object;\n    /**是否自动轮播默认组动画 */\n    public isAutoPlay:boolean = true;\n\n    private _needChanged = true;\n\n    constructor(){\n      super();\n      this._fileMap = {};\n      this.mouseThrough = false;\n      this.mouseEnabled = true;\n      this._userTimeSeconds = 0;\n      this._lipsync = false;\n      this._lastMat = new Matrix();\n      this.customRenderEnable = true;\n      this.scaleAndTran = new CubismMatrix44();\n      this.projection = new CubismMatrix44();\n      this._motionManager = new CubismMotionManager();\n      this._motionManager.setEventCallback(\n        Live2DModel.cubismDefaultMotionEventCallback,\n        this\n      );\n      this._expressionManager = new CubismMotionManager();\n      \n      this._dragManager = new CubismTargetPoint();\n\n      this._eyeBlinkIds = new csmVector<CubismIdHandle>();\n      this._lipSyncIds = new csmVector<CubismIdHandle>();\n      this._idParamAngleX = CubismFramework.getIdManager().getId(\n        CubismDefaultParameterId.ParamAngleX\n      );\n      this._idParamAngleY = CubismFramework.getIdManager().getId(\n        CubismDefaultParameterId.ParamAngleY\n      );\n      this._idParamAngleZ = CubismFramework.getIdManager().getId(\n        CubismDefaultParameterId.ParamAngleZ\n      );\n      this._idParamEyeBallX = CubismFramework.getIdManager().getId(\n        CubismDefaultParameterId.ParamEyeBallX\n      );\n      this._idParamEyeBallY = CubismFramework.getIdManager().getId(\n        CubismDefaultParameterId.ParamEyeBallY\n      );\n      this._idParamBodyAngleX = CubismFramework.getIdManager().getId(\n        CubismDefaultParameterId.ParamBodyAngleX\n      );\n\n      Laya.stage.on(Event.RESIZE,this,this._onResize);\n    }\n\n    private _onResize(){\n      this._needChanged = true;\n    }\n\n    /**\n     * 加载模型数据 \n     * @param buffer 从中读取moc3文件的缓冲区\n     */\n    public loadModel(buffer:ArrayBuffer):void{\n      this._moc = CubismMoc.create(buffer);\n      this._model = this._moc.createModel();\n      this._model.saveParameters();\n\n      if (this._moc == null || this._model == null) {\n        console.warn('Failed to CreateModel().');\n        return;\n      }\n      \n      this._modelMatrix = new CubismModelMatrix(\n        this._model.getCanvasWidth(),\n        this._model.getCanvasHeight()\n      );\n    \n      this.modelWidth = this._model.getModel().canvasinfo.CanvasWidth;\n      this.modelHeight =  this._model.getModel().canvasinfo.CanvasHeight;\n      this.modelOriginX = this._model.getModel().canvasinfo.CanvasOriginX;\n      this.modelOriginY = this._model.getModel().canvasinfo.CanvasOriginY;\n      \n      this._needChanged = true;\n      this.width = this.modelWidth;\n      this.height = this.modelHeight;\n    } \n\n    public createSetting(buffer:ArrayBuffer):void{\n      this._initialized = false;\n      this.setting = new CubismModelSettingJson(buffer,buffer.byteLength);\n    }\n\n    /**\n     * 载入运动数据\n     * @param buffer 读取motion3.json文件的缓冲区\n     * @param size 缓冲区大小\n     * @param name 动作的名称\n     * @param onFinishedMotionHandler 动态播放结束时调用的回调函数\n     * @return 运动节点\n     */\n    public loadMotion(\n        buffer: ArrayBuffer,\n        size: number,\n        onFinishedMotionHandler?: any\n      ) :CubismMotion{\n          return CubismMotion.create(buffer, size, onFinishedMotionHandler);\n    } \n\n    /**\n     * 读取面部表情数据\n     * @param buffer 读取exp文件的缓冲区\n     * @param size 缓冲区大小\n     * @param name 表情名字\n     */\n    public loadExpression(\n        buffer: ArrayBuffer,\n        size: number,\n        name:string\n      ): void {\n        let motion: ACubismMotion = CubismExpressionMotion.create(buffer, size);\n        if (this._expressions.getValue(name) != null) {\n          ACubismMotion.delete(\n            this._expressions.getValue(name)\n          );\n          this._expressions.setValue(name, null);\n        }\n        this._expressions.setValue(name, motion);\n    }\n    \n    /**\n     * 读取附加到模型的用户数据\n     * @param buffer 读取userdata3.json的缓冲区\n     * @param size 缓冲区大小\n     */\n    public loadUserData(buffer: ArrayBuffer, size: number): void {\n      this._modelUserData = CubismModelUserData.create(buffer, size);\n    }\n\n    /**\n     *读取物理数据\n     * @param buffer 加载physics3.json的缓冲区\n     * @param size 缓冲区大小\n     */\n    public loadPhysics(buffer: ArrayBuffer, size: number): void {\n      this._physics = CubismPhysics.create(buffer, size);\n    }\n    /**\n     *读取姿势数据\n     * @param buffer 加载pose3.json的缓冲区\n     * @param size 缓冲区大小\n     */\n    public loadPose(buffer: ArrayBuffer, size: number): void {\n      this._pose = CubismPose.create(buffer, size);\n    }\n\n    public setupEyeBlink():void{\n      if (this.setting.getEyeBlinkParameterCount()>0) {\n        this._eyeBlink = CubismEyeBlink.create(this.setting);\n      }\n    }\n\n    public setupBreath():void{\n      this._breath = CubismBreath.create();\n\n      let breathParameters: csmVector<BreathParameterData> = new csmVector();\n      breathParameters.pushBack(\n        new BreathParameterData(this._idParamAngleX, 0.0, 15.0, 6.5345, 0.5)\n      );\n      breathParameters.pushBack(\n        new BreathParameterData(this._idParamAngleY, 0.0, 8.0, 3.5345, 0.5)\n      );\n      breathParameters.pushBack(\n        new BreathParameterData(this._idParamAngleZ, 0.0, 10.0, 5.5345, 0.5)\n      );\n      breathParameters.pushBack(\n        new BreathParameterData(this._idParamBodyAngleX, 0.0, 4.0, 15.5345, 0.5)\n      );\n      breathParameters.pushBack(\n        new BreathParameterData(\n          CubismFramework.getIdManager().getId(\n            CubismDefaultParameterId.ParamBreath\n          ),\n          0.0,\n          0.5,\n          3.2345,\n          0.5\n        )\n      );\n      this._breath.setParameters(breathParameters);\n    }\n    \n    public setupEyeBlinkIds():void{\n      let eyeBlinkIdCount: number = this.setting.getEyeBlinkParameterCount();\n      for (let i = 0; i < eyeBlinkIdCount; ++i) {\n        this._eyeBlinkIds.pushBack(this.setting.getEyeBlinkParameterId(i));\n      }\n    }\n\n    public setupLipSyncIds (): void{\n      let lipSyncIdCount = this.setting.getLipSyncParameterCount();\n      for (let i = 0; i < lipSyncIdCount; ++i) {\n        this._lipSyncIds.pushBack(this.setting.getLipSyncParameterId(i));\n      }\n    }\n\n    public setupLayout():void{\n      let layout: csmMap<string, number> = new csmMap<string, number>();\n      this.setting.getLayoutMap(layout);\n      this._modelMatrix.setupFromLayout(layout);\n    }\n\n    // Motion\n    public loadCubismMotion():void{\n      this._model.saveParameters();\n      this._allMotionCount = 0;\n      let motionGroupCount: number = this.setting.getMotionGroupCount();\n      //如果有动作\n      if (motionGroupCount) {\n        this._motionGroups = [];\n        // 查找动作总数\n        let group;\n        for (let i = 0; i < motionGroupCount; i++) {\n          group = this.setting.getMotionGroupName(i);\n          this._motionGroups.push(group);\n          this._allMotionCount += this.setting.getMotionCount(group);\n        }\n        this._defaultGroup = this._motionGroups[0];\n      }\n    }\n\n    /**\n     * 从组名中批量加载运动数据。\n     * 运动数据的名称是从ModelSetting内部获取的。\n     */\n    public loadMotionGroup():void{\n      let element ,buffer:ArrayBuffer;\n      for (let i = 0; i < this._motionUrls.length; i++) {\n        element = this._motionUrls[i];\n        this.createMotion(element.name,element.url,element.key,element.index);\n      }\n    }\n\n    \n    /**\n     * 创建一个动作\n     * @param name 名称，name为null是不会记录缓存\n     * @param url 动画地址\n     * @param group 动画分组\n     * @param index 动画分组索引\n     */\n    private createMotion(name:string,url:string,group:string,index:number):CubismMotion{\n        let buffer = Laya.loader.getRes(url);\n        if (!buffer||!(buffer instanceof ArrayBuffer)) {\n          console.warn(`createMotion fail! filename: ${url}, name:${name},group:${group},index:${index}`);\n          return;\n        }\n        let strs = url.split(\"/\");\n        let filename = strs[strs.length-1].split(\".\")[0];\n        this._fileMap[group+ \"_\"+ filename] = index;\n        let tmpMotion:CubismMotion = this.loadMotion(buffer,buffer.byteLength);\n\n        let fadeTime = this.setting.getMotionFadeInTimeValue(group, index);\n        if (fadeTime >= 0.0) {\n          tmpMotion.setFadeInTime(fadeTime);\n        }\n\n        fadeTime = this.setting.getMotionFadeOutTimeValue(group, index);\n        if (fadeTime >= 0.0) {\n          tmpMotion.setFadeOutTime(fadeTime);\n        }\n        tmpMotion.setEffectIds(this._eyeBlinkIds, this._lipSyncIds);\n\n        if (name) {\n          if (this._motions.getValue(name) != null) {\n            ACubismMotion.delete(this._motions.getValue(name));\n          }\n          this._motions.setValue(name, tmpMotion);\n        }\n        if (Live2DConfig.debugMode) {\n          console.log(`[APP]load motion: ${url} => [${group}_${index}]`);\n        }\n        return tmpMotion;\n    }\n    \n    /**\n     * 加载完成 init模型\n     * @param isPremultipliedAlpha 是否预乘Alpha, default：true\n     */\n    public initModel(isPremultipliedAlpha:boolean = true):void{\n      // 全てのモーションを停止する\n      this._motionManager.stopAllMotions();\n      this._initialized = true;\n      this.createRenderer();\n      this.renderer.setClipRect(0,0,Laya.stage.width,Laya.stage.height);\n      this._texturePool = [];\n      let element:any,texture:Texture2D,img:any;\n      for (let index = 0; index < this._textureUrls.length; index++) {\n        element = this._textureUrls[index];\n        img = Laya.loader.getRes(element.url);\n        texture = new Texture2D(img.width,img.height,TextureFormat.R8G8B8A8,true,false);\n        texture.wrapModeU = WarpMode.Clamp;\n        texture.wrapModeV = WarpMode.Clamp;\n        texture.loadImageSource(img,isPremultipliedAlpha);\n        texture._setCreateURL(img.src);\n        if (!texture) {\n          console.warn(\"Texture load fail! url:\"+element);\n          return\n        }\n        this.renderer.bindTexture(index,(texture as any)._glTexture);\n        texture.lock = true;\n        this._texturePool[index] = texture;\n      }\n      this.renderer.setIsPremultipliedAlpha(isPremultipliedAlpha);\n    }\n    \n    public customRender(context:Context,x:number,y:number){\n      let _cMat:Matrix = (context as any)._curMat;\n      if(this._lastMat.a != _cMat.a){\n        this._lastMat.a = _cMat.a;\n        this._needChanged = true;\n      } \n      if(this._lastMat.d != _cMat.d){\n        this._lastMat.d = _cMat.d;\n        this._needChanged = true;\n      }\n      if(_cMat.tx  + _cMat.a * x!= this._lastMat.tx ){\n        this._lastMat.tx = _cMat.tx + _cMat.a *x;\n        this._needChanged = true;\n      }\n      if(this._lastMat.ty  != _cMat.ty + _cMat.d * y){\n        this._lastMat.ty = _cMat.ty + _cMat.d * y;\n        this._needChanged = true;\n      }\n      this.refreshScaleAndTranM();\n      context.addRenderObject(Live2DSubmit.create(this));\n      context.breakNextMerge();\n    }\n    /**\n     * 动画更新\n     * @param deltaTimeSeconds 更新时间\n     */\n    public update(deltaTimeSeconds:number):void{\n      this._userTimeSeconds += deltaTimeSeconds;\n      this._dragManager.update(deltaTimeSeconds);\n      this._dragX = this._dragManager.getX();\n      this._dragY = this._dragManager.getY();\n      // モーションによるパラメータ更新の有無\n      let motionUpdated = false;\n\n      //--------------------------------------------------------------------------\n      this._model.loadParameters(); // 前回セーブされた状態をロード\n      if (this._motionManager.isFinished()) {\n        // 如果没有动作播放，则从待机动作中随机播放\n        if(this.isAutoPlay){\n          this.startRandomMotion(\n            this._defaultGroup,\n            3\n          );\n        }\n      } else {\n        motionUpdated = this._motionManager.updateMotion(\n          this._model,\n          deltaTimeSeconds\n        ); // モーションを更新\n      }\n      this._model.saveParameters(); // 状態を保存\n      //--------------------------------------------------------------------------\n\n      // まばたき\n      if (!motionUpdated) {\n        if (this._eyeBlink != null) {\n          // メインモーションの更新がないとき\n          this._eyeBlink.updateParameters(this._model, deltaTimeSeconds); // 目パチ\n        }\n      }\n\n      if (this._expressionManager != null) {\n        this._expressionManager.updateMotion(this._model, deltaTimeSeconds); // 表情でパラメータ更新（相対変化）\n      }\n\n      // ドラッグによる変化\n      // ドラッグによる顔の向きの調整\n      this._model.addParameterValueById(this._idParamAngleX, this._dragX * 30); // -30から30の値を加える\n      this._model.addParameterValueById(this._idParamAngleY, this._dragY * 30);\n      this._model.addParameterValueById(\n        this._idParamAngleZ,\n        this._dragX * this._dragY * -30\n      );\n\n      // ドラッグによる体の向きの調整\n      this._model.addParameterValueById(\n        this._idParamBodyAngleX,\n        this._dragX * 10\n      ); // -10から10の値を加える\n\n      // ドラッグによる目の向きの調整\n      this._model.addParameterValueById(this._idParamEyeBallX, this._dragX); // -1から1の値を加える\n      this._model.addParameterValueById(this._idParamEyeBallY, this._dragY);\n\n      // 呼吸など\n      if (this._breath != null) {\n        this._breath.updateParameters(this._model, deltaTimeSeconds);\n      }\n\n      // 物理演算の設定\n      if (this._physics != null) {\n        this._physics.evaluate(this._model, deltaTimeSeconds);\n      }\n\n      // 嘴唇同步设置\n      if (this._lipsync) {\n        let value = 0; // 要进行实时唇形同步，请从系统获取音量并输入0到1之间的值。\n\n        for (let i = 0; i < this._lipSyncIds.getSize(); ++i) {\n          this._model.addParameterValueById(this._lipSyncIds.at(i), value, 0.8);\n        }\n      }\n\n      // ポーズの設定\n      if (this._pose != null) {\n        this._pose.updateParameters(this._model, deltaTimeSeconds);\n      }\n\n      this.mvpMatrix = this.scaleAndTran.clone();\n      this.mvpMatrix.multiplyByMatrix(this.projection);\n      this._model.update();\n      this.renderer.setMvpMatrix(this.mvpMatrix);\n      // 通过画布尺寸\n      this._renderer.doDrawModel();\n    }\n\n    /**\n     * 重新生成缩放与位移矩阵\n     */\n    public refreshScaleAndTranM(){\n      if (!this._needChanged) {\n        return\n      }\n      this._needChanged = false;\n\n      let width = Browser.mainCanvas.width;\n      let height = Browser.mainCanvas.height;\n      let scaleNum :number \n      if(this.modelHeight > this.modelWidth){\n        scaleNum= this.modelWidth * 2 / width;\n      }else{\n        scaleNum = this.modelHeight *2 / width;\n      }\n      this.projection.scale(scaleNum , scaleNum * width/height);\n\n      let a = this._lastMat.a ,d = this._lastMat.d,x = this._lastMat.tx,y = this._lastMat.ty;\n      this.scaleAndTran.scale(a,d);\n      let canvasx = (x  + a * ( this.modelOriginX - this.pivotX)) * 2 / width -1;\n      let canvasy = 1 - (y  + d * (this.modelOriginY - this.pivotY)) * 2 / height;\n      this.scaleAndTran.translate(canvasx,canvasy);\n    } \n    \n    public set defaultGroup(group:string) {\n      if (group != this._defaultGroup) {\n        if (this._defaultGroup.indexOf(group) == -1) {\n          console.log(\"Can not find Motion Group:\",group);\n          this._defaultGroup = group;\n        }\n      }\n    }\n\n    public get defaultGroup():string{\n      return this._defaultGroup;\n    }\n    /**\n     * 渲染器获取，不推荐获取去使用结果不可控\n     * @return CubismRenderer_WebGL\n     */\n    public get renderer(): CubismRenderer_WebGL {\n      return this._renderer;\n    }\n\n    /**\n     * 创建渲染器并执行初始化\n     */\n    public createRenderer(): void {\n      if (this._renderer) {\n        this.deleteRenderer();\n      }\n\n      this._renderer = new CubismRenderer_WebGL();\n      this._renderer.initialize(this._model);\n      this._renderer.owner = this;\n    }\n\n    /**\n     * レンダラの解放\n     */\n    public deleteRenderer(): void {\n      if (this._renderer != null) {\n        this._renderer.release();\n        this._renderer = null;\n      }\n    }\n\n    /**\n     * live2d model获取\n     * @return CubismModel\n     */\n    public getModel():CubismModel{\n      return this._model;\n    }\n\n    /**\n     * @readonly\n     * 动作管理\n     */\n    public get motionManager():CubismMotionManager{\n      return this._motionManager;\n    }\n\n    /**\n     * @readonly\n     * 表情管理\n     */\n    public get expressionManager():CubismMotionManager{\n      return this._expressionManager;\n    }\n\n    /**\n     * @readonly\n     * 获取Live2D物理\n     */\n    public get physics():CubismPhysics{\n      return this._physics;\n    }\n\n    /**\n     * @readonly\n     * 拖动管理\n     */\n    public get dragManager(){\n      return this._dragManager;\n    }\n    /**\n     * @readonly\n     * 动作总数\n     */\n    public get allMotionCount():number{\n      return this._allMotionCount;\n    }\n\n    /**\n     * 是否开启嘴唇同步\n     */\n    public get lipsync():boolean{\n      return this._lipsync;\n    }\n    /**\n     * 是否开启嘴唇同步\n     */\n    public set lipsync(value:boolean){\n      this._lipsync = value;\n    }\n    /**\n     * 设置鼠标拖动信息\n     * @param 拖动光标的X位置\n     * @param 拖动光标的Y位置\n     */\n    public setDragging(x: number, y: number): void {\n      let point = Live2DModel.TEMPPOINT.setTo(x,y);\n      this.changeToRenderPoint(point)\n      this._dragManager.set(point.x, point.y);\n    }\n\n    /**\n     * 引数で指定したモーションの再生を開始する\n     * @param group モーショングループ名\n     * @param no グループ内の番号\n     * @param priority 優先度\n     * @param onFinishedMotionHandler モーション再生終了時に呼び出されるコールバック関数\n     * @return 開始したモーションの識別番号を返す。個別のモーションが終了したか否かを判定するisFinished()の引数で使用する。開始できない時は[-1]\n     */\n    public startMotion(\n      group: string,\n      no: number,\n      priority: number,\n      onFinishedMotionHandler?: FinishedMotionCallback\n    ): any {\n      if (priority == 3) {\n        this._motionManager.setReservePriority(priority);\n      } else if (!this._motionManager.reserveMotion(priority)) {\n        console.warn(\"[APP]can't start motion.\");\n        return -1;\n      }\n      // ex) idle_0\n      let motion: CubismMotion = this.getMotion(group,no) as CubismMotion;\n      let autoDelete = false;\n      \n      if (motion == null) {\n        let motionFileName = this.setting.getMotionFileName(group, no);\n          motion = this.createMotion(null,`${this._modelHomeDir}/${motionFileName}`,group,no);\n          if (!motion) {\n            console.warn(\"[APP]can't start motion.\");\n            return -1;\n          }\n          autoDelete = true; // 終了時にメモリから削除\n      } else {\n        motion.setFinishedMotionHandler(onFinishedMotionHandler);\n      }\n      if (Live2DConfig.debugMode) {\n        console.log(`[APP]start motion: [${group}_${no}`);\n      }\n      return this._motionManager.startMotionPriority(\n        motion,\n        autoDelete,\n        priority\n      );\n    }\n\n    /**\n     * 通过分组+文件名来播放动作\n     * @param group モーショングループ名\n     * @param filename 文件名\n     * @param priority 優先度\n     * @param onFinishedMotionHandler モーション再生終了時に呼び出されるコールバック関数\n     * @return 開始したモーションの識別番号を返す。個別のモーションが終了したか否かを判定するisFinished()の引数で使用する。開始できない時は[-1]\n     */\n    public startMotionByName(\n      group: string,\n      filename: string,\n      priority: number,\n      onFinishedMotionHandler?: FinishedMotionCallback\n    ): any {\n      if (priority == 3) {\n        this._motionManager.setReservePriority(priority);\n      } else if (!this._motionManager.reserveMotion(priority)) {\n        console.warn(\"[APP]can't start motion.\");\n        return -1;\n      }\n      let motion: CubismMotion = this.getMotionByFileName(group,filename) as CubismMotion;\n      \n      if (motion == null) {\n          console.warn(\"[APP]can't start motion.\");\n          return -1;\n      } else {\n        motion.setFinishedMotionHandler(onFinishedMotionHandler);\n      }\n      \n      if (Live2DConfig.debugMode) {\n        console.log(`[APP]start motion: [${group}_${filename}`);\n      }\n\n      return this._motionManager.startMotionPriority(\n        motion,\n        false,\n        priority\n      );\n    }\n    \n    /**\n     * 通过分组与编号获取当前动作池中的原生对象\n     * @param group 动作分组\n     * @param index 动作索引\n     */\n    public getMotion(group:string,index:number):ACubismMotion{\n      return this._motions.getValue(`${group}_${index}`);\n    }\n\n    /**\n     * 通过动作文件名获取当前对象池中的原生对象\n     * @param group \n     * @param filename \n     */\n    public getMotionByFileName(group:string,filename:string):ACubismMotion{\n      return this._motions.getValue(`${group}_${this._fileMap[group+\"_\"+filename]}`);\n    }\n    /**\n     * 开始播放随机选择的动作。\n     * @param group 运动组名称\n     * @param priority 優先度\n     * @param onFinishedMotionHandler 动态播放结束时调用的回调函数\n     * @return 返回开始的动作的标识号。 在isFinished（）的参数中使用它来确定单个运动是否已完成。 如果无法启动[-1]\n     */\n    public startRandomMotion(\n      group: string,\n      priority: number,\n      onFinishedMotionHandler?: FinishedMotionCallback\n    ): any {\n      if (this.setting.getMotionCount(group) == 0) {\n        return -1;\n      }\n\n      let no: number = Math.floor(\n        Math.random() * this.setting.getMotionCount(group)\n      );\n\n      return this.startMotion(group, no, priority, onFinishedMotionHandler);\n    }\n\n    /**\n     * 通过动作名字获取当前动作池中的原生对象\n     * @param expressionId 表情动作ID\n     */\n    public getExpression(expressionId:string):ACubismMotion{\n      return this._expressions.getValue(expressionId);\n    }\n\n    /**\n     * 设置参数指定的面部表情运动\n     * @param expressionId 表情动作ID\n     */\n    public setExpression(expressionId: string): void {\n      const motion: ACubismMotion = this.getExpression(expressionId);\n      if (motion != null) {\n        this._expressionManager.startMotionPriority(\n          motion,\n          false,\n          3\n        );\n      } else {\n          console.warn(`[APP]expression[${expressionId}] is null`);\n      }\n    }\n\n    /**\n     * 设置随机选择的面部表情动作\n     */\n    public setRandomExpression(): void {\n      if (this._expressions.getSize() == 0) {\n        return;\n      }\n\n      const no: number = Math.floor(Math.random() * this._expressions.getSize());\n\n      for (let i = 0; i < this._expressions.getSize(); i++) {\n        if (i == no) {\n          let name: string = this._expressions._keyValues[i].first;\n          this.setExpression(name);\n          return;\n        }\n      }\n    }\n    /**\n     * 转换为渲染点\n     * @param point \n     */\n    public changeToRenderPoint(form:Point,out:Point = null):Point{\n      if(!out){\n        out = form;\n      }else{\n        out.setTo(form.x,form.y);\n      }\n\n      let cheight = Browser.mainCanvas.height,cwidth = Browser.mainCanvas.width;\n      out.x = out.x / Laya.stage.width * cwidth;\n      out.y = out.y / Laya.stage.height * cheight;\n\n      out.x = out.x * 2 / cwidth - 1;\n      out.y = 1 - out.y * 2 / cheight ;\n\n      let tx: number = this.projection.invertTransformX(this.scaleAndTran.invertTransformX(out.x));\n      let ty: number = this.projection.invertTransformY(this.scaleAndTran.invertTransformY(out.y));\n      out.setTo(tx,ty);\n      return out;\n    }\n    /**\n     * 当たり判定テスト\n     * 指定ＩＤの頂点リストから矩形を計算し、座標をが矩形範囲内か判定する。\n     *\n     * @param hitArenaName  当たり判定をテストする対象のID\n     * @param x             判定を行うX座標\n     * @param y             判定を行うY座標\n     */\n    public live2DHitTest(hitArenaName: string, x: number, y: number):boolean{\n      if (!this.hitTestPoint(x,y)) {\n        return false;\n      }\n      let point= Live2DModel.TEMPPOINT.setTo(x,y);\n      this.changeToRenderPoint(point)\n      let count: number = this.setting.getHitAreasCount();\n      for (let i = 0; i < count; i++) {\n        if ( this.setting.getHitAreaName(i) == hitArenaName) {\n          const drawId: CubismIdHandle = this.setting.getHitAreaId(i);\n          return this.live2DIsHit(drawId, point.x, point.y);\n        }\n      }\n      return false;\n    }\n\n    /**\n     * 当たり判定の取得\n     * @param drawableId 検証したいDrawableのID\n     * @param pointX X位置\n     * @param pointY Y位置\n     * @return true ヒットしている\n     * @return false ヒットしていない\n     */\n    public live2DIsHit(\n      drawableId: CubismIdHandle,\n      pointX: number,\n      pointY: number\n    ): boolean {\n      \n      const drawIndex: number = this._model.getDrawableIndex(drawableId);\n\n      if (drawIndex < 0) {\n        return false; // 存在しない場合はfalse\n      }\n\n      const count: number = this._model.getDrawableVertexCount(drawIndex);\n      const vertices: Float32Array = this._model.getDrawableVertices(drawIndex);\n\n      let left: number = vertices[0];\n      let right: number = vertices[0];\n      let top: number = vertices[1];\n      let bottom: number = vertices[1];\n\n      for (let j = 1; j < count; ++j) {\n        const x = vertices[Constant.vertexOffset + j * Constant.vertexStep];\n        const y = vertices[Constant.vertexOffset + j * Constant.vertexStep + 1];\n\n        if (x < left) {\n          left = x; // Min x\n        }\n\n        if (x > right) {\n          right = x; // Max x\n        }\n\n        if (y < top) {\n          top = y; // Min y\n        }\n\n        if (y > bottom) {\n          bottom = y; // Max y\n        }\n      }\n      return left <= pointX && pointX <= right && top <= pointY && pointY <= bottom;\n    }\n    /**\n     * 清理\n     */\n    private release():void{\n      if (this._motionManager != null) {\n        this._motionManager.release();\n        this._motionManager = null;\n      }\n\n      if (this._expressionManager != null) {\n        this._expressionManager.release();\n        this._expressionManager = null;\n      }\n\n      if (this._moc != null) {\n        this._moc.deleteModel(this._model);\n        this._moc.release();\n        this._moc = null;\n      }\n      this._motionGroups = null;\n      this._motionUrls = null;\n      this._textureUrls = null;\n      this._expressionNames = null;\n      this._expressionUrls = null;\n      this._modelMatrix = null;\n\n      for (let i = 0; i < this._texturePool.length; i++) {\n        let tex = this._texturePool[i];\n        tex.destroy();\n        Loader.clearRes(tex.url);\n      }\n      this._texturePool = null;\n      CubismPose.delete(this._pose);\n      CubismEyeBlink.delete(this._eyeBlink);\n      CubismBreath.delete(this._breath);\n\n      this._dragManager = null;\n      \n      CubismPhysics.delete(this._physics);\n      CubismModelUserData.delete(this._modelUserData);\n    }\n    /**\n     * @inheritdoc\n     * @param destroyTexture 是否销毁\n     */\n    public destroy(destroyTexture:boolean = true,destroyChildren?:boolean):void{\n      if(this.destroyed)\n        return;\n      Laya.stage.off(Event.RESIZE,this,this._onResize);\n      super.destroy(destroyChildren);\n      this.release();\n      this._pose = null;\n      this._eyeBlink = null;\n      this._breath = null;\n      this._physics = null;\n      this._modelUserData = null;\n    }\n\n    /**\n     * 事件触发时的标准处理\n     * 在播放过程中出现事件时进行处理。\n     * 假定被继承覆盖。\n     * 如果未覆盖，则输出日志。\n     * @param eventValue 触发事件的字符串数据\n     */\n    public motionEventFired(eventValue: csmString): void {\n      this.event(Event.CHANGE,eventValue.s);\n    }\n\n    /**\n     * 活动回调\n     * 回调以在CubismMotionQueueManager中注册事件。\n     * @param caller Motion经理管理触发的事件，以进行比较\n     * @param eventValue 触发事件的字符串数据\n     * @param customData CubismUserModel\n     */\n    public static cubismDefaultMotionEventCallback(\n      caller: CubismMotionQueueManager,\n      eventValue: csmString,\n      customData: Live2DModel\n    ):void{\n      customData.motionEventFired(eventValue);\n    }\n}","import { Live2DModel } from \"../model/Live2DModel\";\nimport { Live2DCubismFramework as cubismmodelsettingjson } from '../../framework/cubismmodelsettingjson';\nimport CubismModelSettingJson = cubismmodelsettingjson.CubismModelSettingJson;\nimport { Laya } from \"Laya\";\nimport { EventDispatcher } from \"laya/events/EventDispatcher\";\nimport { Loader } from \"laya/net/Loader\";\nimport { Handler } from \"laya/utils/Handler\";\n\n\nexport enum LoadStep {\n    LoadAssets,\n    LoadModel,\n    WaitLoadModel,\n    LoadExpression,\n    WaitLoadExpression,\n    LoadPhysics,\n    WaitLoadPhysics,\n    LoadPose,\n    WaitLoadPose,\n    SetupEyeBlink,\n    SetupBreath,\n    LoadUserData,\n    WaitLoadUserData,\n    SetupEyeBlinkIds,\n    SetupLipSyncIds,\n    SetupLayout,\n    LoadMotion,\n    WaitLoadMotion,\n    CompleteInitialize,\n    CompleteSetupModel,\n    LoadTexture,\n    WaitLoadTexture,\n    CompleteSetup\n}\n\nexport class Live2DLoader extends EventDispatcher {\n    private _modelHomeDir: string;\n    private _completeHandler: Handler;\n    private _model: Live2DModel;\n    public state: LoadStep;\n    private _setting: CubismModelSettingJson;\n    /**读取的所有的Json数据 */\n    public jsonUrls: Array<string>;\n\n    constructor() {\n        super();\n        this.jsonUrls = [];\n    }\n    /**\n     * 直接loadzip文件\n     * @param url \n     * @param complete \n     */\n    public loadZipAssets(resPath: string, filedName: string, dirName: string, complete: Handler = null) {\n        this._model = new Live2DModel();\n        this._model._modelHomeDir = this._modelHomeDir = dirName;\n        this._completeHandler = complete;\n\n        this.jsonUrls.push(`${dirName}/${dirName}.model3.json`);\n        var THIS = this;\n        Laya.loader.load(`${resPath}/${filedName}`, Handler.create(this, (buffer: ArrayBuffer) => {\n            let zip: JSZip = new JSZip(buffer);\n            let isloaded = THIS.loadModel3JsonByFiles(zip.files);\n            if (isloaded) {\n                isloaded = THIS.setupModelByFiles(zip.files);\n                if (isloaded) {\n                    THIS.loadCubismExpressionByFiles(zip.files);\n                    THIS.loadCubismPhysicsByFiles(zip.files);\n                    THIS.loadCubismPoseByFiles(zip.files);\n                    THIS.loadDetailsinitByFiles(zip.files);\n                    THIS.loadDetailsinit2ByFiles(zip.files);\n                    THIS.loadTextureByFiles(zip)\n                }\n            }\n\n\n\n\n\n        }), null, Loader.BUFFER);\n    }\n\n    private textureCount = 0;\n    public static readonly chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    public static btoa(input) {\n        var str = String (input);\n        for (\n          // initialize result and counter\n          var block, charCode, idx = 0, map = this.chars, output = '';\n          // if the next str index does not exist:\n          //   change the mapping table to \"=\"\n          //   check if d has no fractional digits\n          str.charAt (idx | 0) || (map = '=', idx % 1);\n          // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n          output += map.charAt (63 & block >> 8 - idx % 1 * 8)\n        ) {\n          charCode = str.charCodeAt (idx += 3 / 4);\n          if (charCode > 0xFF) {\n            throw new Error (\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n          }\n          block = block << 8 | charCode;\n        }\n        return output;\n      }\n\n    private loadTextureByFiles(zip: JSZip) {\n        let textureCount: number = this._setting.getTextureCount();\n        this._model._textureUrls = [];\n        let texturePath;\n        var THIS = this;\n        this.textureCount = textureCount;\n        for (let i = 0; i < textureCount; i++) {\n            texturePath = `${this._modelHomeDir}/${this._setting.getTextureFileName(i)}`;\n            this._model._textureUrls.push({ url: texturePath, type: \"nativeimage\" });\n            let file = zip.files[texturePath];\n            if (file) {\n                let bytes = file.asArrayBuffer();\n                if (bytes) {\n                    var image = new Laya.Browser.window.Image();\n                    image.crossOrigin = \"\";\n                    Laya.Loader.cacheRes(texturePath, image);\n                    var onload = function (e) {\n                        e.target.onerror = null;\n                        e.target.onload = null;\n                        THIS.checkTextureAllLoaded();\n                    };\n                    var onerror = function (e) {\n                        e.target.onerror = null;\n                        e.target.onload = null;\n                    };\n                    image.onerror = onerror;\n                    image.onload = onload;\n                    /**可以使用glTFBase64Tool.encode */\n                    let binary = Laya.glTFBase64Tool.encode(bytes);\n                    let pIndex = file.name.indexOf('.');\n                    let type = file.name.substr(pIndex + 1);\n                    let re = 'data:image/' + type + ';base64,'\n                    image.src = re + binary;\n                }\n            }\n        }\n    }\n\n    private checkTextureAllLoaded() {\n        this.textureCount--;\n        if (this.textureCount <= 0) {\n            this._completeHandler && this._completeHandler.runWith([this._model, this]);\n        }\n    }\n\n    private loadDetailsinit2ByFiles(files: any) {\n        this._model.setupEyeBlinkIds();\n        this._model.setupLipSyncIds();\n        this._model.setupLayout();\n        this._model.loadCubismMotion();\n        if (this._model.allMotionCount) {\n            this.preMotionUrls();\n            for (let i = 0; i < this._model._motionUrls.length; i++) {\n                const item = this._model._motionUrls[i];\n                let file = files[item.url];\n                if (file) {\n                    let buffer = file.asArrayBuffer();\n                    if (buffer) {\n                        Laya.Loader.cacheRes(item.url, buffer);\n                    }\n\n                }\n            }\n            this._model.loadMotionGroup();\n            this._model._motionUrls = null;\n        }\n\n    }\n\n    private loadDetailsinitByFiles(files: any): boolean {\n        let isLoad: boolean = false;\n        this._model.setupEyeBlink();\n        this._model.setupBreath();\n        let userDataFile = this._setting.getUserDataFile();\n        if (userDataFile != '') {\n            let url = `${this._modelHomeDir}/${userDataFile}`;\n            this.jsonUrls.push(url);\n            let file = files[url];\n            if (file) {\n                let buffer = file.asArrayBuffer();\n                if (buffer) {\n                    this._model.loadUserData(buffer, buffer.byteLength);\n                    isLoad = true;\n                }\n            }\n        }\n        return isLoad;\n    }\n\n    private loadModel3JsonByFiles(files: any): boolean {\n        let isLoad: boolean = false;\n        let file = files[this._modelHomeDir + \"/\" + this._modelHomeDir + \".model3.json\"];\n        if (file) {\n            let buffer = file.asArrayBuffer();\n            if (buffer) {\n                this._model.createSetting(buffer);\n                this._setting = this._model.setting;\n                this.state = LoadStep.LoadModel;\n                isLoad = true;\n            }\n        }\n        return isLoad;\n    }\n\n    private setupModelByFiles(files: any): boolean {\n        let isLoad: boolean = false;\n        let modelFileName = this._setting.getModelFileName();\n        let url = `${this._modelHomeDir}/${modelFileName}`;\n        this.jsonUrls.push(url);\n        let file = files[url];\n        if (file) {\n            let buffer = file.asArrayBuffer()\n            this._model.loadModel(buffer);\n            this.state = LoadStep.LoadExpression;\n            isLoad = true;\n        }\n        else\n            isLoad = true;\n        return isLoad;\n    }\n\n    private loadCubismExpressionByFiles(files: any) {\n        let expressionCount: number = this._setting.getExpressionCount();\n        if (expressionCount > 0) {\n            this._model._expressionUrls = [];\n            this._model._expressionNames = [];\n            let url: string;\n            for (let i = 0; i < expressionCount; i++) {\n                this._model._expressionNames.push(\n                    this._setting.getExpressionName(i)\n                );\n                url = `${this._modelHomeDir}/${this._setting.getExpressionFileName(i)}`;\n                this.jsonUrls.push(url);\n                this._model._expressionUrls.push(\n                    url\n                );\n            }\n            this.state = LoadStep.WaitLoadExpression;\n            for (let i = 0; i < expressionCount; i++) {\n                let file = files[this._model._expressionUrls[i]];\n                let buffer: ArrayBuffer = file.asArrayBuffer();\n                if (!buffer) {\n                    console.log(`[WARNNING]:${this._model._expressionUrls[i]} data load fail!`);\n                } else\n                    this._model.loadExpression(buffer, buffer.byteLength, this._model._expressionNames[i]);\n            }\n            this._model._expressionUrls = null;\n        }\n    }\n    /**\n    * 加载物理\n    */\n    private loadCubismPhysicsByFiles(files: any) {\n        let physicsFileName: string = this._setting.getPhysicsFileName();\n        if (physicsFileName != \"\") {\n            let url = `${this._modelHomeDir}/${physicsFileName}`;\n            this.jsonUrls.push(url);\n            let file = files[url];\n            if (file) {\n                let buffer = file.asArrayBuffer();\n                this._model.loadPhysics(buffer, buffer.byteLength);\n            }\n        }\n\n    }\n\n    private loadCubismPoseByFiles(files: any) {\n        let poseFileName = this._setting.getPoseFileName();\n        if (poseFileName != '') {\n            let url = `${this._modelHomeDir}/${poseFileName}`;\n            this.jsonUrls.push(url);\n            let file = files[url];\n            if (file) {\n                let buffer = file.asArrayBuffer();\n                this._model.loadPose(buffer, buffer.byteLength);\n            }\n        }\n    }\n\n    /**\n     * 从放置model3.json的目录和文件路径生成模型\n     * @param dir \n     * @param fileName \n     * @param complete 完成回调，失败时会返回null complete(model,thisloader)\n     */\n    public loadAssets(dir: string, fileName: string, complete: Handler = null): void {\n        this._model = new Live2DModel();\n        this._model._modelHomeDir = this._modelHomeDir = dir;\n        this._completeHandler = complete;\n        let url = `${dir}/${fileName}`;\n        this.jsonUrls.push(url);\n        Laya.loader.load(url, Handler.create(this, this._loadAssetsComplete), null, Loader.BUFFER);\n    }\n\n    private _loadAssetsComplete(buffer: ArrayBuffer) {\n        if (!buffer) {\n            console.error(\"loadAssets fail!\");\n            this._completeHandler && this._completeHandler.run();\n            return;\n        }\n        this._model.createSetting(buffer);\n        this._setting = this._model.setting;\n        this.state = LoadStep.LoadModel;\n        this.setupModel();\n    }\n\n    /**\n     * 从model3.json生成模型。\n     * 根据model3.json的描述生成模型，运动和物理等组件。\n     */\n    private setupModel() {\n        let modelFileName = this._setting.getModelFileName();\n        if (modelFileName != '') {\n            this.state = LoadStep.WaitLoadModel;\n            let url = `${this._modelHomeDir}/${modelFileName}`;\n            this.jsonUrls.push(url);\n            Laya.loader.load(url, Handler.create(this, this._setupModelComplete), null, Loader.BUFFER);\n        } else {\n            console.warn('Model data does not exist.');\n        }\n    }\n\n    private _setupModelComplete(buffer: ArrayBuffer): void {\n        if (!buffer) {\n            console.error(\"loadModel fail!\");\n            this._completeHandler && this._completeHandler.run();\n            return;\n        }\n        this._model.loadModel(buffer);\n        this.state = LoadStep.LoadExpression;\n        this.loadCubismExpression();\n    }\n\n    private loadCubismExpression(): void {\n        let expressionCount: number = this._setting.getExpressionCount();\n        if (expressionCount > 0) {\n            this._model._expressionUrls = [];\n            this._model._expressionNames = [];\n            let url: string;\n            for (let i = 0; i < expressionCount; i++) {\n                this._model._expressionNames.push(\n                    this._setting.getExpressionName(i)\n                );\n                url = `${this._modelHomeDir}/${this._setting.getExpressionFileName(i)}`;\n                this.jsonUrls.push(url);\n                this._model._expressionUrls.push(\n                    url\n                );\n            }\n            this.state = LoadStep.WaitLoadExpression;\n            Laya.loader.load(this._model._expressionUrls, Handler.create(this, this._loadCubismExpressionComplete, [expressionCount]), null, Loader.BUFFER);\n        } else {\n            this.state = LoadStep.LoadPhysics;\n            this.loadCubismPhysics();\n        }\n    }\n\n    private _loadCubismExpressionComplete(count: number): void {\n        for (let i = 0; i < count; i++) {\n            let buffer: ArrayBuffer = Laya.loader.getRes(this._model._expressionUrls[i]);\n            if (!buffer) {\n                console.log(`[WARNNING]:${this._model._expressionUrls[i]} data load fail!`);\n            } else\n                this._model.loadExpression(buffer, buffer.byteLength, this._model._expressionNames[i]);\n        }\n        this._model._expressionUrls = null;\n        this.state = LoadStep.LoadPhysics;\n        this.loadCubismPhysics();\n    }\n\n    /**\n     * 加载物理\n     */\n    private loadCubismPhysics(): void {\n        let physicsFileName: string = this._setting.getPhysicsFileName();\n        if (physicsFileName != '') {\n            this.state = LoadStep.WaitLoadPhysics;\n            let url = `${this._modelHomeDir}/${physicsFileName}`;\n            this.jsonUrls.push(url);\n            Laya.loader.load(url, Handler.create(this, this._loadCubismPhysicsComplete), null, Loader.BUFFER);\n        } else {\n            this.state = LoadStep.LoadPose;\n            this.loadCubismPose();\n        }\n    }\n\n    private _loadCubismPhysicsComplete(buffer: ArrayBuffer): void {\n        if (!buffer) {\n            console.log(\"[WARNNING]:Physics data load fail!\");\n        } else {\n            this._model.loadPhysics(buffer, buffer.byteLength);\n        }\n        this.state = LoadStep.LoadPose;\n        this.loadCubismPose();\n    }\n    /**\n     * Pose\n     */\n    private loadCubismPose(): void {\n        let poseFileName = this._setting.getPoseFileName();\n        if (poseFileName != '') {\n            this.state = LoadStep.WaitLoadPose;\n            let url = `${this._modelHomeDir}/${poseFileName}`;\n            this.jsonUrls.push(url);\n            Laya.loader.load(url, Handler.create(this, this._loadCubismPoseComplete), null, Loader.BUFFER);\n        } else {\n            this.state = LoadStep.SetupEyeBlink;\n            this.detailsinit();\n        }\n    }\n\n    private _loadCubismPoseComplete(buffer: ArrayBuffer): void {\n        if (!buffer) {\n            console.log(\"[WARNNING]:Pose data load fail!\");\n        } else\n            this._model.loadPose(buffer, buffer.byteLength);\n        this.state = LoadStep.SetupEyeBlink;\n        this.detailsinit();\n    }\n\n    private detailsinit(): void {\n        this._model.setupEyeBlink();\n        this.state = LoadStep.SetupBreath;\n        this._model.setupBreath();\n        this.state = LoadStep.LoadUserData;\n        let userDataFile = this._setting.getUserDataFile();\n        if (userDataFile != '') {\n            this.state = LoadStep.WaitLoadUserData;\n            let url = `${this._modelHomeDir}/${userDataFile}`;\n            this.jsonUrls.push(url);\n            Laya.loader.load(url, Handler.create(this, this._loadUserDataComplete), null, Loader.BUFFER);\n        } else {\n            this.state = LoadStep.SetupEyeBlinkIds;\n            this.detailsinit2();\n        }\n    }\n\n    private _loadUserDataComplete(buffer: ArrayBuffer): void {\n        if (!buffer) {\n            console.log(\"[WARNNING]:UserData load fail!\");\n        } else {\n            this._model.loadUserData(buffer, buffer.byteLength);\n        }\n        this.state = LoadStep.SetupEyeBlinkIds;\n        this.detailsinit2();\n    }\n\n    /**\n     * 第二部分无加载初始化\n     */\n    private detailsinit2(): void {\n        this._model.setupEyeBlinkIds()\n        this.state = LoadStep.SetupLipSyncIds;\n        this._model.setupLipSyncIds();\n        this.state = LoadStep.SetupLayout;\n        this._model.setupLayout();\n        this.state = LoadStep.WaitLoadMotion;\n        this._model.loadCubismMotion();\n        if (this._model.allMotionCount) {\n            this.preMotionUrls();\n            this.state = LoadStep.LoadMotion;\n            Laya.loader.load(this._model._motionUrls, Handler.create(this, this._preLoadMotionGroupComplete));\n        } else {\n            this.state = LoadStep.LoadTexture;\n            this.loadTexture();\n        }\n    }\n\n    /**\n     * 准备motion路径Urls\n     */\n    public preMotionUrls(): void {\n        this._model._motionUrls = [];\n        let motionGroups = this._model._motionGroups;\n        let group: string, count: number, motionFileName: string;\n        for (let i = 0; i < motionGroups.length; i++) {\n            group = motionGroups[i];\n            count = this._setting.getMotionCount(group)\n            for (let j = 0; j < count; j++) {\n                motionFileName = `${this._modelHomeDir}/${this._setting.getMotionFileName(group, j)}`;\n                this.jsonUrls.push(motionFileName);\n                this._model._motionUrls.push({\n                    url: motionFileName,\n                    key: group,\n                    index: j,\n                    name: `${group}_${j}`,\n                    type: Loader.BUFFER\n                });\n            }\n        }\n    }\n\n    private _preLoadMotionGroupComplete(): void {\n        this._model.loadMotionGroup();\n        this._model._motionUrls = null;\n        this.state = LoadStep.LoadTexture;\n        this.loadTexture();\n    }\n\n    private loadTexture(): void {\n        if (this.state !== LoadStep.LoadTexture) {\n            return;\n        }\n        let textureCount: number = this._setting.getTextureCount();\n        this._model._textureUrls = [];\n        let texturePath;\n        for (let i = 0; i < textureCount; i++) {\n            texturePath = `${this._modelHomeDir}/${this._setting.getTextureFileName(i)}`;\n            this._model._textureUrls.push({ url: texturePath, type: \"nativeimage\" });\n        }\n        Laya.loader.load(this._model._textureUrls.slice(), Handler.create(this, this.loadComplete))\n    }\n    /**\n     * 整体加载完成\n     */\n    private loadComplete(): void {\n        this.state = LoadStep.CompleteSetup;\n        this._completeHandler && this._completeHandler.runWith([this._model, this]);\n    }\n\n    /**\n     * 清理数据\n     * @param clearJson 是否清理所有加载的json\n     * @default true\n     */\n    public clear(clearJson: boolean = true): void {\n        this._modelHomeDir = null\n        this._setting = null;\n        this._model = null;\n        if (clearJson) {\n            for (let index = 0; index < this.jsonUrls.length; index++) {\n                let url = this.jsonUrls[index];\n                Laya.loader.clearRes(url);\n            }\n        }\n        this.jsonUrls.length = 0;;\n        this.state = LoadStep.LoadAssets;\n    }\n}","import { Delegate } from \"./Adapter/core/Delegate\";\nimport { Live2DLoader } from \"./Adapter/net/Live2DLoader\";\nimport { Live2DModel } from \"./Adapter/model/Live2DModel\";\n\nimport { Live2DCubismFramework as Live2Drenderer } from \"./Adapter/render/Live2Drenderer\";\nimport { Live2DCubismFramework as cubismphysics } from \"./framework/physics/cubismphysics\";\nimport { Live2DCubismFramework as cubismvector2 } from './framework/math/cubismvector2';\nimport CubismShader_Laya = Live2Drenderer.CubismShader_Laya;\nimport { Config } from \"Config\";\nimport { Laya } from \"Laya\";\nimport { Box } from \"laya/ui/Box\";\nimport { Stage } from \"laya/display/Stage\";\nimport { Handler } from \"laya/utils/Handler\";\nimport { Event } from \"laya/events/Event\";\nimport { Sprite } from \"laya/display/Sprite\";\nimport { Widget } from \"laya/ui/Widget\";\nimport { Browser } from \"laya/utils/Browser\";\n\n\nclass Live2DDemo {\n\tprivate _model: Live2DModel;\n\tprivate _modelurls = [\n\t\t\"Haru\", \"Hiyori\", \"Mark\", \"Natori\", \"Rice\"\n\t];\n\tprivate index: number = 2;\n\tprivate sp: Box;\n\tconstructor() {\n\t\tConfig.useRetinalCanvas = true;\n\t\tLaya.init(720, 1280);\n\t\tLaya.stage.scaleMode = Stage.SCALE_FIXED_AUTO;\n\t\t// Laya.stage.screenMode = Stage.SCREEN_HORIZONTAL;\n\n\t\tLaya.alertGlobalError(true);\n\t\t//初始化渲染gl相关\n\t\tCubismShader_Laya.__init__();\n\t\t//编译live2dshader\n\t\tCubismShader_Laya.getInstance().generateShaders();\n\t\t//初始化live2d计时\n\t\tDelegate.instance.initializeCubism();\n\t\tthis.initRedBtn();\n\t}\n\n\tprivate changeModel() {\n\t\tif (this._model) {\n\t\t\tthis._model.destroy();\n\t\t}\n\t\tconsole.log(Browser.now())\n\t\tthis._model = null;\n\t\tlet loader = new Live2DLoader();\n\t\t// let url = this._modelurls[this.index % this._modelurls.length];\n\t\tlet url = \"Haru\";\n\t\tthis.index++;\n\t\t// loader.loadAssets(\"res/\"+url,url+\".model3.json\",Handler.create(this,this._loadSuccess));\n\t\t\n\t\tloader.loadZipAssets(\"res\",\"Hiyori.zip\", \"Hiyori\", Handler.create(this, this._loadSuccess));\n\t}\n\tprivate _loadSuccess(model: Live2DModel, loader: Live2DLoader) {\n\t\tif (!model) return;\n\t\tif (!this.sp) {\n\t\t\tthis.sp = new Box();//this.sp未红色按钮\n\t\t\tLaya.stage.addChild(this.sp);\n\t\t}\n\t\tthis._model = model;\n\t\tmodel.isAutoPlay = false;\n\t\t// this._model.addChild(this.sp);\n\t\t// model.pivot(model.width/2,model.height/2)\n\n\t\t/** 模型初始化 */\n\t\tmodel.initModel();\n\t\tLaya.stage.addChildAt(model, 0);\n\t\t// this.sp.addChild(model);\n\t\tmodel.scale(0.2, 0.2);\n\t\tlet widget = model.addComponent(Widget) as Widget;\n\t\t// widget.centerX = widget.centerY = 0;\n\t\tloader.clear();\n\t\tmodel.on(Event.MOUSE_DOWN, this, this.onMouseDown);\n\t\tmodel.on(Event.CHANGE, this, this.aboutEvent);\n\t\tLaya.stage.on(Event.MOUSE_DOWN, this, this.stageOnMouseDown);\n\n\t}\n\n\tprivate initRedBtn() {\n\t\tlet sp = new Sprite();\n\t\tLaya.stage.addChild(sp)\n\t\tsp.graphics.drawRect(0, 0, 100, 100, \"red\");\n\t\tsp.mouseEnabled = true;\n\t\tsp.mouseThrough = true\n\t\tsp.x = Laya.stage.width - 100;\n\t\tsp.on(Event.MOUSE_DOWN, this, this.changeModel)\n\t}\n\n\tprivate aboutEvent(eventValue): void {\n\t\tconsole.log(eventValue);\n\t}\n\tprivate stageOnMouseDown(): void {\n\t\tLaya.stage.on(Event.MOUSE_MOVE, this, this.onMouseMove)\n\t\tLaya.stage.on(Event.MOUSE_OUT, this, this.onMouseUp)\n\t\tLaya.stage.on(Event.MOUSE_UP, this, this.onMouseUp)\n\t}\n\tprivate onMouseDown(): void {\n\t\tif (!this._model) {\n\t\t\treturn\n\t\t}\n\t\tlet model = this._model;\n\t\tif (model.live2DHitTest(\"Body\", Laya.stage.mouseX, Laya.stage.mouseY)) {\n\t\t\tconsole.log(\"点击到了Body\");\n\t\t\tmodel.startRandomMotion(\"TapBody\", 3);\n\t\t} else\n\t\t\tif (model.live2DHitTest(\"Head\", Laya.stage.mouseX, Laya.stage.mouseY)) {\n\t\t\t\tconsole.log(\"点到Head了\")\n\t\t\t\tmodel.setRandomExpression();\n\t\t\t}\n\n\t}\n\n\tprivate onMouseUp() {\n\t\tLaya.stage.off(Event.MOUSE_MOVE, this, this.onMouseMove)\n\t\tLaya.stage.off(Event.MOUSE_OUT, this, this.onMouseUp)\n\t\tLaya.stage.off(Event.MOUSE_UP, this, this.onMouseUp)\n\t}\n\n\tprivate onMouseMove() {\n\t\tif (!this._model) {\n\t\t\treturn\n\t\t}\n\t\tthis._model.setDragging(Laya.stage.mouseX, Laya.stage.mouseY)\n\t}\n\n}\n\nnew Live2DDemo();"],"names":["Live2DCubismFramework","cubismframework","csmvector","csmmap","csmstring","csmString","cubismid","csmVector","cubismmatrix44","cubismjson","cubismidmanager","cubismrenderer","live2dcubismframework","Csm_Option","cubismvector2","cubismmath","acubismmotion","cubismmotionqueueentry","cubismmotionqueuemanager","CubismMatrix44","cubismmotioninternal","CubismMath","CubismFramework","ACubismMotion","cubismmotionjson","CubismJson","icubismmodelsetting","csmMap","cubismmodel","CubismVector2","cubismphysicsjson","cubismphysicsinternal","cubismmodeluserdatajson","Pool","WebGLContext","cubsimmatrix44","csmrect","CubismRenderer","CubismBlendMode","Browser","LayaGL","Laya","Stat","cubismrenderer_webgl","cubismmodeluserdata","Constant","cubismpose","cubismmoc","cubismbreath","cubismeyeblink","cubismmodelsettingjson","cubismmotion","cubismphysics","cubismexpressionmotion","cubismmodelmatrix","cubismdefaultparameterid","cubismmotionmanager","cubismtargetpoint","Sprite","Matrix","Event","Texture2D","TextureFormat","WarpMode","Loader","Point","EventDispatcher","Handler","Live2Drenderer","Config","Stage","Box","Widget"],"mappings":"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"}